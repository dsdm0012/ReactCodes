{"ast":null,"code":"import React,{useRef,useEffect}from'react';import classes from'./NoticeBoxContainer.module.css';import NoticeBox from'./NoticeBox';import{putnoticeIddash}from'../../../../CommonApps/AllAPICalls';import{jsx as _jsx}from\"react/jsx-runtime\";function containsObject(obj,list){var i;for(i=0;i<list.length;i++){if(list[i].id===obj.id){return true;}}return false;}var NoticeBoxContainer=function NoticeBoxContainer(props){//console.log(\"NoticeBox Container rendering. . .\");\nvar isMounted=useRef(false);useEffect(function(){isMounted.current=true;props.passMountInfo(true);return function(){isMounted.current=false;props.passMountInfo(false);};},[props]);var markAsReadHandler=function markAsReadHandler(noticeId){//console.log(\"mark as read\", noticeId);     \t   \nputnoticeIddash({noticeId:noticeId});window.location.reload(false);};return/*#__PURE__*/_jsx(\"div\",{className:classes.noticeBoxContainer,children:props.dashboardNotice!==null&&props.dashboardNotice.dashnotices!==null&&props.dashboardNotice.dashnotices.map(function(notice,index){var list=props.userData.noticeids;var isRead=containsObject(notice,list);var noticeId=notice.id;return/*#__PURE__*/_jsx(NoticeBox,{read:!isRead,Notice:notice,markAsRead:function markAsRead(){return markAsReadHandler(noticeId);}},index);})});};export default NoticeBoxContainer;","map":{"version":3,"sources":["/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/MainApps/Dashboard/General/Notices/NoticeBoxContainer.js"],"names":["React","useRef","useEffect","classes","NoticeBox","putnoticeIddash","containsObject","obj","list","i","length","id","NoticeBoxContainer","props","isMounted","current","passMountInfo","markAsReadHandler","noticeId","window","location","reload","noticeBoxContainer","dashboardNotice","dashnotices","map","notice","index","userData","noticeids","isRead"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAcC,MAAd,CAAqBC,SAArB,KAAqC,OAArC,CACA,MAAOC,CAAAA,OAAP,KAAoB,iCAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CAGA,OAAQC,eAAR,KAA8B,oCAA9B,C,2CAEA,QAASC,CAAAA,cAAT,CAAwBC,GAAxB,CAA6BC,IAA7B,CAAmC,CAG/B,GAAIC,CAAAA,CAAJ,CACA,IAAKA,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAGD,IAAI,CAACE,MAArB,CAA6BD,CAAC,EAA9B,CAAkC,CAC9B,GAAID,IAAI,CAACC,CAAD,CAAJ,CAAQE,EAAR,GAAeJ,GAAG,CAACI,EAAvB,CAA2B,CACvB,MAAO,KAAP,CACH,CACJ,CAED,MAAO,MAAP,CACH,CAOD,GAAMC,CAAAA,kBAAkB,CAAE,QAApBA,CAAAA,kBAAoB,CAACC,KAAD,CAAS,CAGhC;AAGA,GAAMC,CAAAA,SAAS,CAAGb,MAAM,CAAC,KAAD,CAAxB,CAECC,SAAS,CAAC,UAAM,CAChBY,SAAS,CAACC,OAAV,CAAoB,IAApB,CACAF,KAAK,CAACG,aAAN,CAAoB,IAApB,EACA,MAAO,WAAM,CACLF,SAAS,CAACC,OAAV,CAAoB,KAApB,CACAF,KAAK,CAACG,aAAN,CAAoB,KAApB,EACP,CAHD,CAIA,CAPS,CAOP,CAACH,KAAD,CAPO,CAAT,CAeD,GAAMI,CAAAA,iBAAiB,CAAC,QAAlBA,CAAAA,iBAAkB,CAACC,QAAD,CAAY,CAC7B;AACNb,eAAe,CAAC,CAACa,QAAQ,CAARA,QAAD,CAAD,CAAf,CACAC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB,EACA,CAJD,CAoBH,mBAEA,YAAK,SAAS,CAAElB,OAAO,CAACmB,kBAAxB,UAMKT,KAAK,CAACU,eAAN,GAAyB,IAAzB,EAAiCV,KAAK,CAACU,eAAN,CAAsBC,WAAtB,GAAqC,IAAtE,EAA+EX,KAAK,CAACU,eAAN,CAAsBC,WAAtB,CAAkCC,GAAlC,CAAsC,SAACC,MAAD,CAASC,KAAT,CAAiB,CAEhI,GAAInB,CAAAA,IAAI,CAAGK,KAAK,CAACe,QAAN,CAAeC,SAA1B,CACP,GAAIC,CAAAA,MAAM,CAAGxB,cAAc,CAACoB,MAAD,CAASlB,IAAT,CAA3B,CACO,GAAIU,CAAAA,QAAQ,CAAGQ,MAAM,CAACf,EAAtB,CACD,mBAAO,KAAC,SAAD,EAAW,IAAI,CAAE,CAACmB,MAAlB,CACI,MAAM,CAAEJ,MADZ,CAGW,UAAU,CAAE,4BAAIT,CAAAA,iBAAiB,CAACC,QAAD,CAArB,EAHvB,EAESS,KAFT,CAAP,CAOH,CAZ6E,CANpF,EAFA,CA8BC,CAzED,CA4EA,cAAef,CAAAA,kBAAf","sourcesContent":["import React,{useRef,useEffect} from 'react';\nimport classes from './NoticeBoxContainer.module.css';\nimport NoticeBox from './NoticeBox';\n\n\nimport {putnoticeIddash} from '../../../../CommonApps/AllAPICalls';\n\nfunction containsObject(obj, list) {\n\n\n    var i;\n    for (i = 0; i < list.length; i++) {\n        if (list[i].id === obj.id) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n\n\n\n\n\nconst NoticeBoxContainer =(props)=>{\n\n\n   //console.log(\"NoticeBox Container rendering. . .\");\n\n\n   const isMounted = useRef(false);\n\n    useEffect(() => {\n    isMounted.current = true;\n    props.passMountInfo(true);\n    return () => {\n            isMounted.current = false\n            props.passMountInfo(false);\n    }\n   }, [props]);\n\n\n\n\n\n\n\n   const markAsReadHandler=(noticeId)=>{\n          //console.log(\"mark as read\", noticeId);     \t   \n\t   putnoticeIddash({noticeId});\t  \n\t   window.location.reload(false);\n   }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nreturn (\n\n<div className={classes.noticeBoxContainer}>\n\n\n\n\n\n   { props.dashboardNotice !==null && props.dashboardNotice.dashnotices !==null &&  props.dashboardNotice.dashnotices.map((notice, index)=>{\n\n           let list = props.userData.noticeids;\n\t   let isRead = containsObject(notice, list);\n           let noticeId = notice.id;\n          return <NoticeBox read={!isRead} \n\t                    Notice={notice} \n\t                    key={index}\n                            markAsRead={()=>markAsReadHandler(noticeId)}\n\n\t\t   />\n\n      })\n   }\n\n\n\n\n</div>\n\n);\n\n}\n\n\nexport default NoticeBoxContainer;\n"]},"metadata":{},"sourceType":"module"}