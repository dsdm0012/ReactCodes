{"ast":null,"code":"import _slicedToArray from\"/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useRef}from\"react\";//import classes from \"./MainAppContainer.module.css\"\n//import classes from \"./MainAppContainer.module.css\"\nimport classes from\"../../CommonAppUtilities/MainAppContainer.module.css\";import TopInfoBarGeneral from'./TopInfoBarGeneral';import TopTitleBar from'../../CommonAppUtilities/TopTitleBar';import GeneralContentDiv from'./GeneralContentDiv';import{BsLayoutTextSidebarReverse,BsFillCameraReelsFill,BsPencilSquare}from'react-icons/bs';import{GiTeacher}from\"react-icons/gi\";import{CgClipboard}from'react-icons/cg';import Separator from\"../../CommonAppUtilities/Separator\";import TopToolBox from'./components/Teacher/TopToolBoxV1';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var General=function General(props){var _useState=useState(props.sideNavBarWidth),_useState2=_slicedToArray(_useState,2),sideNavBarWidth=_useState2[0],setSideNavBarWidth=_useState2[1];var _useState3=useState('calc( 100% - var(--sideNavBarWidth) )'),_useState4=_slicedToArray(_useState3,2),mainAppContainerWidth=_useState4[0],setMainAppContainerWidth=_useState4[1];var isMounted=useRef(false);useEffect(function(){isMounted.current=true;setSideNavBarWidth(props.sideNavBarWidth);if(props.sideNavBarWidth===\"var(--sideNavBarWidth)\"){setMainAppContainerWidth('calc( 100% - var(--sideNavBarWidth) )');}if(props.sideNavBarWidth===\"var(--sideNavBarWidthOnContract)\"){setMainAppContainerWidth('calc( 100% - var(--sideNavBarWidthOnContract) )');}return function(){};},[props.sideNavBarWidth]);useEffect(function(){isMounted.current=true;props.passMountInfo(true);return function(){isMounted.current=false;props.passMountInfo(false);};},[props]);var title=\"General\";var mainAppContainerStyle={left:sideNavBarWidth,width:mainAppContainerWidth};var infoBarActiveButtonColor={color:'white',backgroundColor:'#919191'};var showcreateCourseForm=function showcreateCourseForm(){};var _useState5=useState({buttonBkgColor:'var(--clickBtnColorDashBackground)',buttonTxtColor:'var(--clickBtnColorDash)',boxBkgColor:'white',boxTxtColor:'var(--themeColor)',rightTopBoxColor:'green',buttonText:'+Create a Course',mainText:'TOTAL COURSES',mainNumber:1,topRightText:'Ongoing',topRightNumber:1,icon:{BsLayoutTextSidebarReverse:BsLayoutTextSidebarReverse},iconName:\"Courses\"}),_useState6=_slicedToArray(_useState5,2),toolBoxStyle1=_useState6[0],setToolBoxStyle1=_useState6[1];return/*#__PURE__*/_jsxs(\"div\",{className:classes.mainAppContainer,style:mainAppContainerStyle,children:[/*#__PURE__*/_jsx(TopInfoBarGeneral,{styles:infoBarActiveButtonColor,selectedCourse:props.selectedCourse}),/*#__PURE__*/_jsx(Separator,{}),/*#__PURE__*/_jsx(GeneralContentDiv,{dashboardCourses:props.dashboardCourses,socketObj:props.socketObj,userData:props.userData,rerender:props.rerender})]});};export default General;","map":{"version":3,"sources":["/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/MainApps/Dashboard/General/General.js"],"names":["React","useState","useEffect","useRef","classes","TopInfoBarGeneral","TopTitleBar","GeneralContentDiv","BsLayoutTextSidebarReverse","BsFillCameraReelsFill","BsPencilSquare","GiTeacher","CgClipboard","Separator","TopToolBox","General","props","sideNavBarWidth","setSideNavBarWidth","mainAppContainerWidth","setMainAppContainerWidth","isMounted","current","passMountInfo","title","mainAppContainerStyle","left","width","infoBarActiveButtonColor","color","backgroundColor","showcreateCourseForm","buttonBkgColor","buttonTxtColor","boxBkgColor","boxTxtColor","rightTopBoxColor","buttonText","mainText","mainNumber","topRightText","topRightNumber","icon","iconName","toolBoxStyle1","setToolBoxStyle1","mainAppContainer","selectedCourse","dashboardCourses","socketObj","userData","rerender"],"mappings":"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","sourcesContent":["import React,{useState,useEffect,useRef} from \"react\";\n//import classes from \"./MainAppContainer.module.css\"\n//import classes from \"./MainAppContainer.module.css\"\nimport classes from \"../../CommonAppUtilities/MainAppContainer.module.css\"\n\nimport TopInfoBarGeneral from './TopInfoBarGeneral';\nimport TopTitleBar from '../../CommonAppUtilities/TopTitleBar';\nimport GeneralContentDiv from './GeneralContentDiv';\n\n\nimport {BsLayoutTextSidebarReverse, BsFillCameraReelsFill, BsPencilSquare} from 'react-icons/bs';\nimport {GiTeacher} from \"react-icons/gi\";\n\nimport {CgClipboard} from 'react-icons/cg';\nimport Separator from \"../../CommonAppUtilities/Separator\";\n\nimport TopToolBox from './components/Teacher/TopToolBoxV1';\n\n\n\n\n\n\nconst General=(props)=>{\n\n   \n   const [sideNavBarWidth,setSideNavBarWidth]=useState(props.sideNavBarWidth);\n   const [mainAppContainerWidth,setMainAppContainerWidth]=useState('calc( 100% - var(--sideNavBarWidth) )');\t\n\n   const isMounted = useRef(false);\n\n\n   useEffect(() => {\n      isMounted.current = true;\t   \n      setSideNavBarWidth(props.sideNavBarWidth);\n      if(props.sideNavBarWidth===\"var(--sideNavBarWidth)\"){setMainAppContainerWidth('calc( 100% - var(--sideNavBarWidth) )');}\n      if(props.sideNavBarWidth===\"var(--sideNavBarWidthOnContract)\"){setMainAppContainerWidth('calc( 100% - var(--sideNavBarWidthOnContract) )');}\n\n\n      return () => { \n      }\n\n   }, [props.sideNavBarWidth]);\n\n\n   useEffect(() => {\n    isMounted.current = true;\n    props.passMountInfo(true);\t   \n    return () => { \n\t    isMounted.current = false \n            props.passMountInfo(false);\n    }\n   }, [props]);\n\n\n\n\n\n\n\n   let title=\"General\"\t\n   let mainAppContainerStyle={left:sideNavBarWidth, width:mainAppContainerWidth}\n   const infoBarActiveButtonColor = {color: 'white',backgroundColor: '#919191'}\n\n   const showcreateCourseForm=()=>{\n\n   }\n\n      const [toolBoxStyle1, setToolBoxStyle1] = useState(\n     {\n        buttonBkgColor: 'var(--clickBtnColorDashBackground)',\n        buttonTxtColor:'var(--clickBtnColorDash)',\n        boxBkgColor: 'white',\n        boxTxtColor:'var(--themeColor)',\n        rightTopBoxColor: 'green',\n        buttonText:'+Create a Course',\n        mainText:'TOTAL COURSES',\n        mainNumber:1,\n        topRightText:'Ongoing',\n        topRightNumber:1,\n        icon:{BsLayoutTextSidebarReverse},\n        iconName:\"Courses\"\n     });\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   return(\n\n      <div className={classes.mainAppContainer} style={mainAppContainerStyle} >\n  \t    \n          <TopInfoBarGeneral styles={infoBarActiveButtonColor} selectedCourse={props.selectedCourse}/>\n       \n          \n          <Separator/>\n\t   {/*\t    \n          <TopTitleBar title={title}/>\n\t  */}   \n          <GeneralContentDiv \n\t     dashboardCourses={props.dashboardCourses}\n\t     socketObj = {props.socketObj}\n\t     userData = {props.userData}\n\t     rerender={props.rerender}\n\t     />\n      \n        \n\n\n         \n\n\n\n\n        </div>\n      \n\n   );\n}\n\nexport default General;\n\n"]},"metadata":{},"sourceType":"module"}