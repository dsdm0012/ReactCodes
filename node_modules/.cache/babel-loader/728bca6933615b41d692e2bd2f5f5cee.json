{"ast":null,"code":"var _jsxFileName = \"/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/MainApps/Dashboard/Subject/Syllabus/CourseSyllabus.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport classes from './CourseSyllabus.module.css';\nimport { BsChevronDoubleDown, BsChevronDoubleUp, BsCheck, BsCheck2Circle } from \"react-icons/bs\";\nimport syllabusContent1 from './syllabusContent1.json';\nimport { BiEdit } from 'react-icons/bi';\nimport { BsPlus, BsTrash } from 'react-icons/bs';\nimport { getsyllabusfromId, getchapterfromId, getsectionfromId, gettopicfromId, putsectiondata, createnewsection } from '../../../../CommonApps/AllAPICalls.js';\nimport ContentEditable from 'react-contenteditable';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CourseSyllabus = props => {\n  _s();\n\n  const [syllabusData, getSyllabusData] = useState({\n    \"chapters\": []\n  });\n  const [rerender, setRerender] = useState(false);\n  const innerDivRef = useRef();\n  const innerDiv = {\n    html: \"<b>Hello <i>World</i></b>\"\n  };\n  useEffect(() => {\n    let syllabusId = props.selectedCourse[0].syllabus;\n    getsyllabusfromId({\n      syllabusId,\n      getSyllabusData\n    });\n    return () => {\n      getSyllabusData(syllabusData => ({\n        \"chapters\": []\n      }));\n    };\n  }, [props.selectedCourse[0].syllabus, rerender]);\n  console.log(\"syllabus Data: \", syllabusData);\n  const [showSyllabus, changeShowSyllabus] = useState(true);\n\n  const showSyllabusHandler = () => {\n    changeShowSyllabus(true);\n  };\n\n  const hideSyllabusHandler = () => {\n    changeShowSyllabus(false);\n  };\n\n  const [showSectionEdit, setShowSectionEdit] = useState({\n    chapterId: 0,\n    sectionId: 0\n  });\n  const [sectionEditStyle, setSectionEditStyle] = useState({\n    borderStyle: 'none',\n    borderWidth: '1px',\n    borderColor: 'lightgrey',\n    margin: '10px'\n  });\n\n  const editSectionHandler = ({\n    chapterId,\n    sectionId\n  }) => {\n    console.log(\"edit chapterId, sectionid : \", chapterId, '--', sectionId);\n    setShowSectionEdit({\n      chapterId: chapterId,\n      sectionId: sectionId\n    });\n  };\n\n  const addSectionHandler = ({\n    chapterId,\n    sectionId\n  }) => {\n    console.log(\"create new section: \", chapterId, '---', sectionId);\n    let sectionPostData = {\n      \"name\": \"New Section\",\n      \"chapterid\": chapterId,\n      \"previousSectionId\": sectionId\n    };\n    createnewsection({\n      sectionPostData\n    });\n  };\n\n  const deleteSectionHandler = ({\n    chapterId,\n    sectionId\n  }) => {};\n\n  const [onChangeSectionData, setOnChangeSectionData] = useState([]);\n\n  const handleChange = event => {\n    let alltext = event.target.value;\n    console.log(\"length of topic: \", alltext.length);\n    let topicnamesArray = alltext.split(\";\");\n    let topicArray = [];\n\n    for (let i = 0; i < topicnamesArray.length; i++) {\n      let topicObj = {};\n      topicObj['name'] = topicnamesArray[i];\n      topicArray.push(topicObj);\n    }\n\n    setOnChangeSectionData(onChangeSectionData => topicArray);\n  };\n\n  const [sectionText, setSectionText] = useState({}); //let sectionText={};\n\n  useEffect(() => {\n    let sectionData = \"\";\n    syllabusData.chapters.map((chapter, cindex) => {\n      chapter.sections.map((section, sindex) => {\n        sectionData = \"\";\n        section.topics.map((topic, tindex) => {\n          sectionData = sectionData + topic.name; //console.log(\"chapter,section, topic:  \",chapter.id,\"--\",section.id,\"--\",topic.id);\n        });\n        let chapterId = chapter.id; //console.log(\"chapterId: \",chapterId);\n\n        let sectionId = section.id;\n        let secName = 'c' + chapterId + 's' + sectionId; //console.log(\"secName: \", secName);\n\n        sectionText[secName] = sectionData;\n      });\n    });\n  }, [syllabusData]); //console.log(\"sectionText:   \",sectionText);\n\n  const SaveHandler = ({\n    chapterId,\n    sectionId\n  }) => {\n    console.log(\"chapterId, sectionId: \", chapterId, \"----\", sectionId);\n    let sectionid = sectionId;\n    let topicData = onChangeSectionData;\n    console.log(\"topicData: \", topicData);\n    putsectiondata({\n      sectionid,\n      topicData\n    });\n    setShowSectionEdit({\n      chapterId: 0,\n      sectionId: 0\n    });\n    setRerender(rerender => !rerender);\n  };\n\n  const addChapterHandler = () => {};\n\n  console.log(\"showSectionEdit.chapterId:   \", showSectionEdit.chapterId, '---', showSectionEdit.sectionId);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.courseSyllabus,\n    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n      children: [\" COURSE SYLLABUS:\", !showSyllabus && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: showSyllabusHandler,\n        children: [\" Show \", /*#__PURE__*/_jsxDEV(BsChevronDoubleDown, {\n          className: classes.ExpandSyllIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 65\n        }, this), \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 21\n      }, this), showSyllabus && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: hideSyllabusHandler,\n        children: [\" Hide \", /*#__PURE__*/_jsxDEV(BsChevronDoubleUp, {\n          className: classes.ExpandSyllIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 64\n        }, this), \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 4\n    }, this), showSyllabus && syllabusData.length !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.syllabusContent,\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: classes.chapterNames,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.sectionEditButton,\n          onClick: event => addChapterHandler(),\n          children: [\"Add a new chapter  \", /*#__PURE__*/_jsxDEV(BsPlus, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 73\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 51\n        }, this), syllabusData.chapters.map((chapter, index) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: chapter.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n              children: chapter.sections.map((section, sindex) => {\n                let csname = 'c' + chapter.id + 's' + section.id;\n                let chapterId = chapter.id;\n                let sectionId = section.id;\n                return /*#__PURE__*/_jsxDEV(\"li\", {\n                  className: classes.sectionHead,\n                  style: sectionEditStyle,\n                  children: [(showSectionEdit.chapterId !== chapter.id || showSectionEdit.sectionId !== section.id) && /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [section.topics.map((topic, tindex) => {\n                      return /*#__PURE__*/_jsxDEV(\"span\", {\n                        children: [\"   \", topic.name + \", \", \"  \"]\n                      }, tindex, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 250,\n                        columnNumber: 15\n                      }, this);\n                    }), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: classes.sectionEditButton,\n                      onClick: event => editSectionHandler({\n                        chapterId,\n                        sectionId\n                      }),\n                      children: /*#__PURE__*/_jsxDEV(BiEdit, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 271,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 267,\n                      columnNumber: 51\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: classes.sectionEditButton,\n                      onClick: event => deleteSectionHandler({\n                        chapterId,\n                        sectionId\n                      }),\n                      children: /*#__PURE__*/_jsxDEV(BsTrash, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 279,\n                        columnNumber: 54\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 275,\n                      columnNumber: 51\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 102\n                  }, this), showSectionEdit.chapterId === chapter.id && showSectionEdit.sectionId === section.id && /*#__PURE__*/_jsxDEV(\"textarea\", {\n                    type: \"text\",\n                    onChange: handleChange,\n                    name: \"comment\",\n                    className: classes.sectionTextArea,\n                    placeholder: \"Write your comment\",\n                    defaultValue: sectionText[csname]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 295,\n                    columnNumber: 51\n                  }, this), showSectionEdit.chapterId === chapter.id && showSectionEdit.sectionId === section.id && /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: classes.sectionSaveButton,\n                    onClick: event => SaveHandler({\n                      chapterId,\n                      sectionId\n                    }),\n                    children: \"Save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 46\n                  }, this)]\n                }, sindex, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 44\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 8\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 14\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 8\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 49\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 1\n  }, this);\n};\n\n_s(CourseSyllabus, \"K5a1bw0ndM4arNudJYRc7kEOBV0=\");\n\n_c = CourseSyllabus;\nexport default CourseSyllabus;\n\nvar _c;\n\n$RefreshReg$(_c, \"CourseSyllabus\");","map":{"version":3,"sources":["/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/MainApps/Dashboard/Subject/Syllabus/CourseSyllabus.js"],"names":["React","useState","useEffect","useRef","classes","BsChevronDoubleDown","BsChevronDoubleUp","BsCheck","BsCheck2Circle","syllabusContent1","BiEdit","BsPlus","BsTrash","getsyllabusfromId","getchapterfromId","getsectionfromId","gettopicfromId","putsectiondata","createnewsection","ContentEditable","CourseSyllabus","props","syllabusData","getSyllabusData","rerender","setRerender","innerDivRef","innerDiv","html","syllabusId","selectedCourse","syllabus","console","log","showSyllabus","changeShowSyllabus","showSyllabusHandler","hideSyllabusHandler","showSectionEdit","setShowSectionEdit","chapterId","sectionId","sectionEditStyle","setSectionEditStyle","borderStyle","borderWidth","borderColor","margin","editSectionHandler","addSectionHandler","sectionPostData","deleteSectionHandler","onChangeSectionData","setOnChangeSectionData","handleChange","event","alltext","target","value","length","topicnamesArray","split","topicArray","i","topicObj","push","sectionText","setSectionText","sectionData","chapters","map","chapter","cindex","sections","section","sindex","topics","topic","tindex","name","id","secName","SaveHandler","sectionid","topicData","addChapterHandler","courseSyllabus","ExpandSyllIcon","syllabusContent","chapterNames","sectionEditButton","index","csname","sectionHead","sectionTextArea","sectionSaveButton"],"mappings":"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","sourcesContent":["import React,{useState,useEffect,useRef} from 'react';\nimport classes from './CourseSyllabus.module.css';\nimport {BsChevronDoubleDown, BsChevronDoubleUp,BsCheck,BsCheck2Circle} from \"react-icons/bs\";\nimport syllabusContent1 from './syllabusContent1.json';\nimport {BiEdit} from 'react-icons/bi';\nimport {BsPlus,BsTrash} from 'react-icons/bs';\nimport {getsyllabusfromId, getchapterfromId, getsectionfromId, gettopicfromId, putsectiondata,createnewsection} from '../../../../CommonApps/AllAPICalls.js';\nimport ContentEditable from 'react-contenteditable';\n\n\nconst CourseSyllabus=(props)=>{\n\n\n\n    const [syllabusData, getSyllabusData] = useState({\"chapters\":[]}); \n    const [rerender, setRerender] = useState(false);\n  \n\n\n    const innerDivRef = useRef();\n    const innerDiv = {html: \"<b>Hello <i>World</i></b>\"};\t\n\n    useEffect(()=>{\n\n       let syllabusId = props.selectedCourse[0].syllabus;\t   \n       getsyllabusfromId({syllabusId,getSyllabusData});\n\n       return ()=>{\n           getSyllabusData(syllabusData=>({\"chapters\":[]}));\n       }\n\n    },[ props.selectedCourse[0].syllabus,rerender]);\n\n\n   console.log(\"syllabus Data: \", syllabusData);\n\n\n    const [showSyllabus, changeShowSyllabus]=useState(true);\n\n    const showSyllabusHandler = ()=>{\n      changeShowSyllabus(true);\n    }\n\n\n    const hideSyllabusHandler = ()=>{\n       changeShowSyllabus(false);\n    }\n\n\n    const [showSectionEdit, setShowSectionEdit] = useState({chapterId:0,sectionId:0});\n\n    const [sectionEditStyle, setSectionEditStyle] = useState({\n\n\t    borderStyle: 'none',\n            borderWidth: '1px',\n            borderColor: 'lightgrey',\n            margin: '10px'\n\n    });\n\n\n    const editSectionHandler = ({chapterId, sectionId})=>{\n\n\n       console.log(\"edit chapterId, sectionid : \",chapterId,'--',sectionId);\n\n       setShowSectionEdit({chapterId: chapterId,sectionId: sectionId}); \n\n    }\n\n\n   const addSectionHandler = ({chapterId, sectionId})=>{\n\n       console.log(\"create new section: \",chapterId,'---',sectionId);\t  \n       \t   \n       let sectionPostData={\"name\":\"New Section\",\"chapterid\":chapterId,\"previousSectionId\":sectionId};\n\n       createnewsection({ sectionPostData });\n\n   }\n\n\n   const deleteSectionHandler =({chapterId, sectionId})=>{\n\n\n\n   }\n\n\n\n\n\n\n   const [onChangeSectionData, setOnChangeSectionData]=useState([]);\n\n   const handleChange=(event)=>{\n\n   let alltext=event.target.value;\n   console.log(\"length of topic: \", alltext.length)\t   \n   let topicnamesArray = alltext.split(\";\");\n   let topicArray = []\n\n\n   for (let i = 0; i < topicnamesArray.length; i++) {\n        let topicObj={}\n\ttopicObj['name']=topicnamesArray[i];\n\ttopicArray.push(topicObj)   \n\n   }\n\n\n   setOnChangeSectionData(onChangeSectionData=>topicArray);\t   \n\n   \n\n\n   }\n\n  const [sectionText, setSectionText] = useState({});\n\n  //let sectionText={};\n\n  useEffect(()=>{\n\n  let sectionData=\"\";\n\n   syllabusData.chapters.map((chapter,cindex)=>{\n\n       chapter.sections.map((section,sindex)=>{\n\n\t        sectionData=\"\";\n                section.topics.map((topic,tindex)=>{\n\n\t            sectionData=sectionData+topic.name;\t\t\n                    //console.log(\"chapter,section, topic:  \",chapter.id,\"--\",section.id,\"--\",topic.id);\n\n\t        });\n\t        let chapterId = chapter.id;\n\t        //console.log(\"chapterId: \",chapterId);\n\t        let sectionId = section.id;\n\t        let secName = 'c'+chapterId+'s'+sectionId;\n\t        //console.log(\"secName: \", secName);\n                sectionText[secName]=sectionData;\n\t       \n       });\n\n   });\n\n\n\n  },[syllabusData]);\n\n\n  //console.log(\"sectionText:   \",sectionText);\n\n\n\n   const SaveHandler =({chapterId, sectionId})=>{\n   \n      console.log(\"chapterId, sectionId: \",chapterId,\"----\" ,sectionId);\n       \n      let sectionid = sectionId;\n      let topicData = onChangeSectionData;\n      console.log(\"topicData: \", topicData)\t   \n      putsectiondata({sectionid,topicData});\n      \n      setShowSectionEdit({chapterId:0,sectionId:0});\n      setRerender(rerender=>!rerender);\n\n   }\n\n\n\n   const addChapterHandler =()=>{\n\n\n\n   }\t\n\n\n\n\n\n\n\nconsole.log(\"showSectionEdit.chapterId:   \",showSectionEdit.chapterId,'---', showSectionEdit.sectionId);\n\n\n\n\nreturn (\n\n<div className={classes.courseSyllabus}>\n\n   <i> COURSE SYLLABUS:  \n\t{ !showSyllabus && <button onClick={showSyllabusHandler}> Show <BsChevronDoubleDown className={classes.ExpandSyllIcon}/>  </button> }\n\n\t{ showSyllabus && <button onClick={hideSyllabusHandler}> Hide <BsChevronDoubleUp className={classes.ExpandSyllIcon}/>  </button>}\n   </i>\n\n\t{showSyllabus && syllabusData.length !==null &&<div className={classes.syllabusContent}>\n\n\n\t  \n\n\n       <ol className={classes.chapterNames}>\n\n\n\n                                                  <button\n                                                      className={classes.sectionEditButton}\n                                                      onClick={(event)=>addChapterHandler()}\n                                                  >\n                                                     Add a new chapter  <BsPlus/>\n                                                  </button>\n\n\n\n\n\n         {  \n\n            syllabusData.chapters.map((chapter,index)=>{\n\n\n\n\n\t     return <li key={index} > <b>{chapter.name}</b> \n\t\t\t    <ol>\n\n                              {chapter.sections.map((section, sindex)=>{\n\n\n                                     let csname='c'+chapter.id+'s'+section.id;\n\t\t\t\t     let chapterId = chapter.id;\n\t\t\t\t     let sectionId =section.id; \n                                    \n\n                                    return <li key={sindex} className={classes.sectionHead} style={sectionEditStyle}> \n\n\t\t\t\t\t      { (showSectionEdit.chapterId !==chapter.id || showSectionEdit.sectionId !==section.id) && <span>\n\n\n\n\t\t\t\t\t        { \n \n                                                    section.topics.map((topic, tindex)=>{\n                                                        \n\t\t\t\t\t\t\treturn <span key={tindex}>   {topic.name+\", \"}  </span>                                                                                                                  \n                                       \n\t\t\t\t\t            })\n\n                                                \n\t\t\t\t\t        }\n\n\n\t\t\t\t\t\t      {/*<button\n                                                    className={classes.sectionEditButton}\n                                                    onClick={(event)=>addSectionHandler({chapterId, sectionId})}\n                                                  >\n                                                      <BsPlus/>\n                                                  </button>*/}                 \n\n\n\n                                                  <button\n                                                     className={classes.sectionEditButton}\n                                                     onClick={(event)=>editSectionHandler({chapterId, sectionId})}\n                                                  >\n                                                    <BiEdit/>\n                                                  </button>\n\n\n                                                  <button\n                                                    className={classes.sectionEditButton}\n                                                    onClick={(event)=>deleteSectionHandler({chapterId, sectionId})}\n                                                  >\n                                                     <BsTrash/>\n                                                  </button>\n\n\n                                                 \n\n\n\n\n                                              </span>}\n                                           \n\n\n\t\t\t\t              { showSectionEdit.chapterId===chapter.id && showSectionEdit.sectionId===section.id && \n\n                                                 \n                                                  <textarea\n                                                     type=\"text\"\n                                                     onChange={handleChange}\n                                                     name=\"comment\"\n                                                     className={classes.sectionTextArea}\n                                                     placeholder=\"Write your comment\"\n                                                     defaultValue={sectionText[csname]}\n                                                  />\n                                                 \n\n\t\t\t\t\t       }\t      \n\n\n\n\t\n                                             {  showSectionEdit.chapterId===chapter.id && showSectionEdit.sectionId===section.id &&\n                                             <button\n                                                  className={classes.sectionSaveButton}\n                                                  onClick={(event)=>SaveHandler({chapterId, sectionId})}\n                                              >\n                                                    Save\n                                             </button>\n                                             }\n\n\n\t\t\t\t\t   </li> \n\n\n\t\t\t\t     \t      \n\t\t\t         }\n\t\t\t      )}\n\n\t\t       </ol>\n\n\t\t   </li>\t    \n\n\n\n\n\t    })\n\n\n\t   }{/*all chapter ends*/}\n\n\n\n       </ol>\n\n\n\n\n   </div>}\n\n</div>\n\n);\n\n}\n\nexport default CourseSyllabus;\n"]},"metadata":{},"sourceType":"module"}