{"ast":null,"code":"var _jsxFileName = \"/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/MainApps/Dashboard/General/components/Student/CoursesGridContainer.js\";\nimport React from 'react';\nimport classes from './CoursesGridContainer.module.css';\nimport CourseViewDashboard from './CourseViewDashboard';\nimport { getteachercourses, getuser, getcoursesbyglobalCode, getcoursesbyglobalCodeArray } from '../../../../../CommonApps/AllAPICalls';\nimport axiosInstance from '../../../../../axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CoursesGridContainer = props => {\n  //console.log(\"props.courseData: \", props.courseData);\n\n  /*\n  const [data, setData] = useState({\n  \"dashboardcourses\": []\n  \n  });\n  const [courseData,getCourseData] = useState([\n  \n  {\n          \"id\": 1,\n          \"teacher\": 1,\n          \"courseShortName\": \"Dummy Course\",\n          \"courseFullName\": \"Dummy Course\",\n          \"courseGlobalCode\": \"100001\",\n          \"courseLocalCode\": \"QM-132\",\n          \"courseStatus\": \"ongoing\",\n          \"courseStartDate\": \"2022-02-10\",\n          \"courseEndDate\": \"2022-02-10\",\n          \"designedFor\": 1,\n          \"educationboard\": \"CBSE\",\n          \"subject\": \"Physics\",\n          \"abouttheCourse\": \"sdsad\",\n          \"instituteName\": \"IIT Bhubaneswar\",\n          \"instituteCity\": \"BBSR\",\n          \"instituteCountry\": \"India\",\n          \"enrolledstudents\": [\n              2\n          ],\n          \"enrolementrequests\": [\n              2\n          ]\n      }\n  \n  ]);\n  \n  useEffect(()=>{\n       getuser({setData});\n    },[props.rerender])\n  \n  \n  \n  \n  \n  \n  \n  useEffect(()=>{\n  \n    //getcoursesbyglobalCode({globalCode, getCourseData});\n    \n    console.log(\"dashboardcourse: \", data.dashboardcourses);\n    \n    let courseOne=[];\n     \t\n  \t{data.dashboardcourses.map((id,index)=>{\n  \n             if(id !==0){\t\n                 let globalCode=100000+id;\t\n  \n  \t\t console.log(\"running on id : \", globalCode);  \n                   getcoursesbyglobalCodeArray({globalCode, getCourseData});\n  \n                 }\n  \n             });\t\n  \n          }\n  \n        \n  \n  return ()=>{\n   getCourseData(courseData=>[]);\n  \n  }\n    \t\n  \n  },[data.dashboardcourses]);\n  \n  \n  \n  console.log(\"courseData: \", courseData);\n  \n  */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.coursesGridContainer,\n    children: [props.courseData.length !== 0 && props.courseData.map((course, index) => {\n      return /*#__PURE__*/_jsxDEV(CourseViewDashboard, {\n        Course: course,\n        data: props.data,\n        rerender: props.rerender\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 23\n      }, this);\n    }), props.courseData.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.noCourseMessage,\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" There are no courses available in your dashboard. Get the course code from your teacher (e.g. 100003) and add a course here to get started.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 62\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 1\n  }, this);\n};\n\n_c = CoursesGridContainer;\nexport default CoursesGridContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoursesGridContainer\");","map":{"version":3,"sources":["/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/MainApps/Dashboard/General/components/Student/CoursesGridContainer.js"],"names":["React","classes","CourseViewDashboard","getteachercourses","getuser","getcoursesbyglobalCode","getcoursesbyglobalCodeArray","axiosInstance","CoursesGridContainer","props","coursesGridContainer","courseData","length","map","course","index","data","rerender","noCourseMessage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,SAAQC,iBAAR,EAA0BC,OAA1B,EAAkCC,sBAAlC,EAA0DC,2BAA1D,QAA4F,uCAA5F;AACA,OAAOC,aAAP,MAA0B,sBAA1B;;;AAEA,MAAMC,oBAAoB,GAAGC,KAAD,IAAS;AAKrC;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA,sBAGA;AAAK,IAAA,SAAS,EAAER,OAAO,CAACS,oBAAxB;AAAA,eAGSD,KAAK,CAACE,UAAN,CAAiBC,MAAjB,KAA2B,CAA3B,IAAkCH,KAAK,CAACE,UAAN,CAAiBE,GAAjB,CAAqB,CAACC,MAAD,EAAQC,KAAR,KAAgB;AAEjE,0BAAO,QAAC,mBAAD;AAAiC,QAAA,MAAM,EAAED,MAAzC;AAAkD,QAAA,IAAI,EAAEL,KAAK,CAACO,IAA9D;AAAoE,QAAA,QAAQ,EAAEP,KAAK,CAACQ;AAApF,SAA0BF,KAA1B;AAAA;AAAA;AAAA;AAAA,cAAP;AAEH,KAJ+B,CAH3C,EAeON,KAAK,CAACE,UAAN,CAAiBC,MAAjB,KAA2B,CAA3B,iBACY;AAAK,MAAA,SAAS,EAAEX,OAAO,CAACiB,eAAxB;AAAA,mCAA0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBnB;AAAA;AAAA;AAAA;AAAA;AAAA,UAHA;AA+BC,CA5HD;;KAAMV,oB;AA8HN,eAAeA,oBAAf","sourcesContent":["import React from 'react';\nimport classes from './CoursesGridContainer.module.css';\nimport CourseViewDashboard from './CourseViewDashboard';\nimport {getteachercourses,getuser,getcoursesbyglobalCode, getcoursesbyglobalCodeArray} from '../../../../../CommonApps/AllAPICalls';\nimport axiosInstance from '../../../../../axios';\n\nconst CoursesGridContainer =(props)=>{\n\n\n\n\n//console.log(\"props.courseData: \", props.courseData);\n\n\n\n\n/*\nconst [data, setData] = useState({\n\"dashboardcourses\": []\n\n});\nconst [courseData,getCourseData] = useState([\n\n{\n        \"id\": 1,\n        \"teacher\": 1,\n        \"courseShortName\": \"Dummy Course\",\n        \"courseFullName\": \"Dummy Course\",\n        \"courseGlobalCode\": \"100001\",\n        \"courseLocalCode\": \"QM-132\",\n        \"courseStatus\": \"ongoing\",\n        \"courseStartDate\": \"2022-02-10\",\n        \"courseEndDate\": \"2022-02-10\",\n        \"designedFor\": 1,\n        \"educationboard\": \"CBSE\",\n        \"subject\": \"Physics\",\n        \"abouttheCourse\": \"sdsad\",\n        \"instituteName\": \"IIT Bhubaneswar\",\n        \"instituteCity\": \"BBSR\",\n        \"instituteCountry\": \"India\",\n        \"enrolledstudents\": [\n            2\n        ],\n        \"enrolementrequests\": [\n            2\n        ]\n    }\n\n]);\n\nuseEffect(()=>{\n     getuser({setData});\n  },[props.rerender])\n\n\n\n\n\n\n\nuseEffect(()=>{\n\n  //getcoursesbyglobalCode({globalCode, getCourseData});\n  \n  console.log(\"dashboardcourse: \", data.dashboardcourses);\n  \n  let courseOne=[];\n   \t\n\t{data.dashboardcourses.map((id,index)=>{\n\n           if(id !==0){\t\n               let globalCode=100000+id;\t\n\n\t\t console.log(\"running on id : \", globalCode);  \n                 getcoursesbyglobalCodeArray({globalCode, getCourseData});\n\n               }\n\n           });\t\n\n        }\n\n      \n\nreturn ()=>{\n getCourseData(courseData=>[]);\n\n}\n  \t\n\n},[data.dashboardcourses]);\n\n\n\nconsole.log(\"courseData: \", courseData);\n\n*/\n\n\nreturn (\n\n\n<div className={classes.coursesGridContainer}>\n      \n\n      {  props.courseData.length !==0 &&   props.courseData.map((course,index)=>{\n\n               return <CourseViewDashboard key={index} Course={course}  data={props.data} rerender={props.rerender}/>\n\n           }\n\n        )\n\n      }\n\n\n\n    {  props.courseData.length ===0 &&\n                   <div className={classes.noCourseMessage}> <h1> There are no courses available in your dashboard. Get the course code from your teacher (e.g. 100003) and add a course here to get started.</h1> </div>\n\n    }\n\n\n\n</div>\n\n\n);\n\n\n}\n\nexport default CoursesGridContainer;\n\n"]},"metadata":{},"sourceType":"module"}