{"ast":null,"code":"import React from'react';import classes from'./NoticeBoxContainer.module.css';import NoticeBox from'./NoticeBox';import NoticeBoardToolBar from'./NoticeBoardToolBar';//import {getdashboardnotice} from '../../../../CommonApps/AllAPICalls';\n//getuser, getnotice,getnoticebyId\nimport{putnoticeIddash}from'../../../../CommonApps/AllAPICalls';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function containsObject(obj,list){var i;for(i=0;i<list.length;i++){if(list[i].id===obj.id){return true;}}return false;}var NoticeBoxContainer=function NoticeBoxContainer(props){console.log(\"NoticeBox Container rendering. . .\");var markAsReadHandler=function markAsReadHandler(noticeId){console.log(\"mark as read\",noticeId);putnoticeIddash({noticeId:noticeId});window.location.reload(false);};/*\nuseEffect(()=>{\n\n\n   //getnotice({getNoticeData});\n        let noticeIdArray=[];\n\tlet propsCourseData = props.courseData;\n\t   propsCourseData.forEach((course, index)=>{\n                       //console.log(\"noticeobjects\",course.noticeobjects[0])\n                       course.noticeobjects.forEach((noticeId, indexI)=>{  \n\t\t\t      // console.log('noticeId: ', noticeId)\n                             if ( noticeIdArray.indexOf(noticeId) < 0){noticeIdArray.push(noticeId)}\n\n\t\t       })\n\t\t                                                    \n\n\n\n\t          }\n\t    );   \n        \n\n    getNoticeIds(noticeIds=>noticeIdArray);\t\n\n return ()=>{\n  getNoticeIds(noticeIds=>[]);\n\n }\n\n\n},[ props.courseData]);\n\n\n\n\nuseEffect(()=>{\n\n   noticeIds.forEach((noticeid, index)=>{\n\n      getnoticebyId({noticeid, getNoticeData});\n\n   });\n\n  return ()=>{\n           getNoticeData(noticeData=>[]);\n       }\n\n},[noticeIds]);\n\n\n*/return/*#__PURE__*/_jsxs(\"div\",{className:classes.noticeBoxContainer,children:[/*#__PURE__*/_jsx(NoticeBoardToolBar,{closeNoticeBoard:props.closeNoticeBoard,courseData:props.courseData,socketObj:props.socketObj,userData:props.userData,rerender:props.rerender}),props.dashboardNotice!==null&&props.dashboardNotice.dashnotices!==null&&props.dashboardNotice.dashnotices.map(function(notice,index){var list=props.userData.noticeids;var isRead=containsObject(notice,list);var noticeId=notice.id;return/*#__PURE__*/_jsx(NoticeBox,{read:!isRead,Notice:notice,markAsRead:function markAsRead(){return markAsReadHandler(noticeId);}},index);})]});};export default NoticeBoxContainer;","map":{"version":3,"sources":["/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/MainApps/Dashboard/General/NoticeBoard/NoticeBoxContainer.js"],"names":["React","classes","NoticeBox","NoticeBoardToolBar","putnoticeIddash","containsObject","obj","list","i","length","id","NoticeBoxContainer","props","console","log","markAsReadHandler","noticeId","window","location","reload","noticeBoxContainer","closeNoticeBoard","courseData","socketObj","userData","rerender","dashboardNotice","dashnotices","map","notice","index","noticeids","isRead"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,OAAP,KAAoB,iCAApB,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CACA,MAAOC,CAAAA,kBAAP,KAA+B,sBAA/B,CACA;AACA;AAGA,OAAQC,eAAR,KAA8B,oCAA9B,C,wFAEA,QAASC,CAAAA,cAAT,CAAwBC,GAAxB,CAA6BC,IAA7B,CAAmC,CAG/B,GAAIC,CAAAA,CAAJ,CACA,IAAKA,CAAC,CAAG,CAAT,CAAYA,CAAC,CAAGD,IAAI,CAACE,MAArB,CAA6BD,CAAC,EAA9B,CAAkC,CAC9B,GAAID,IAAI,CAACC,CAAD,CAAJ,CAAQE,EAAR,GAAeJ,GAAG,CAACI,EAAvB,CAA2B,CACvB,MAAO,KAAP,CACH,CACJ,CAED,MAAO,MAAP,CACH,CAOD,GAAMC,CAAAA,kBAAkB,CAAE,QAApBA,CAAAA,kBAAoB,CAACC,KAAD,CAAS,CAGhCC,OAAO,CAACC,GAAR,CAAY,oCAAZ,EAGA,GAAMC,CAAAA,iBAAiB,CAAC,QAAlBA,CAAAA,iBAAkB,CAACC,QAAD,CAAY,CAC7BH,OAAO,CAACC,GAAR,CAAY,cAAZ,CAA4BE,QAA5B,EACNZ,eAAe,CAAC,CAACY,QAAQ,CAARA,QAAD,CAAD,CAAf,CACAC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB,EACA,CAJD,CAeH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAmBA,mBAEA,aAAK,SAAS,CAAElB,OAAO,CAACmB,kBAAxB,wBAGG,KAAC,kBAAD,EAAoB,gBAAgB,CAAER,KAAK,CAACS,gBAA5C,CACa,UAAU,CAAIT,KAAK,CAACU,UADjC,CAEa,SAAS,CAAIV,KAAK,CAACW,SAFhC,CAGa,QAAQ,CAAIX,KAAK,CAACY,QAH/B,CAIa,QAAQ,CAAIZ,KAAK,CAACa,QAJ/B,EAHH,CAYKb,KAAK,CAACc,eAAN,GAAyB,IAAzB,EAAiCd,KAAK,CAACc,eAAN,CAAsBC,WAAtB,GAAqC,IAAtE,EAA+Ef,KAAK,CAACc,eAAN,CAAsBC,WAAtB,CAAkCC,GAAlC,CAAsC,SAACC,MAAD,CAASC,KAAT,CAAiB,CAEhI,GAAIvB,CAAAA,IAAI,CAAGK,KAAK,CAACY,QAAN,CAAeO,SAA1B,CACP,GAAIC,CAAAA,MAAM,CAAG3B,cAAc,CAACwB,MAAD,CAAStB,IAAT,CAA3B,CACO,GAAIS,CAAAA,QAAQ,CAAGa,MAAM,CAACnB,EAAtB,CACD,mBAAO,KAAC,SAAD,EAAW,IAAI,CAAE,CAACsB,MAAlB,CACI,MAAM,CAAEH,MADZ,CAGW,UAAU,CAAE,4BAAId,CAAAA,iBAAiB,CAACC,QAAD,CAArB,EAHvB,EAESc,KAFT,CAAP,CAOH,CAZ6E,CAZpF,GAFA,CAoCC,CA9HD,CAiIA,cAAenB,CAAAA,kBAAf","sourcesContent":["import React from 'react';\nimport classes from './NoticeBoxContainer.module.css';\nimport NoticeBox from './NoticeBox';\nimport NoticeBoardToolBar from './NoticeBoardToolBar';\n//import {getdashboardnotice} from '../../../../CommonApps/AllAPICalls';\n//getuser, getnotice,getnoticebyId\n\n\nimport {putnoticeIddash} from '../../../../CommonApps/AllAPICalls';\n\nfunction containsObject(obj, list) {\n\n\n    var i;\n    for (i = 0; i < list.length; i++) {\n        if (list[i].id === obj.id) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n\n\n\n\n\nconst NoticeBoxContainer =(props)=>{\n\n\n   console.log(\"NoticeBox Container rendering. . .\");\n\n\n   const markAsReadHandler=(noticeId)=>{\n          console.log(\"mark as read\", noticeId);     \t   \n\t   putnoticeIddash({noticeId});\t  \n\t   window.location.reload(false);\n   }\n\n\n\n\n\n\n\n\n\n\n/*\nuseEffect(()=>{\n\n\n   //getnotice({getNoticeData});\n        let noticeIdArray=[];\n\tlet propsCourseData = props.courseData;\n\t   propsCourseData.forEach((course, index)=>{\n                       //console.log(\"noticeobjects\",course.noticeobjects[0])\n                       course.noticeobjects.forEach((noticeId, indexI)=>{  \n\t\t\t      // console.log('noticeId: ', noticeId)\n                             if ( noticeIdArray.indexOf(noticeId) < 0){noticeIdArray.push(noticeId)}\n\n\t\t       })\n\t\t                                                    \n\n\n\n\t          }\n\t    );   \n        \n\n    getNoticeIds(noticeIds=>noticeIdArray);\t\n\n return ()=>{\n  getNoticeIds(noticeIds=>[]);\n\n }\n\n\n},[ props.courseData]);\n\n\n\n\nuseEffect(()=>{\n\n   noticeIds.forEach((noticeid, index)=>{\n\n      getnoticebyId({noticeid, getNoticeData});\n\n   });\n\n  return ()=>{\n           getNoticeData(noticeData=>[]);\n       }\n\n},[noticeIds]);\n\n\n*/\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nreturn (\n\n<div className={classes.noticeBoxContainer}>\n\n\n   <NoticeBoardToolBar closeNoticeBoard={props.closeNoticeBoard} \n\t               courseData = {props.courseData}\n\t               socketObj = {props.socketObj}\n\t               userData = {props.userData}\n\t               rerender = {props.rerender}\n\t/>\n\n\n\n   { props.dashboardNotice !==null && props.dashboardNotice.dashnotices !==null &&  props.dashboardNotice.dashnotices.map((notice, index)=>{\n\n           let list = props.userData.noticeids;\n\t   let isRead = containsObject(notice, list);\n           let noticeId = notice.id;\n          return <NoticeBox read={!isRead} \n\t                    Notice={notice} \n\t                    key={index}\n                            markAsRead={()=>markAsReadHandler(noticeId)}\n\n\t\t   />\n\n      })\n   }\n\n\n\n\n</div>\n\n);\n\n}\n\n\nexport default NoticeBoxContainer;\n"]},"metadata":{},"sourceType":"module"}