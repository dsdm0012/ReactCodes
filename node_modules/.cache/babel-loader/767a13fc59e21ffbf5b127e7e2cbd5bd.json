{"ast":null,"code":"import _slicedToArray from\"/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useRef}from\"react\";import classes from\"../CommonAppUtilities/MainAppContainer.module.css\";import TopInfoBarVATChat from'./TopInfoBarVATChat';import TopInfoBarGeneral from'../Dashboard/General/TopInfoBarGeneral';import Separator from\"../CommonAppUtilities/Separator\";//import TopTitleBar from '../../CommonAppUtilities/TopTitleBar';\nimport VATChatContentDiv from'./VATChatContentDiv';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var VATChat=function VATChat(props){var _useState=useState(props.sideNavBarWidth),_useState2=_slicedToArray(_useState,2),sideNavBarWidth=_useState2[0],setSideNavBarWidth=_useState2[1];var _useState3=useState('calc( 100% - var(--sideNavBarWidth) )'),_useState4=_slicedToArray(_useState3,2),mainAppContainerWidth=_useState4[0],setMainAppContainerWidth=_useState4[1];/*const [contract, setContract] = useState(false);*/var isMounted=useRef(false);useEffect(function(){isMounted.current=true;setSideNavBarWidth(props.sideNavBarWidth);/*{!contract && setMainAppContainerWidth('calc( 100% - var(--sideNavBarWidth) )')}\n      {contract && setMainAppContainerWidth('calc( 100% - var(--sideNavBarWidthOnContract) )')}      \n      setContract(contract=>!contract);*/if(props.sideNavBarWidth===\"var(--sideNavBarWidth)\"){setMainAppContainerWidth('calc( 100% - var(--sideNavBarWidth) )');}if(props.sideNavBarWidth===\"var(--sideNavBarWidthOnContract)\"){setMainAppContainerWidth('calc( 100% - var(--sideNavBarWidthOnContract) )');}return function(){};},[props.sideNavBarWidth]);useEffect(function(){isMounted.current=true;props.passMountInfo(true);return function(){isMounted.current=false;props.passMountInfo(false);};},[props]);//let title=\"Chat\"\t\nvar mainAppContainerStyle={left:sideNavBarWidth,width:mainAppContainerWidth};var infoBarActiveButtonColor={color:'white',backgroundColor:'#919191'};return/*#__PURE__*/_jsxs(\"div\",{className:classes.mainAppContainer,style:mainAppContainerStyle,children:[/*#__PURE__*/_jsx(TopInfoBarGeneral,{}),/*#__PURE__*/_jsx(Separator,{}),/*#__PURE__*/_jsx(VATChatContentDiv,{userData:props.userData})]});};export default VATChat;","map":{"version":3,"sources":["/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/MainApps/Chat/VATChat.js"],"names":["React","useState","useEffect","useRef","classes","TopInfoBarVATChat","TopInfoBarGeneral","Separator","VATChatContentDiv","VATChat","props","sideNavBarWidth","setSideNavBarWidth","mainAppContainerWidth","setMainAppContainerWidth","isMounted","current","passMountInfo","mainAppContainerStyle","left","width","infoBarActiveButtonColor","color","backgroundColor","mainAppContainer","userData"],"mappings":"yKAAA,MAAOA,CAAAA,KAAP,EAAcC,QAAd,CAAuBC,SAAvB,CAAiCC,MAAjC,KAA8C,OAA9C,CACA,MAAOC,CAAAA,OAAP,KAAoB,mDAApB,CACA,MAAOC,CAAAA,iBAAP,KAA8B,qBAA9B,CACA,MAAOC,CAAAA,iBAAP,KAA8B,wCAA9B,CACA,MAAOC,CAAAA,SAAP,KAAsB,iCAAtB,CAKA;AACA,MAAOC,CAAAA,iBAAP,KAA8B,qBAA9B,C,wFAEA,GAAMC,CAAAA,OAAO,CAAC,QAARA,CAAAA,OAAQ,CAACC,KAAD,CAAS,CAGpB,cAA2CT,QAAQ,CAACS,KAAK,CAACC,eAAP,CAAnD,wCAAOA,eAAP,eAAuBC,kBAAvB,eACA,eAAuDX,QAAQ,CAAC,uCAAD,CAA/D,yCAAOY,qBAAP,eAA6BC,wBAA7B,eACA,oDACA,GAAMC,CAAAA,SAAS,CAAGZ,MAAM,CAAC,KAAD,CAAxB,CAGAD,SAAS,CAAC,UAAM,CACba,SAAS,CAACC,OAAV,CAAoB,IAApB,CACAJ,kBAAkB,CAACF,KAAK,CAACC,eAAP,CAAlB,CAEA;AACN;AACA,yCACM,GAAGD,KAAK,CAACC,eAAN,GAAwB,wBAA3B,CAAoD,CAACG,wBAAwB,CAAC,uCAAD,CAAxB,CAAmE,CACxH,GAAGJ,KAAK,CAACC,eAAN,GAAwB,kCAA3B,CAA8D,CAACG,wBAAwB,CAAC,iDAAD,CAAxB,CAA6E,CAE5I,MAAO,WAAM,CACZ,CADD,CAGF,CAbQ,CAaN,CAACJ,KAAK,CAACC,eAAP,CAbM,CAAT,CAgBAT,SAAS,CAAC,UAAM,CACfa,SAAS,CAACC,OAAV,CAAoB,IAApB,CACAN,KAAK,CAACO,aAAN,CAAoB,IAApB,EACA,MAAO,WAAM,CACZF,SAAS,CAACC,OAAV,CAAoB,KAApB,CACON,KAAK,CAACO,aAAN,CAAoB,KAApB,EACP,CAHD,CAIA,CAPQ,CAON,CAACP,KAAD,CAPM,CAAT,CAeC;AACA,GAAIQ,CAAAA,qBAAqB,CAAC,CAACC,IAAI,CAACR,eAAN,CAAuBS,KAAK,CAACP,qBAA7B,CAA1B,CACA,GAAMQ,CAAAA,wBAAwB,CAAG,CAACC,KAAK,CAAE,OAAR,CAAgBC,eAAe,CAAE,SAAjC,CAAjC,CAQD,mBAEG,aAAK,SAAS,CAAEnB,OAAO,CAACoB,gBAAxB,CAA0C,KAAK,CAAEN,qBAAjD,wBAOI,KAAC,iBAAD,IAPJ,cASI,KAAC,SAAD,IATJ,cAaI,KAAC,iBAAD,EAAmB,QAAQ,CAAER,KAAK,CAACe,QAAnC,EAbJ,GAFH,CAqBF,CAvED,CAyEA,cAAehB,CAAAA,OAAf","sourcesContent":["import React,{useState,useEffect,useRef} from \"react\";\nimport classes from \"../CommonAppUtilities/MainAppContainer.module.css\"\nimport TopInfoBarVATChat from './TopInfoBarVATChat';\nimport TopInfoBarGeneral from '../Dashboard/General/TopInfoBarGeneral';\nimport Separator from \"../CommonAppUtilities/Separator\";\n\n\n\n\n//import TopTitleBar from '../../CommonAppUtilities/TopTitleBar';\nimport VATChatContentDiv from './VATChatContentDiv';\n\nconst VATChat=(props)=>{\n\n   \n   const [sideNavBarWidth,setSideNavBarWidth]=useState(props.sideNavBarWidth);\n   const [mainAppContainerWidth,setMainAppContainerWidth]=useState('calc( 100% - var(--sideNavBarWidth) )');\t\n   /*const [contract, setContract] = useState(false);*/\n   const isMounted = useRef(false);\n\n\n   useEffect(() => {\n      isMounted.current = true;\t   \n      setSideNavBarWidth(props.sideNavBarWidth);\n      \n      /*{!contract && setMainAppContainerWidth('calc( 100% - var(--sideNavBarWidth) )')}\n      {contract && setMainAppContainerWidth('calc( 100% - var(--sideNavBarWidthOnContract) )')}      \n      setContract(contract=>!contract);*/\n      if(props.sideNavBarWidth===\"var(--sideNavBarWidth)\"){setMainAppContainerWidth('calc( 100% - var(--sideNavBarWidth) )');}\n      if(props.sideNavBarWidth===\"var(--sideNavBarWidthOnContract)\"){setMainAppContainerWidth('calc( 100% - var(--sideNavBarWidthOnContract) )');}\t   \n\n      return () => { \n      }\n\n   }, [props.sideNavBarWidth]);\n\n\n   useEffect(() => {\n    isMounted.current = true;\n    props.passMountInfo(true);\t   \n    return () => { \n\t    isMounted.current = false \n            props.passMountInfo(false);\n    }\n   }, [props]);\n\n\n\n\n\n\n\n    //let title=\"Chat\"\t\n    let mainAppContainerStyle={left:sideNavBarWidth, width:mainAppContainerWidth}\n    const infoBarActiveButtonColor = {color: 'white',backgroundColor: '#919191'}\n\n\n\n\n\n\n\n   return(\n\n      <div className={classes.mainAppContainer} style={mainAppContainerStyle} >\n\t     {/*\n\t        <TopInfoBarVATChat styles={infoBarActiveButtonColor} selectedCourse={props.selectedCourse}/>\n         \n               <TopTitleBar title={title}/>\n             */}\n\n          <TopInfoBarGeneral/>      \n\n          <Separator/>\n\n\n      \t   \n          <VATChatContentDiv userData={props.userData}/>\n       \n\n      </div>\n\n   );\n}\n\nexport default VATChat;\n\n"]},"metadata":{},"sourceType":"module"}