{"ast":null,"code":"import _toConsumableArray from\"/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useRef}from\"react\";import classes from\"./ChatWindow.module.css\";import ChatUserInfoTopBar from\"./ChatUserInfoTopBar\";import ChatScreen from\"./ChatScreen\";//import ChatInput from \"./ChatInput\";\nimport{w3cwebsocket as W3CWebSocket}from'websocket';//import { Picker } from \"emoji-mart\";\nimport\"emoji-mart/css/emoji-mart.css\";//import Login from '../../../../CommonApps/Login';\n//import axiosInstance from '../../../../axios';\nimport{MdSend}from'react-icons/md';import{postchatcomment,getchatcomments}from'../../../../CommonApps/AllAPICalls';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function Connect(){var client;var messageListeners=[];var _isConnected=false;var _componentMounted=false;//let reconnectOnClose = true;\nvar stateChangeListeners=[];function mountInfo(value){_componentMounted=value;}function on(fn){messageListeners.push(fn);}function off(fn){messageListeners=messageListeners.filter(function(l){return l!==fn;});}function onStateChange(fn){stateChangeListeners.push(fn);return function(){stateChangeListeners=stateChangeListeners.filter(function(l){return l!==fn;});};}function start(){if(window.location.host==='localhost:3000'){client=new W3CWebSocket('ws://127.0.0.1:8000/ws/chat/class/');}if(window.location.host==='127.0.0.1:8000'){client=new W3CWebSocket('ws://127.0.0.1:8000/ws/chat/class/');}if(window.location.host==='edresearch.co.in'){client=new W3CWebSocket('wss://edresearch.co.in:8001/ws/chat/class/');}//const close = client.close;\n//client.close = () => {\n//   reconnectOnClose = false;\n//  close.call(client);\n//}\n// if(client.readyState === client.CLOSED ){\n//   setTimeout(start, 5000);\n//}\nclient.onclose=function(){_isConnected=false;stateChangeListeners.forEach(function(fn){return fn(false);});if(_componentMounted){setTimeout(start,5000);}};client.onopen=function(){_isConnected=true;stateChangeListeners.forEach(function(fn){return fn(true);});};client.onmessage=function(event){var dataFromServer=JSON.parse(event.data);messageListeners.forEach(function(fn){return fn(dataFromServer.message);});};}start();return{on:on,off:off,onStateChange:onStateChange,mountInfo:mountInfo,componentMounted:function componentMounted(){return _componentMounted;},getClient:function getClient(){return client;},isConnected:function isConnected(){return _isConnected;},close:function close(){return client.close();}};}var client=Connect();function useMessages(){var _useState=useState(['']),_useState2=_slicedToArray(_useState,2),messages=_useState2[0],setMessages=_useState2[1];useEffect(function(){function handleMessage(message){setMessages([].concat(_toConsumableArray(messages),[message]));}client.on(handleMessage);return function(){return client.off(handleMessage);};},[messages,setMessages]);return messages;}var ChatWindow=function ChatWindow(props){var mountedRef=useRef(true);var value=true;client.mountInfo(value);//this is commented out on April 5th 2022. Check if hat function works\n//const [isConnected, setIsConnected] = useState(client.isConnected());\nvar isConnected=client.isConnected();console.log('isConnected: ',isConnected);var _useState3=useState([{}]),_useState4=_slicedToArray(_useState3,2),commentObj=_useState4[0],setChatCommentObj=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),message=_useState6[0],setMessage=_useState6[1];var messages=useMessages();var lastMessage=messages.at(-1).split(\" \");var commentGroupId=Number(lastMessage[lastMessage.length-1]);//const commentUserId = Number(lastMessage[lastMessage.length - 2]);\nvar clickedGroupIdT=props.clickedGroupId;var displayMessage=[];if(commentGroupId===clickedGroupIdT){displayMessage=messages;}var handleChange=function handleChange(e){setMessage(function(msg){return e.target.value;});};useEffect(function(){//if(!isConnected && mountedRef.current ){\n//\t   window.location.reload(false);  \n// }\nconsole.log('connection status changed:',isConnected);return function(){mountedRef.current=false;client.mountInfo(false);// client.close();\n};},[isConnected]);// useEffect(() => {\n//     return client.onStateChange(setIsConnected);\n// }, [setIsConnected]);\nuseEffect(function(){var groupId=props.clickedGroupId;getchatcomments({setChatCommentObj:setChatCommentObj,groupId:groupId});},[props.clickedGroupId,props.data.id]);function sendMessage(e){e.preventDefault();if(message!==\"\"){client.getClient().send(JSON.stringify({type:\"message\",message:message+\" \"+props.data.id+\" \"+props.clickedGroupId}));var comment=message;var userId=props.data.id;var groupId=props.clickedGroupId;postchatcomment({groupId:groupId,userId:userId,comment:comment});}setMessage('');}return/*#__PURE__*/_jsxs(\"div\",{className:classes.chatWindow,children:[clickedGroupIdT===Number(0)&&/*#__PURE__*/_jsxs(\"div\",{className:classes.noGroupSelectDiv,children:[\" \",/*#__PURE__*/_jsx(\"b\",{children:\"Please select a chat to continue\"}),\" \"]}),clickedGroupIdT!==Number(0)&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ChatUserInfoTopBar,{clickedUserId:props.clickedUserId}),/*#__PURE__*/_jsx(ChatScreen,{messages:displayMessage,commentObj:commentObj,currentUser:props.data.id}),/*#__PURE__*/_jsx(\"div\",{className:classes.chatInput,children:/*#__PURE__*/_jsxs(\"form\",{className:classes.addCommentForm,onSubmit:sendMessage,children:[/*#__PURE__*/_jsx(\"div\",{className:classes.chatInput,children:/*#__PURE__*/_jsx(\"input\",{className:classes.inputTextBox,value:message,onChange:handleChange})}),/*#__PURE__*/_jsxs(\"button\",{type:\"submit\",className:classes.submit_button,children:[/*#__PURE__*/_jsxs(\"b\",{children:[/*#__PURE__*/_jsx(MdSend,{className:classes.sendButtonIcon}),\" \"]}),\" \"]})]})})]})]});};export default ChatWindow;","map":{"version":3,"sources":["/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/MainApps/Messages/VATChat/ChatWindow/ChatWindowTest.js"],"names":["React","useState","useEffect","useRef","classes","ChatUserInfoTopBar","ChatScreen","w3cwebsocket","W3CWebSocket","MdSend","postchatcomment","getchatcomments","Connect","client","messageListeners","isConnected","componentMounted","stateChangeListeners","mountInfo","value","on","fn","push","off","filter","l","onStateChange","start","window","location","host","onclose","forEach","setTimeout","onopen","onmessage","event","dataFromServer","JSON","parse","data","message","getClient","close","useMessages","messages","setMessages","handleMessage","ChatWindow","props","mountedRef","console","log","commentObj","setChatCommentObj","setMessage","lastMessage","at","split","commentGroupId","Number","length","clickedGroupIdT","clickedGroupId","displayMessage","handleChange","e","msg","target","current","groupId","id","sendMessage","preventDefault","send","stringify","type","comment","userId","chatWindow","noGroupSelectDiv","clickedUserId","chatInput","addCommentForm","inputTextBox","submit_button","sendButtonIcon"],"mappings":"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","sourcesContent":["import React,{useState,useEffect,useRef} from \"react\";\nimport classes from \"./ChatWindow.module.css\"\nimport ChatUserInfoTopBar from \"./ChatUserInfoTopBar\";\nimport ChatScreen from \"./ChatScreen\";\n//import ChatInput from \"./ChatInput\";\nimport {w3cwebsocket as W3CWebSocket } from 'websocket';\n//import { Picker } from \"emoji-mart\";\nimport \"emoji-mart/css/emoji-mart.css\";\n//import Login from '../../../../CommonApps/Login';\n//import axiosInstance from '../../../../axios';\nimport {MdSend} from 'react-icons/md';\nimport {postchatcomment,getchatcomments} from '../../../../CommonApps/AllAPICalls';\n\n\n\n\nfunction Connect (){\n\nlet client;\nlet messageListeners = [];\nlet isConnected = false;\nlet componentMounted = false;\n\n//let reconnectOnClose = true;\nlet stateChangeListeners = [];\n\n\nfunction mountInfo(value){\n\n  componentMounted = value;\n}\n\n\n\nfunction on(fn) {\n    messageListeners.push(fn);\n  }\n\n function off(fn) {\n    messageListeners = messageListeners.filter(l => l !== fn);\n  }\n\nfunction onStateChange(fn) {\n    stateChangeListeners.push(fn);\n    return () => {\n      stateChangeListeners = stateChangeListeners.filter(l => l !== fn);\n    };\n  }\n\n\n\n\n\n\n\n\nfunction start () {\n \n  if (window.location.host === 'localhost:3000'){\t\n      client = new W3CWebSocket('ws://127.0.0.1:8000/ws/chat/class/');\n     }\n\n  if (window.location.host === '127.0.0.1:8000'){ \n      client = new W3CWebSocket('ws://127.0.0.1:8000/ws/chat/class/');\n     }\n\n  if (window.location.host === 'edresearch.co.in'){ \n      client = new W3CWebSocket('wss://edresearch.co.in:8001/ws/chat/class/');\n     }\n \n\n\n\n\n\n\n\n    //const close = client.close;\n\n    //client.close = () => {\n    //   reconnectOnClose = false;\n    //  close.call(client);\n    //}\n\n   // if(client.readyState === client.CLOSED ){\n   //   setTimeout(start, 5000);\n    //}\n\n\n\n\n\n   client.onclose = () => {\n     isConnected=false;\n     stateChangeListeners.forEach(fn => fn(false));\t   \n     if(componentMounted){\t   \n       setTimeout(start, 5000);\n     }\n   }\n\n   client.onopen=()=>{\n     isConnected=true;\n     stateChangeListeners.forEach(fn => fn(true));\t   \n   }\n\n   client.onmessage = (event)=>{\n    const dataFromServer = JSON.parse(event.data);\t\n    messageListeners.forEach(fn => fn(dataFromServer.message));\n   }\n\n\n}\n\nstart();\n\n\n\n\n\n\n\nreturn {\n    on,\n    off,\n    onStateChange,\n    mountInfo,\n    componentMounted: ()=>componentMounted,\t\n    getClient: () => client,\n    isConnected: () => isConnected,\n    close: () => client.close(),\n   }\n}\n\nconst client = Connect();\n\n\n\nfunction useMessages() {\n  const [messages, setMessages] = useState(['']);\n\n  useEffect(() => {\n    function handleMessage(message) {\n      setMessages([...messages, message]);\n    }\n      client.on(handleMessage);\n     return () => client.off(handleMessage);\n  }, [messages, setMessages]);\n\n  return messages;\n}\n\n\n\n\n\n\n\nconst ChatWindow = (props) =>{\n\n\n\n   const mountedRef = useRef(true);\n   let value=true;\n   client.mountInfo(value);\n    //this is commented out on April 5th 2022. Check if hat function works\n   //const [isConnected, setIsConnected] = useState(client.isConnected());\n  \n\n   let isConnected = client.isConnected();\n\n   console.log('isConnected: ', isConnected);\t\n\n\n\n   const [commentObj,setChatCommentObj]=useState([{}]);\n\n   const [message, setMessage] = useState('');\n   \n\n   const messages = useMessages();  \n\n   let lastMessage = messages.at(-1).split(\" \");\t\n\n   const commentGroupId = Number(lastMessage[lastMessage.length - 1]);\t\n\n   //const commentUserId = Number(lastMessage[lastMessage.length - 2]);\n\n   \t\n\n   const clickedGroupIdT= props.clickedGroupId;\n\n\n\n\n\n   let displayMessage=[];\n  \n   if ( commentGroupId === clickedGroupIdT){\n      \n      displayMessage=messages;\t  \n\n     }\t\n\n   const handleChange = (e) => {\n      setMessage(msg=>e.target.value);\n\n\n   };\n\n   useEffect(()=>{\n     \n\n      //if(!isConnected && mountedRef.current ){\n      //\t   window.location.reload(false);  \n      // }\n\n      console.log('connection status changed:', isConnected)\n\n      return ()=>{\n         mountedRef.current = false;\n\t client.mountInfo(false);    \n        // client.close();\n       }\n     },[isConnected]);\n\n\n    // useEffect(() => {\n    //     return client.onStateChange(setIsConnected);\n    // }, [setIsConnected]);\n\n\n   useEffect(()=>{\n   const groupId=props.clickedGroupId;\n\n\n   getchatcomments({setChatCommentObj, groupId});\n\n   },[props.clickedGroupId, props.data.id]);\n\n\n\n\n\n\n\n\n\n\n\n\n   function sendMessage(e) {\n    e.preventDefault();\n    if(message !== \"\"){\t   \n    client.getClient().send(JSON.stringify({\n      type: \"message\",\n      message: message+\" \"+props.data.id+\" \"+props.clickedGroupId,\n    }))\n\n\n     const comment = message;\n     const userId = props.data.id;\n\n     const groupId=props.clickedGroupId;\n     postchatcomment({groupId,userId,comment});\n\n\n\n\n\n    }\n    \t    \n    setMessage('');\n   }\n\n\n\n\n\n\n\n\n\nreturn(\n\n\n\n\n<div className={classes.chatWindow}>\n\n\n\n  {clickedGroupIdT === Number(0) && <div className={classes.noGroupSelectDiv}> <b>Please select a chat to continue</b> </div>}\n\n\n\n { clickedGroupIdT !== Number(0) &&  <>\n\n<ChatUserInfoTopBar clickedUserId={props.clickedUserId} />\n\n<ChatScreen messages={displayMessage}  commentObj={commentObj} currentUser={props.data.id}/>\n\t\n<div className={classes.chatInput}>\n\n\n\n\n     <form className={classes.addCommentForm} onSubmit={sendMessage}>\n\n\n                  <div className={classes.chatInput} >\n\n                      <input className={classes.inputTextBox} value={message} onChange={handleChange} />\n\n\n                  </div>\n\n                 \n                 <button type=\"submit\"  className= {classes.submit_button} ><b><MdSend className={classes.sendButtonIcon}/> </b> </button>\n                  \n     </form>\n\n\n</div>\n\n</>\n\n }\n\t\n</div>\n\n\n \n\n\n);\n\n}\n\nexport default ChatWindow;\n"]},"metadata":{},"sourceType":"module"}