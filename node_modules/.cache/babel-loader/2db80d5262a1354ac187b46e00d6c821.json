{"ast":null,"code":"/* eslint callback-return:0 */\n'use strict';\n\nvar __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar MediaSignaling = require('./mediasignaling');\n\nvar messageId = 1;\n\nvar PublisherHintsSignaling =\n/** @class */\nfunction (_super) {\n  __extends(PublisherHintsSignaling, _super);\n  /**\n   * Construct a {@link RenderHintsSignaling}.\n   */\n\n\n  function PublisherHintsSignaling(getReceiver, options) {\n    var _this = _super.call(this, getReceiver, 'publisher_hints', options) || this;\n\n    _this.on('ready', function (transport) {\n      _this._log.debug('publisher_hints transport ready:', transport);\n\n      transport.on('message', function (message) {\n        _this._log.debug('Incoming: ', message);\n\n        switch (message.type) {\n          case 'publisher_hints':\n            if (message.publisher && message.publisher.hints && message.publisher.id) {\n              _this._processPublisherHints(message.publisher.hints, message.publisher.id);\n            }\n\n            break;\n\n          default:\n            _this._log.warn('Unknown message type: ', message.type);\n\n            break;\n        }\n      });\n    });\n\n    return _this;\n  }\n\n  PublisherHintsSignaling.prototype.sendTrackReplaced = function (_a) {\n    var trackSid = _a.trackSid;\n\n    if (!this._transport) {\n      return;\n    }\n\n    var payLoad = {\n      type: 'client_reset',\n      track: trackSid,\n      id: messageId++\n    };\n\n    this._log.debug('Outgoing: ', payLoad);\n\n    this._transport.publish(payLoad);\n  };\n\n  PublisherHintsSignaling.prototype.sendHintResponse = function (_a) {\n    var id = _a.id,\n        hints = _a.hints;\n\n    if (!this._transport) {\n      return;\n    }\n\n    var payLoad = {\n      type: 'publisher_hints',\n      id: id,\n      hints: hints\n    };\n\n    this._log.debug('Outgoing: ', payLoad);\n\n    this._transport.publish(payLoad);\n  };\n  /**\n   * @private\n   */\n\n\n  PublisherHintsSignaling.prototype._processPublisherHints = function (hints, id) {\n    try {\n      this.emit('updated', hints, id);\n    } catch (ex) {\n      this._log.error('error processing hints:', ex);\n    }\n  };\n\n  return PublisherHintsSignaling;\n}(MediaSignaling);\n\nmodule.exports = PublisherHintsSignaling;","map":null,"metadata":{},"sourceType":"script"}