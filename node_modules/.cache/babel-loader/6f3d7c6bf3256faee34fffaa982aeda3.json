{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTurnCredentials = void 0;\n/* eslint-disable camelcase */\n\nvar TwilioConnection = require('../twilioconnection.js');\n\nvar ICE_VERSION = require('../util/constants').ICE_VERSION;\n\nvar _a = require('../util/twilio-video-errors'),\n    createTwilioError = _a.createTwilioError,\n    SignalingConnectionError = _a.SignalingConnectionError;\n\nvar events_1 = require(\"events\");\n\nfunction getTurnCredentials(token, wsServer) {\n  return new Promise(function (resolve, reject) {\n    var eventObserver = new events_1.EventEmitter();\n    var connectionOptions = {\n      networkMonitor: null,\n      eventObserver: eventObserver,\n      helloBody: {\n        edge: 'roaming',\n        preflight: true,\n        token: token,\n        type: 'ice',\n        version: ICE_VERSION\n      }\n    };\n    var twilioConnection = new TwilioConnection(wsServer, connectionOptions);\n    var done = false;\n    twilioConnection.once('close', function () {\n      if (!done) {\n        done = true;\n        reject(new SignalingConnectionError());\n      }\n    });\n    twilioConnection.on('message', function (messageData) {\n      var code = messageData.code,\n          message = messageData.message,\n          ice_servers = messageData.ice_servers,\n          type = messageData.type;\n\n      if ((type === 'iced' || type === 'error') && !done) {\n        done = true;\n\n        if (type === 'iced') {\n          resolve(ice_servers);\n        } else {\n          reject(createTwilioError(code, message));\n        }\n\n        twilioConnection.close();\n      }\n    });\n  });\n}\n\nexports.getTurnCredentials = getTurnCredentials;","map":null,"metadata":{},"sourceType":"script"}