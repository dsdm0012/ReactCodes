{"ast":null,"code":"var _jsxFileName = \"/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/MainApps/Dashboard/General/General.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport classes from \"./MainAppContainer.module.css\";\nimport TopInfoBarGeneral from './TopInfoBarGeneral'; //import TopTitleBar from '../../CommonAppUtilities/TopTitleBar';\n\nimport GeneralContentDiv from './GeneralContentDiv';\nimport { BsLayoutTextSidebarReverse, BsFillCameraReelsFill, BsPencilSquare } from 'react-icons/bs';\nimport { GiTeacher } from \"react-icons/gi\";\nimport { CgClipboard } from 'react-icons/cg';\nimport TopToolBox from './components/Teacher/TopToolBoxV1';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst General = props => {\n  _s();\n\n  const [sideNavBarWidth, setSideNavBarWidth] = useState(props.sideNavBarWidth);\n  const [mainAppContainerWidth, setMainAppContainerWidth] = useState('calc( 100% - var(--sideNavBarWidth) )');\n  const isMounted = useRef(false);\n  useEffect(() => {\n    isMounted.current = true;\n    setSideNavBarWidth(props.sideNavBarWidth);\n\n    if (props.sideNavBarWidth === \"var(--sideNavBarWidth)\") {\n      setMainAppContainerWidth('calc( 100% - var(--sideNavBarWidth) )');\n    }\n\n    if (props.sideNavBarWidth === \"var(--sideNavBarWidthOnContract)\") {\n      setMainAppContainerWidth('calc( 100% - var(--sideNavBarWidthOnContract) )');\n    }\n\n    return () => {};\n  }, [props.sideNavBarWidth]);\n  useEffect(() => {\n    isMounted.current = true;\n    props.passMountInfo(true);\n    return () => {\n      isMounted.current = false;\n      props.passMountInfo(false);\n    };\n  }, [props]); //let title=\"General\"\t\n\n  let mainAppContainerStyle = {\n    left: sideNavBarWidth,\n    width: mainAppContainerWidth\n  };\n  const infoBarActiveButtonColor = {\n    color: 'white',\n    backgroundColor: '#919191'\n  };\n\n  const showcreateCourseForm = () => {};\n\n  const [toolBoxStyle1, setToolBoxStyle1] = useState({\n    buttonBkgColor: 'var(--clickBtnColorDashBackground)',\n    buttonTxtColor: 'var(--clickBtnColorDash)',\n    boxBkgColor: 'white',\n    boxTxtColor: 'var(--themeColor)',\n    rightTopBoxColor: 'green',\n    buttonText: '+Create a Course',\n    mainText: 'TOTAL COURSES',\n    mainNumber: 1,\n    topRightText: 'Ongoing',\n    topRightNumber: 1,\n    icon: {\n      BsLayoutTextSidebarReverse\n    },\n    iconName: \"Courses\"\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.mainAppContainer,\n    style: mainAppContainerStyle,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.slimDiv,\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.toolDiv,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.pageNameDiv,\n        children: \" Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.toolsParent,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.tools,\n          children: [/*#__PURE__*/_jsxDEV(TopToolBox, {\n            toolBoxStyle: toolBoxStyle1,\n            onPress: showcreateCourseForm,\n            icon: BsLayoutTextSidebarReverse\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(TopToolBox, {\n            toolBoxStyle: toolBoxStyle1,\n            onPress: showcreateCourseForm,\n            icon: GiTeacher\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(TopToolBox, {\n            toolBoxStyle: toolBoxStyle1,\n            onPress: showcreateCourseForm,\n            icon: BsFillCameraReelsFill\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(TopToolBox, {\n            toolBoxStyle: toolBoxStyle1,\n            onPress: showcreateCourseForm,\n            icon: BsPencilSquare\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(TopToolBox, {\n            toolBoxStyle: toolBoxStyle1,\n            onPress: showcreateCourseForm,\n            icon: CgClipboard\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 12\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 7\n  }, this);\n};\n\n_s(General, \"ppgv6MWqVSqH0xFWpWruYr+Hvf4=\");\n\n_c = General;\nexport default General;\n\nvar _c;\n\n$RefreshReg$(_c, \"General\");","map":{"version":3,"sources":["/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/MainApps/Dashboard/General/General.js"],"names":["React","useState","useEffect","useRef","classes","TopInfoBarGeneral","GeneralContentDiv","BsLayoutTextSidebarReverse","BsFillCameraReelsFill","BsPencilSquare","GiTeacher","CgClipboard","TopToolBox","General","props","sideNavBarWidth","setSideNavBarWidth","mainAppContainerWidth","setMainAppContainerWidth","isMounted","current","passMountInfo","mainAppContainerStyle","left","width","infoBarActiveButtonColor","color","backgroundColor","showcreateCourseForm","toolBoxStyle1","setToolBoxStyle1","buttonBkgColor","buttonTxtColor","boxBkgColor","boxTxtColor","rightTopBoxColor","buttonText","mainText","mainNumber","topRightText","topRightNumber","icon","iconName","mainAppContainer","slimDiv","toolDiv","pageNameDiv","toolsParent","tools"],"mappings":"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","sourcesContent":["import React,{useState,useEffect,useRef} from \"react\";\nimport classes from \"./MainAppContainer.module.css\"\nimport TopInfoBarGeneral from './TopInfoBarGeneral';\n//import TopTitleBar from '../../CommonAppUtilities/TopTitleBar';\nimport GeneralContentDiv from './GeneralContentDiv';\n\n\nimport {BsLayoutTextSidebarReverse, BsFillCameraReelsFill, BsPencilSquare} from 'react-icons/bs';\nimport {GiTeacher} from \"react-icons/gi\";\n\nimport {CgClipboard} from 'react-icons/cg';\n\n\n\n\nimport TopToolBox from './components/Teacher/TopToolBoxV1';\n\n\n\n\n\n\nconst General=(props)=>{\n\n   \n   const [sideNavBarWidth,setSideNavBarWidth]=useState(props.sideNavBarWidth);\n   const [mainAppContainerWidth,setMainAppContainerWidth]=useState('calc( 100% - var(--sideNavBarWidth) )');\t\n\n   const isMounted = useRef(false);\n\n\n   useEffect(() => {\n      isMounted.current = true;\t   \n      setSideNavBarWidth(props.sideNavBarWidth);\n      if(props.sideNavBarWidth===\"var(--sideNavBarWidth)\"){setMainAppContainerWidth('calc( 100% - var(--sideNavBarWidth) )');}\n      if(props.sideNavBarWidth===\"var(--sideNavBarWidthOnContract)\"){setMainAppContainerWidth('calc( 100% - var(--sideNavBarWidthOnContract) )');}\n\n\n      return () => { \n      }\n\n   }, [props.sideNavBarWidth]);\n\n\n   useEffect(() => {\n    isMounted.current = true;\n    props.passMountInfo(true);\t   \n    return () => { \n\t    isMounted.current = false \n            props.passMountInfo(false);\n    }\n   }, [props]);\n\n\n\n\n\n\n\n   //let title=\"General\"\t\n   let mainAppContainerStyle={left:sideNavBarWidth, width:mainAppContainerWidth}\n   const infoBarActiveButtonColor = {color: 'white',backgroundColor: '#919191'}\n\n   const showcreateCourseForm=()=>{\n\n   }\n\n      const [toolBoxStyle1, setToolBoxStyle1] = useState(\n     {\n        buttonBkgColor: 'var(--clickBtnColorDashBackground)',\n        buttonTxtColor:'var(--clickBtnColorDash)',\n        boxBkgColor: 'white',\n        boxTxtColor:'var(--themeColor)',\n        rightTopBoxColor: 'green',\n        buttonText:'+Create a Course',\n        mainText:'TOTAL COURSES',\n        mainNumber:1,\n        topRightText:'Ongoing',\n        topRightNumber:1,\n        icon:{BsLayoutTextSidebarReverse},\n        iconName:\"Courses\"\n     });\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   return(\n\n      <div className={classes.mainAppContainer} style={mainAppContainerStyle} >\n\t   {/*   \n      <TopInfoBarGeneral styles={infoBarActiveButtonColor} selectedCourse={props.selectedCourse}/>\n        \n         <TopTitleBar title={title}/>\n              \n         <GeneralContentDiv \n\t     dashboardCourses={props.dashboardCourses}\n\t     socketObj = {props.socketObj}\n\t     userData = {props.userData}\n\t     rerender={props.rerender}\n\t     />\n      \n        */}\n\n          <div className={classes.slimDiv}>\n           Home \n\n          </div>\n\n          <div className={classes.toolDiv}>\n\n              <div className={classes.pageNameDiv}> Home</div>\n\n              <div className={classes.toolsParent}>\n\t        <div className={classes.tools}> \n\n\t          <TopToolBox toolBoxStyle = {toolBoxStyle1} onPress = {showcreateCourseForm} icon={BsLayoutTextSidebarReverse}/>\n                  <TopToolBox toolBoxStyle = {toolBoxStyle1} onPress = {showcreateCourseForm} icon={GiTeacher}/>\n\t          <TopToolBox toolBoxStyle = {toolBoxStyle1} onPress = {showcreateCourseForm} icon={BsFillCameraReelsFill}/>\n\t          <TopToolBox toolBoxStyle = {toolBoxStyle1} onPress = {showcreateCourseForm} icon={BsPencilSquare}/>\n\t          <TopToolBox toolBoxStyle = {toolBoxStyle1} onPress = {showcreateCourseForm} icon={CgClipboard}/>\n\n\n\n\n\n\t        </div>\n\t      </div>\n\n          </div>\n\n\n\n\n\n\n        </div>\n      \n\n   );\n}\n\nexport default General;\n\n"]},"metadata":{},"sourceType":"module"}