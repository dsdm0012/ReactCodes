{"ast":null,"code":"var _jsxFileName = \"/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/MainApps/Meetings/Detail/components/Teacher/Forms/UploadTalkForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport classes from \"./EditMeetingForm.module.css\";\nimport { AiFillCloseCircle } from \"react-icons/ai\";\nimport logoImage from '../../../../../../CommonApps/BWlogo.JPG';\nimport { getuser, putuser, putuserprofile, putmeetinginfo, getusersfromnames, createnewpresentation } from '../../../../../../CommonApps/AllAPICalls';\nimport { TimeField, TextInput, TextInput2, TextInput3, OptionField2, DateField2, DayField } from './FormInputObjects';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst convertAndAddto24hourFormat = ({\n  formData\n}) => {\n  let ampm = formData.selectedampm;\n  let minute = formData.selectedminute;\n  let hour = formData.selectedhour;\n\n  if (ampm === \"pm\") {\n    hour = Number(hour) + 12;\n  } //let time=hour+':'+minute+':'+'00';\n\n\n  let time = `${hour}:${minute}:00`;\n  let timestr = time.toString();\n  formData[\"talktime\"] = timestr;\n};\n\nconst AboutEditForm = props => {\n  _s();\n\n  const [data, setData] = useState({});\n  useEffect(() => {\n    getuser({\n      setData\n    });\n  }, []);\n  const initialFormData = Object.freeze({});\n  const [formData, updateFormData] = useState(initialFormData);\n\n  const handleChange = e => {\n    updateFormData({ ...formData,\n      [e.target.name]: e.target.value.trim()\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault(); //props.userDataUpdated(true);\n\n    window.location.reload(false); //props.onPress();\n  };\n\n  let intervals = [\"scheduled\", \"postponed\", \"cancelled\"];\n  let timeintervals = [0, 5, 10, 15, 20, 25, 30, 40, 50, 60, 90, 120, 180];\n  const [searchUsers, getSearchUsers] = useState([]);\n\n  const handleChangeSearch = e => {\n    let namestring = e.target.value;\n    getusersfromnames({\n      namestring,\n      getSearchUsers\n    });\n  };\n\n  console.log(\"search users: \", searchUsers);\n  const [addedUser, setAddedUser] = useState({});\n\n  const selectSpeakerHandler = ({\n    user\n  }) => {\n    console.log(\"userid: \", user.id);\n    setAddedUser(addedUser => user);\n  };\n\n  console.log(\"formData create presentation: \", formData);\n  console.log(\"added user: \", addedUser);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.aboutEditFormDivParent,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.aboutEditForm,\n      onSubmit: handleSubmit,\n      style: {\n        height: \"90vh\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.closeButtonDiv,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: props.onPress,\n          className: classes.closeFormButton,\n          children: [\" \", /*#__PURE__*/_jsxDEV(AiFillCloseCircle, {\n            className: classes.closeButtonIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 80\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.logoAndTitleContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: classes.bwLogo,\n          src: logoImage,\n          alt: \"edr Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.titleDiv,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            style: {\n              fontStyle: \"normal\"\n            },\n            children: [\"  Add a new talk: Meeting ID \", props.meeting.id, \"  \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 46\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TextInput2, {\n        handleChange: handleChange,\n        label: \"Title of the talk\",\n        name: \"talktitle\",\n        placeholder: \"Enter title\",\n        defaultValue: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TimeField, {\n        handleChange: handleChange,\n        label: \"Talk time\",\n        selectedhour: \"selectedhour\",\n        selectedminute: \"selectedminute\",\n        selectedampm: \"selectedampm\",\n        placeholder: \"Enter a time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(OptionField2, {\n        handleChange: handleChange,\n        label: \"Talk duration\",\n        name: \"duration\",\n        options: timeintervals,\n        defaultValue: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(TextInput3, {\n        handleChange: handleChangeSearch,\n        label: \"Add speaker\",\n        name: \"speaker\",\n        placeholder: \"Search by firstname\",\n        defaultValue: \"\",\n        searchUsers: searchUsers,\n        selectedSpeaker: selectSpeakerHandler,\n        addedUser: addedUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.submitButtonDiv,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: classes.submit_button,\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Save \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 70\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 1\n  }, this);\n};\n\n_s(AboutEditForm, \"SEGlg4Bl6N0dDHH35hEBs5xYRuk=\");\n\n_c = AboutEditForm;\nexport default AboutEditForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AboutEditForm\");","map":{"version":3,"sources":["/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/MainApps/Meetings/Detail/components/Teacher/Forms/UploadTalkForm.js"],"names":["React","useState","useEffect","classes","AiFillCloseCircle","logoImage","getuser","putuser","putuserprofile","putmeetinginfo","getusersfromnames","createnewpresentation","TimeField","TextInput","TextInput2","TextInput3","OptionField2","DateField2","DayField","convertAndAddto24hourFormat","formData","ampm","selectedampm","minute","selectedminute","hour","selectedhour","Number","time","timestr","toString","AboutEditForm","props","data","setData","initialFormData","Object","freeze","updateFormData","handleChange","e","target","name","value","trim","handleSubmit","preventDefault","window","location","reload","intervals","timeintervals","searchUsers","getSearchUsers","handleChangeSearch","namestring","console","log","addedUser","setAddedUser","selectSpeakerHandler","user","id","aboutEditFormDivParent","aboutEditForm","height","closeButtonDiv","onPress","closeFormButton","closeButtonIcon","logoAndTitleContainer","bwLogo","titleDiv","fontStyle","meeting","submitButtonDiv","submit_button"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from \"react\";\nimport classes from \"./EditMeetingForm.module.css\";\nimport {AiFillCloseCircle} from \"react-icons/ai\";\nimport logoImage from '../../../../../../CommonApps/BWlogo.JPG'\nimport {getuser, putuser, putuserprofile, putmeetinginfo, getusersfromnames, createnewpresentation} from '../../../../../../CommonApps/AllAPICalls';\n\nimport {TimeField, TextInput, TextInput2, TextInput3, OptionField2, DateField2, DayField} from './FormInputObjects'; \n\n\n\n\nconst convertAndAddto24hourFormat=({ formData })=>{\n          \n            let ampm = formData.selectedampm;\n            let minute = formData.selectedminute;\n            let hour = formData.selectedhour;\n            if(ampm===\"pm\"){\n              hour=Number(hour)+12;\n            }\n\n            //let time=hour+':'+minute+':'+'00';\n            let time =`${hour}:${minute}:00`;\n            let timestr= time.toString();\n            formData[\"talktime\"]=timestr;\n          \n}\n\n\n\nconst AboutEditForm=(props)=>{\n\n\n\n    const [data, setData ] = useState({});\n\n    useEffect(() =>{\n     getuser({setData});\n    },[]);\n\n\n    const initialFormData = Object.freeze({\n\n    });\n\n\n\n    const [formData, updateFormData] = useState(initialFormData)\n\n    const handleChange = (e) => {\n                updateFormData({\n                        ...formData,\n                        [e.target.name]: e.target.value.trim(),\n                });\n        };\n\n\n\n\n\n\n    const handleSubmit = (e) => {\n\t\te.preventDefault();\n\n\n\t        //props.userDataUpdated(true);\n\t        window.location.reload(false);\n\t        //props.onPress();\n\t};\n\n\n   let intervals = [\"scheduled\",\"postponed\",\"cancelled\"]\n\n   let timeintervals = [0,5,10,15,20,25,30,40,50,60,90,120,180]\n  \n\n   const [searchUsers, getSearchUsers] = useState([])\n\n   const handleChangeSearch=(e)=>{\n\n     let namestring = e.target.value;\n     getusersfromnames({namestring, getSearchUsers});\n\n   }\n\n\n   console.log(\"search users: \",searchUsers)\n\n   const [addedUser, setAddedUser] = useState({});\n\n\n   const selectSpeakerHandler=({user})=>{\n       console.log(\"userid: \",user.id);\n       setAddedUser(addedUser=>user);\t   \n   }\n\n\n\n   console.log(\"formData create presentation: \", formData);\n\n    console.log(\"added user: \", addedUser);\n\n\nreturn(\n\n<div className={classes.aboutEditFormDivParent}>\n\n\n  <form className={classes.aboutEditForm} onSubmit={handleSubmit} style={{height:\"90vh\"}}>\n\n\n\n      <div className={classes.closeButtonDiv}>\n          <button onClick={props.onPress} className={classes.closeFormButton}> <AiFillCloseCircle className={classes.closeButtonIcon}/> </button>\n      </div>\t\n\n\n      <div className={classes.logoAndTitleContainer}>\n    \t   <img  className={classes.bwLogo} src={logoImage} alt='edr Logo' />\n           <div className={classes.titleDiv}><i style={{fontStyle:\"normal\"}}>  Add a new talk: Meeting ID {props.meeting.id}  </i></div>\n      </div>\n\n\n      <TextInput2 handleChange={handleChange} \n\t     label=\"Title of the talk\" \n\t     name=\"talktitle\" \n\t     placeholder=\"Enter title\"  \n\t     defaultValue={\"\"}\n\t   />\n\n       \n      <TimeField handleChange={handleChange}\n                     label=\"Talk time\"\n                     selectedhour = \"selectedhour\"\n                     selectedminute = \"selectedminute\"\n                     selectedampm = \"selectedampm\"\n                     placeholder=\"Enter a time\"\n                />\n       \n\n      <OptionField2 handleChange={handleChange}  \n\t            label=\"Talk duration\" \n\t            name=\"duration\"  \n\t            options={timeintervals} \n\t            defaultValue={\"\"}/>\n      \n\n     <TextInput3 handleChange={handleChangeSearch} \n\t         label=\"Add speaker\" \n\t         name=\"speaker\" \n\t         placeholder=\"Search by firstname\"  \n\t         defaultValue={\"\"}\n\t         searchUsers={searchUsers}\n\t         selectedSpeaker={selectSpeakerHandler}\n\t         addedUser={addedUser}\n\t      />\n\n\n\n\n     <div className={classes.submitButtonDiv}>\n          <button type=\"submit\"  className= {classes.submit_button} ><b>Save </b> </button>\n\n     </div>\n\n\n\n\n  </form>\n\n\n\n</div>\t\n);\n\n}\n\n\nexport default AboutEditForm;\n"]},"metadata":{},"sourceType":"module"}