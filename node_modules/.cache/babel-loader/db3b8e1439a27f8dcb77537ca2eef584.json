{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { getJaaSDomain, getRoomName } from '../utils';\nimport { JitsiMeeting } from '.';\n/**\n * Returns the JaaSMeeting Component with access to the 8x8.vc External API\n * to be used as-it-is in React projects\n *\n * @param {IJaaSMeetingProps} props the component's props\n * @returns {ReactElement} the `JaaSMeeting` Component\n * @example\n  ```js\n      <JaaSMeeting\n        roomName: 'TestingJaaSMeetingComponent'\n        appId='exampleAppId'\n        spinner={CustomSpinner}\n        onApiReady={(externalApi) => console.log(externalApi)}\n      />\n  ```\n */\n\nvar JaaSMeeting = function JaaSMeeting(_a) {\n  var appId = _a.appId,\n      roomName = _a.roomName,\n      useStaging = _a.useStaging,\n      release = _a.release,\n      rest = __rest(_a, [\"appId\", \"roomName\", \"useStaging\", \"release\"]);\n\n  return _jsx(JitsiMeeting, Object.assign({\n    domain: getJaaSDomain(useStaging),\n    roomName: getRoomName(roomName, appId),\n    release: release\n  }, rest), void 0);\n};\n\nexport default JaaSMeeting;","map":null,"metadata":{},"sourceType":"module"}