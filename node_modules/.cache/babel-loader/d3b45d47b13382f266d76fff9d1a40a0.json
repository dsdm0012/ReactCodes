{"ast":null,"code":"'use strict';\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar MediaSignaling = require('./mediasignaling');\n/**\n * @property {?Track.SID} loudestParticipantSid\n * @emits DominantSpeakerSignaling#updated\n */\n\n\nvar DominantSpeakerSignaling =\n/** @class */\nfunction (_super) {\n  __extends(DominantSpeakerSignaling, _super);\n  /**\n   * Construct an {@link DominantSpeakerSignaling}.\n   */\n\n\n  function DominantSpeakerSignaling(getReceiver, options) {\n    var _this = _super.call(this, getReceiver, 'active_speaker', options) || this;\n\n    Object.defineProperties(_this, {\n      _loudestParticipantSid: {\n        value: null,\n        writable: true\n      }\n    });\n\n    _this.on('ready', function (transport) {\n      transport.on('message', function (message) {\n        switch (message.type) {\n          case 'active_speaker':\n            _this._setLoudestParticipantSid(message.participant);\n\n            break;\n\n          default:\n            break;\n        }\n      });\n    });\n\n    return _this;\n  }\n\n  Object.defineProperty(DominantSpeakerSignaling.prototype, \"loudestParticipantSid\", {\n    /**\n     * Get the loudest {@link Track.SID}, if known.\n     * @returns {?Track.SID}\n     */\n    get: function () {\n      return this._loudestParticipantSid;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * @private\n   * @param {Track.SID} loudestParticipantSid\n   * @returns {void}\n   */\n\n  DominantSpeakerSignaling.prototype._setLoudestParticipantSid = function (loudestParticipantSid) {\n    if (this.loudestParticipantSid === loudestParticipantSid) {\n      return;\n    }\n\n    this._loudestParticipantSid = loudestParticipantSid;\n    this.emit('updated');\n  };\n\n  return DominantSpeakerSignaling;\n}(MediaSignaling);\n/**\n * @event DominantSpeakerSignaling#updated\n */\n\n\nmodule.exports = DominantSpeakerSignaling;","map":null,"metadata":{},"sourceType":"script"}