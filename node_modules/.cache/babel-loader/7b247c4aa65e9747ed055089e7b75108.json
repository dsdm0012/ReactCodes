{"ast":null,"code":"var _jsxFileName = \"/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/MainApps/Account/UserProfile/Advanced/Forms/CreateAchievementForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport classes from \"./EduDegreeForm.module.css\";\nimport { AiFillCloseCircle } from \"react-icons/ai\";\nimport logoImage from '../../../../../CommonApps/BWlogo.JPG';\nimport { OptionField, OptionFieldSubmitValue, OptionFieldSecondaryObjs, ParagraphField, TextInput, DateField } from './FormInputObjects';\nimport { getdegreenames, getinstitutenames, getuser, createedudegree } from '../../../../../CommonApps/AllAPICalls.js'; //import FadeLoader from \"react-spinners/FadeLoader\";\n//import { css } from \"@emotion/react\";\n\n/*const override = css`\ndisplay: block;\nmargin: 0 auto;\nborder-color: red;\n`;*/\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CreateAchievementForm = props => {\n  _s();\n\n  //const [loading, setLoading] = useState(true);\n  //const [color, setColor] = useState(\" var(--themeColor)\");\n  const [data, setData] = useState({});\n  const [degreeNames, getDegreeNames] = useState([{\n    \"id\": 99999999,\n    \"name\": \"Unable to fetch ticket category\"\n  }]);\n  const [instituteNames, getInstituteNames] = useState([{\n    \"id\": 99999999,\n    \"name\": \"Unable to fetch ticket category\"\n  }]);\n  const [selectedBoardName, setSelectedBoardName] = useState(\"\");\n  const [subjectsObject, setSubjectsObject] = useState([{\n    name: null\n  }]);\n  const [formSubmitted, setFormSubmitted] = useState(false);\n  useEffect(() => {\n    getdegreenames({\n      getDegreeNames\n    });\n  }, []);\n  useEffect(() => {\n    getinstitutenames({\n      getInstituteNames\n    });\n  }, []);\n  useEffect(() => {\n    getuser({\n      setData\n    });\n  }, []);\n  const initialFormData = Object.freeze({\n    userId: data.id,\n    careof: \"\",\n    houseno: \"\",\n    streetno: \"\",\n    district: \"\",\n    pincode: \"\",\n    city: \"\",\n    state: \"\",\n    country: \"\",\n    addressType: null\n  });\n  const [formData, updateFormData] = useState(initialFormData);\n\n  const handleChange1 = e => {\n    //setClassId(classId=>e.target.value);\n    updateFormData({ ...formData,\n      [e.target.name]: e.target.value.trim()\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault(); //setShowForm(false);\n\n    if (formData.degreename === null) {\n      alert('please enter degree name');\n      return null;\n    }\n\n    if (formData.institute === null) {\n      alert('please enter name of the institute');\n      return null;\n    }\n\n    if (formData.startDate === null) {\n      alert('please enter start date');\n      return null;\n    }\n\n    if (formData.endDate === null) {\n      alert('please enter end date');\n      return null;\n    } //setTimeout(() => {console.log('Hello, World!')}, 5000);\n    // setShowForm(false);\n\n\n    createedudegree({\n      formData,\n      data\n    }); //alert(\"Succssfully submitted\");\n    //window.location.reload(true);\n    //alert(\"Successfully submitted\");\n    // setShowForm(true);\n\n    props.onPress(); //setFormSubmitted(!formSubmitted);\n    //return new Promise(resolve => {\n    //    setTimeout(() => {\n    //        resolve();\n    //    }, 2000);\n    //});\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.createTicketFormDivParent,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.createTicketForm,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.closeButtonDiv,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: props.onPress,\n          className: classes.closeFormButton,\n          children: [\" \", /*#__PURE__*/_jsxDEV(AiFillCloseCircle, {\n            className: classes.closeButtonIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 80\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.logoAndTitleContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: classes.bwLogo,\n          src: logoImage,\n          alt: \"edr Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.formTitleDiv,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"  Add a degree \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(OptionField, {\n        handleChange: handleChange1,\n        label: \"Choose a degree\",\n        name: \"degreename\",\n        options: degreeNames\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(OptionField, {\n        handleChange: handleChange1,\n        label: \"Choose a degree\",\n        name: \"institute\",\n        options: instituteNames\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n        handleChange: handleChange1,\n        label: \"Title \",\n        name: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DateField, {\n        handleChange: handleChange1,\n        label: \"Start date\",\n        name: \"startDate\",\n        placeholder: \"Enter degree start date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(DateField, {\n        handleChange: handleChange1,\n        label: \"End date\",\n        name: \"endDate\",\n        placeholder: \"Enter degree end date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.submitButtonDiv,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: classes.submit_button,\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Create \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 71\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 1\n  }, this);\n};\n\n_s(CreateAchievementForm, \"FAsWRZZP+PZ4LAS+HaUNvVuoV+c=\");\n\n_c = CreateAchievementForm;\nexport default CreateAchievementForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAchievementForm\");","map":{"version":3,"sources":["/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/MainApps/Account/UserProfile/Advanced/Forms/CreateAchievementForm.js"],"names":["React","useState","useEffect","classes","AiFillCloseCircle","logoImage","OptionField","OptionFieldSubmitValue","OptionFieldSecondaryObjs","ParagraphField","TextInput","DateField","getdegreenames","getinstitutenames","getuser","createedudegree","CreateAchievementForm","props","data","setData","degreeNames","getDegreeNames","instituteNames","getInstituteNames","selectedBoardName","setSelectedBoardName","subjectsObject","setSubjectsObject","name","formSubmitted","setFormSubmitted","initialFormData","Object","freeze","userId","id","careof","houseno","streetno","district","pincode","city","state","country","addressType","formData","updateFormData","handleChange1","e","target","value","trim","handleSubmit","preventDefault","degreename","alert","institute","startDate","endDate","onPress","createTicketFormDivParent","createTicketForm","closeButtonDiv","closeFormButton","closeButtonIcon","logoAndTitleContainer","bwLogo","formTitleDiv","submitButtonDiv","submit_button"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from \"react\";\nimport classes from \"./EduDegreeForm.module.css\";\nimport {AiFillCloseCircle} from \"react-icons/ai\";\nimport logoImage from '../../../../../CommonApps/BWlogo.JPG'\nimport {OptionField,OptionFieldSubmitValue,OptionFieldSecondaryObjs, ParagraphField,TextInput, DateField} from './FormInputObjects';\nimport {getdegreenames, getinstitutenames, getuser, createedudegree} from '../../../../../CommonApps/AllAPICalls.js';\n//import FadeLoader from \"react-spinners/FadeLoader\";\n//import { css } from \"@emotion/react\";\n\n\n  /*const override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n  `;*/\n\n\n\nconst CreateAchievementForm=(props)=>{\n\n\n   //const [loading, setLoading] = useState(true);\n   //const [color, setColor] = useState(\" var(--themeColor)\");\n\n   const [data, setData] = useState({});\n\n   const [degreeNames, getDegreeNames] = useState([{\"id\": 99999999,\"name\": \"Unable to fetch ticket category\"}]);\n\n   const [instituteNames, getInstituteNames] = useState([{\"id\": 99999999,\"name\": \"Unable to fetch ticket category\"}]);\n\n   const [selectedBoardName, setSelectedBoardName] = useState(\"\");\n\n   const [subjectsObject,setSubjectsObject] = useState([{name:null}]);\n\n   const [formSubmitted,setFormSubmitted] = useState(false);\n\n\n   useEffect(() =>{\n     getdegreenames({getDegreeNames});\n   },[])\n\n\n   useEffect(() =>{\n    getinstitutenames({getInstituteNames});\n   },[])\n\n\n   useEffect(()=>{\n     getuser({setData});\n   },[]);\n\n\n\n\nconst initialFormData = Object.freeze({\n\n               userId: data.id,\n               careof: \"\",\n               houseno: \"\",\n               streetno: \"\",\n               district: \"\",\n               pincode: \"\",\n               city: \"\",\n               state: \"\",\n               country: \"\",\n               addressType: null\n\n        });\n\n\n\nconst [formData, updateFormData] = useState(initialFormData);\n\nconst handleChange1 = (e) => {\n\n\t//setClassId(classId=>e.target.value);\n        updateFormData({\n                        ...formData,\n                        [e.target.name]: e.target.value.trim(),\n                });\n        };\n\n\n\n\n\n\n\nconst handleSubmit = (e) => {\n\t  e.preventDefault();\n\t  //setShowForm(false);\n\t   \n          if(formData.degreename===null){\n\t\t  alert('please enter degree name');\n\t\t  return null;\n\t  }\n\n          if(formData.institute===null){\n                  alert('please enter name of the institute');\n                  return null;\n          }\n\n\n\t  if(formData.startDate===null){\n                  alert('please enter start date');\n                  return null;\n          }\n\n          if(formData.endDate===null){\n                  alert('please enter end date');\n                  return null;\n          }\n\n\n\n         //setTimeout(() => {console.log('Hello, World!')}, 5000);\n         // setShowForm(false);\n\n         createedudegree({formData, data});\n\t //alert(\"Succssfully submitted\");\n\t //window.location.reload(true);\n\t //alert(\"Successfully submitted\");\n\t // setShowForm(true);\n\n         props.onPress();\n\n         //setFormSubmitted(!formSubmitted);\n\n\n\t //return new Promise(resolve => {\n         //    setTimeout(() => {\n         //        resolve();\n         //    }, 2000);\n         //});\n\t\n\t\n\t};\n\n\n\n\n\n\n\n\nreturn(\n\n<div className={classes.createTicketFormDivParent}>\n\n   {/*!showForm &&  \n\t   <div className={classes.createTicketFormLoading}>\n\n\t   <FadeLoader color={color} loading={loading} css={\"\"} size={50}  />\n\t    \n\t   <div className={classes.submittingDiv}> Creating . . . </div>\n           </div>\n   */}\n\n\n   { \t\n  <form className={classes.createTicketForm} onSubmit={handleSubmit}>\n\n       {/*form close button below*/}\t\n       <div className={classes.closeButtonDiv}>\n          <button onClick={props.onPress} className={classes.closeFormButton}> <AiFillCloseCircle className={classes.closeButtonIcon}/> </button>\n       </div>\t\n\n \n       {/*logo and field title container below*/}\n       <div className={classes.logoAndTitleContainer}>\n\t  <img  className={classes.bwLogo} src={logoImage} alt='edr Logo' />\n           <div className={classes.formTitleDiv}><i>  Add a degree </i></div>\n       </div>\n\n\n\n       <OptionField handleChange={handleChange1}  label=\"Choose a degree\" name=\"degreename\"  options={degreeNames}/>\n\n       <OptionField handleChange={handleChange1}  label=\"Choose a degree\" name=\"institute\"  options={instituteNames}/>\n\n\n        <TextInput handleChange={handleChange1} label=\"Title \" name=\"\" />\n   \n\n      \n       <DateField handleChange={handleChange1} label=\"Start date\" name=\"startDate\" placeholder=\"Enter degree start date\"   />\n\n       <DateField handleChange={handleChange1} label=\"End date\" name=\"endDate\" placeholder=\"Enter degree end date\"   />\n\n\n\n\n\n       <div className={classes.submitButtonDiv}>\n       \n           <button type=\"submit\"  className= {classes.submit_button} ><b>Create </b> </button>\n\n       </div>\n\n\n\n\n  </form>\n\n   }\n\n\n</div>\t\n);\n\n}\n\n\nexport default CreateAchievementForm;\n"]},"metadata":{},"sourceType":"module"}