{"ast":null,"code":"import React,{useEffect}from'react';import classes from'./CourseDropDown.module.css';//import { FaGraduationCap,FaRegUser } from \"react-icons/fa\";\n//import { FiSettings,FiHelpCircle,FiLogOut } from \"react-icons/fi\";\n//import { useHistory } from 'react-router-dom';\n//import OutsideAlerter from \"./HeaderRight/UserHead/OutsideAlerter\";\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var UserHeadDropDown=function UserHeadDropDown(props){//console.log(\"rerendering drop down\");\nvar courseSwitchHandler=function courseSwitchHandler(courseId){localStorage.setItem('preferredCourseId',courseId);window.location.reload(false);};//const [buttonStyle, setButtonStyle] = useState({\n//backgroundColor:\"#b8d1ff\",\n//color:\"var(--themeColor)\"\t    \n//});\nvar selectedCourseId=localStorage.getItem('preferredCourseId');useEffect(function(){},[selectedCourseId]);//const onMouseOverButton=()=>{\n//setButtonStyle({\n//  backgroundColor:\"#ffd4d1\",\n//  color:\"#ff5349\"\n//});\n//}\n//const onMouseLeaveButton=()=>{\n//setButtonStyle({\n//  backgroundColor:\"#b8d1ff\",\n//  color:\"var(--themeColor)\"\n//});\n//}\nvar buttonStyle1={backgroundColor:\"#b8d1ff\",color:\"var(--themeColor)\"};var buttonStyle2={backgroundColor:\"#ffd4d1\",color:\"#ff5349\"};//console.log(\"selectedCourseId\", typeof selectedCourseId)\nreturn/*#__PURE__*/_jsxs(\"div\",{className:classes.DropDown,children:[props.userData.usertype===4&&/*#__PURE__*/_jsxs(\"div\",{className:classes.courseSelectText,children:[\" \",/*#__PURE__*/_jsx(\"b\",{children:\" Select a Project\"})]}),props.userData.usertype!==4&&/*#__PURE__*/_jsxs(\"div\",{className:classes.courseSelectText,children:[\" \",/*#__PURE__*/_jsx(\"b\",{children:\" Select a Course\"})]}),props.dashboardCourses.map(function(course,index){return/*#__PURE__*/_jsx(\"button\",{className:classes.courseBox,onClick:function onClick(){return courseSwitchHandler(course.id);},style:Number(selectedCourseId)===course.id?buttonStyle2:buttonStyle1,children:/*#__PURE__*/_jsxs(\"b\",{children:[\" \",course.subject+\":  \",course.courseGlobalCode]})},index);}),props.dashboardCourses.length===0&&/*#__PURE__*/_jsx(\"div\",{style:{color:'grey'},children:\" No courses available!\"})]});};export default UserHeadDropDown;","map":{"version":3,"sources":["/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/components/Header/CourseDropDown.js"],"names":["React","useEffect","classes","UserHeadDropDown","props","courseSwitchHandler","courseId","localStorage","setItem","window","location","reload","selectedCourseId","getItem","buttonStyle1","backgroundColor","color","buttonStyle2","DropDown","userData","usertype","courseSelectText","dashboardCourses","map","course","index","courseBox","id","Number","subject","courseGlobalCode","length"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAcC,SAAd,KAA8B,OAA9B,CACA,MAAOC,CAAAA,OAAP,KAAoB,6BAApB,CACA;AACA;AACA;AACA;wFAGA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,KAAD,CAAU,CAEhC;AAGC,GAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACC,QAAD,CAAY,CACrCC,YAAY,CAACC,OAAb,CAAqB,mBAArB,CAA0CF,QAA1C,EACAG,MAAM,CAACC,QAAP,CAAgBC,MAAhB,CAAuB,KAAvB,EACF,CAHD,CAKA;AACG;AACA;AACH;AAED,GAAIC,CAAAA,gBAAgB,CAAGL,YAAY,CAACM,OAAb,CAAqB,mBAArB,CAAvB,CAEAZ,SAAS,CAAC,UAAI,CAIb,CAJQ,CAIP,CAACW,gBAAD,CAJO,CAAT,CAMA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACE;AACA;AACA;AACA;AAEF;AAGD,GAAIE,CAAAA,YAAY,CAAC,CAACC,eAAe,CAAC,SAAjB,CACfC,KAAK,CAAC,mBADS,CAAjB,CAGA,GAAIC,CAAAA,YAAY,CAAC,CAACF,eAAe,CAAC,SAAjB,CACfC,KAAK,CAAC,SADS,CAAjB,CAIA;AAIF,mBAGI,aAAK,SAAS,CAAEd,OAAO,CAACgB,QAAxB,WACAd,KAAK,CAACe,QAAN,CAAeC,QAAf,GAA2B,CAA3B,eACI,aAAK,SAAS,CAAElB,OAAO,CAACmB,gBAAxB,4BAA4C,wCAA5C,GAFJ,CAKOjB,KAAK,CAACe,QAAN,CAAeC,QAAf,GAA2B,CAA3B,eACH,aAAK,SAAS,CAAElB,OAAO,CAACmB,gBAAxB,4BAA4C,uCAA5C,GANJ,CAYQjB,KAAK,CAACkB,gBAAN,CAAuBC,GAAvB,CAA2B,SAACC,MAAD,CAASC,KAAT,CAAiB,CAGpC,mBAAQ,eAAQ,SAAS,CAAEvB,OAAO,CAACwB,SAA3B,CACN,OAAO,CAAE,yBAAIrB,CAAAA,mBAAmB,CAACmB,MAAM,CAACG,EAAR,CAAvB,EADH,CAGN,KAAK,CAAEC,MAAM,CAAChB,gBAAD,CAAN,GAA6BY,MAAM,CAACG,EAApC,CAAwCV,YAAxC,CAAuDH,YAHxD,uBAKd,yBAAKU,MAAM,CAACK,OAAP,CAAe,KAApB,CACQL,MAAM,CAACM,gBADf,GALc,EAEDL,KAFC,CAAR,CASP,CAZD,CAZR,CA6BOrB,KAAK,CAACkB,gBAAN,CAAuBS,MAAvB,GAAgC,CAAhC,eAAqC,YAAK,KAAK,CAAE,CAACf,KAAK,CAAE,MAAR,CAAZ,oCA7B5C,GAHJ,CA+CC,CAlGD,CAqGA,cAAeb,CAAAA,gBAAf","sourcesContent":["import React,{useEffect} from 'react';\nimport classes from './CourseDropDown.module.css';\n//import { FaGraduationCap,FaRegUser } from \"react-icons/fa\";\n//import { FiSettings,FiHelpCircle,FiLogOut } from \"react-icons/fi\";\n//import { useHistory } from 'react-router-dom';\n//import OutsideAlerter from \"./HeaderRight/UserHead/OutsideAlerter\";\n\n\nconst UserHeadDropDown = (props) =>{\n\n   //console.log(\"rerendering drop down\");\n\n\n    const courseSwitchHandler = (courseId)=>{\n       localStorage.setItem('preferredCourseId', courseId);\n       window.location.reload(false);\n    }\n\n    //const [buttonStyle, setButtonStyle] = useState({\n       //backgroundColor:\"#b8d1ff\",\n       //color:\"var(--themeColor)\"\t    \n    //});\n\n   let selectedCourseId = localStorage.getItem('preferredCourseId');\n\n   useEffect(()=>{\n\n\n\n   },[selectedCourseId]);\n\n   //const onMouseOverButton=()=>{\n   //setButtonStyle({\n   //  backgroundColor:\"#ffd4d1\",\n   //  color:\"#ff5349\"\n   //});\n\n   //}\n\n   //const onMouseLeaveButton=()=>{\n     //setButtonStyle({\n     //  backgroundColor:\"#b8d1ff\",\n     //  color:\"var(--themeColor)\"\n     //});\n\n   //}\n\n\n  let buttonStyle1={backgroundColor:\"#b8d1ff\",\n    color:\"var(--themeColor)\"};\n\n  let buttonStyle2={backgroundColor:\"#ffd4d1\",\n    color:\"#ff5349\"};\t\n\n\n  //console.log(\"selectedCourseId\", typeof selectedCourseId)\n\n\n\nreturn (\n\n\n    <div className={classes.DropDown} >\n\t { props.userData.usertype ===4 &&\n        <div className={classes.courseSelectText} > <b> Select a Project</b></div>\t\n         }\n\n         { props.userData.usertype !==4 &&\n        <div className={classes.courseSelectText} > <b> Select a Course</b></div>\n         }\n\n\n\n       {\n            props.dashboardCourses.map((course, index)=>{\n\n\n                    return  <button className={classes.courseBox} \n\t\t                    onClick={()=>courseSwitchHandler(course.id)} \n\t\t                    key={index}\n\t\t                    style={Number(selectedCourseId) === course.id? buttonStyle2 : buttonStyle1}\n\t\t\t    > \n\t\t\t           <b> {course.subject+\":  \"}\n\t\t                   {course.courseGlobalCode}</b>\n\t\t\t    </button>\n\n            })\n       }\n\n\n       {\n           props.dashboardCourses.length===0 && <div style={{color: 'grey'}}> No courses available!</div>\n\n       }\n\n\n\n\n\n    </div>\t\n\n\n\n\n);\n\n}\n\n\nexport default UserHeadDropDown;\n\n"]},"metadata":{},"sourceType":"module"}