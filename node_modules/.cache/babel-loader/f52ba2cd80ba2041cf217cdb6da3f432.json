{"ast":null,"code":"var _jsxFileName = \"/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/allAppsStudent/Messages/VATChat/ChatWindow/ChatWindowTest.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport classes from \"./ChatWindow.module.css\";\nimport ChatUserInfoTopBar from \"./ChatUserInfoTopBar\";\nimport ChatScreen from \"./ChatScreen\";\nimport ChatInput from \"./ChatInput\";\nimport { w3cwebsocket as W3CWebSocket } from 'websocket';\nimport { Picker } from \"emoji-mart\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport Login from '../../../../CommonApps/Login';\nimport axiosInstance from '../../../../axios';\nimport { MdSend } from 'react-icons/md';\nimport { postchatcomment, getchatcomments } from '../../../../CommonApps/AllAPICalls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet isConnected = false;\nlet messageContainerFromServer = [];\n\nfunction connect() {\n  let client;\n  messageContainerFromServer = ['Jai'];\n  let name = \"bibhu\";\n\n  function on(fn) {\n    messageContainerFromServer.push(fn);\n  }\n\n  function start() {\n    client = new W3CWebSocket('ws://127.0.0.1:8000/ws/chat/class/');\n\n    client.onclose = () => {\n      isConnected = false;\n      console.log('time 1');\n      setTimeout(start, 3000);\n      console.log('time 2');\n    };\n\n    client.onopen = () => {\n      isConnected = true;\n    };\n\n    client.onmessage = event => {\n      const dataFromServer = JSON.parse(event.data); //console.log(\"on message\", dataFromServer.message);\n\n      messageContainerFromServer = [...messageContainerFromServer, dataFromServer.message];\n    };\n  }\n\n  console.log('messageContainerFromServer: ', messageContainerFromServer);\n  start();\n  return {\n    gotMsg,\n    name: () => name,\n    getClient: () => client,\n    messages: () => messageContainerFromServer\n  };\n}\n\nconst client = connect();\n\nfunction useMessages() {\n  _s();\n\n  const [messages, setMessages] = useState(['hey you']);\n  useEffect(() => {\n    function handleMessage(message) {\n      setMessages([...messages, message]);\n    } //   client.on(handleMessage);\n    //    return () => client.off(handleMessage);\n\n  }, [messages, setMessages]);\n  return messages;\n}\n\n_s(useMessages, \"AI1f8hRx7Kr1jE9xSSARsGGImSQ=\");\n\nconst ChatWindow = props => {\n  _s2();\n\n  console.log('isConnected: ', isConnected);\n  let roomname = 'class';\n  const [commentObj, setChatCommentObj] = useState([{}]);\n  const [message, setMessage] = useState(''); //const [messages,setMessages] = useState(client.messages());\n\n  const messages = useMessages(); //  useEffect(()=>{\n  //   console.log('-----------',messageContainerFromServer);\n  //   setMessages(messages=>messageContainerFromServer);\n  //   },[messageContainerFromServer]);\n\n  function sendMessage(e) {\n    e.preventDefault();\n    client.getClient().send(JSON.stringify({\n      type: \"message\",\n      message: message\n    }));\n    console.log('sending message', message);\n    setMessage('');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.chatWindow,\n    children: [/*#__PURE__*/_jsxDEV(ChatUserInfoTopBar, {\n      clickedUserId: props.clickedUserId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(ChatScreen, {\n      messages: messages,\n      commentObj: commentObj\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.chatInput,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.addCommentForm,\n        onSubmit: sendMessage,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.chatInput,\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: classes.inputTextBox,\n            value: message,\n            onChange: e => setMessage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: classes.submit_button,\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: [/*#__PURE__*/_jsxDEV(MdSend, {\n              className: classes.sendButtonIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 80\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 77\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 1\n  }, this);\n};\n\n_s2(ChatWindow, \"OaeVuiP+HMOyrygYJVWIvzoGJSk=\", false, function () {\n  return [useMessages];\n});\n\n_c = ChatWindow;\nexport default ChatWindow;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"sources":["/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/allAppsStudent/Messages/VATChat/ChatWindow/ChatWindowTest.js"],"names":["React","useState","useEffect","useRef","classes","ChatUserInfoTopBar","ChatScreen","ChatInput","w3cwebsocket","W3CWebSocket","Picker","Login","axiosInstance","MdSend","postchatcomment","getchatcomments","isConnected","messageContainerFromServer","connect","client","name","on","fn","push","start","onclose","console","log","setTimeout","onopen","onmessage","event","dataFromServer","JSON","parse","data","message","gotMsg","getClient","messages","useMessages","setMessages","handleMessage","ChatWindow","props","roomname","commentObj","setChatCommentObj","setMessage","sendMessage","e","preventDefault","send","stringify","type","chatWindow","clickedUserId","chatInput","addCommentForm","inputTextBox","target","value","submit_button","sendButtonIcon"],"mappings":"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","sourcesContent":["import React,{useState,useEffect,useRef} from \"react\";\nimport classes from \"./ChatWindow.module.css\"\nimport ChatUserInfoTopBar from \"./ChatUserInfoTopBar\";\nimport ChatScreen from \"./ChatScreen\";\nimport ChatInput from \"./ChatInput\";\nimport {w3cwebsocket as W3CWebSocket } from 'websocket';\nimport { Picker } from \"emoji-mart\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport Login from '../../../../CommonApps/Login';\nimport axiosInstance from '../../../../axios';\nimport {MdSend} from 'react-icons/md';\nimport {postchatcomment,getchatcomments} from '../../../../CommonApps/AllAPICalls';\n\n\n\n\nlet isConnected= false;\nlet messageContainerFromServer=[]\n\nfunction connect (){\n\nlet client;\nmessageContainerFromServer=['Jai'];\nlet name=\"bibhu\";\nfunction on(fn) {\n    messageContainerFromServer.push(fn);\n  }\n\n\n\nfunction start () {\n\nclient = new W3CWebSocket('ws://127.0.0.1:8000/ws/chat/class/');\n\nclient.onclose = () => {\nisConnected=false;\nconsole.log('time 1');\nsetTimeout(start, 3000);\nconsole.log('time 2');\n}\n\nclient.onopen=()=>{\nisConnected=true;\n}\n\nclient.onmessage = (event)=>{\nconst dataFromServer = JSON.parse(event.data);\t\n//console.log(\"on message\", dataFromServer.message);\n\nmessageContainerFromServer=[...messageContainerFromServer,dataFromServer.message];\n\n}\n\n\n}\n\nconsole.log('messageContainerFromServer: ',messageContainerFromServer);\nstart();\n\nreturn {\n\n    gotMsg,\t\n    name: () => name,\n    getClient: () => client,\n    messages: ()=> messageContainerFromServer,\t\n\n   }\n}\n\nconst client = connect();\n\n\n\nfunction useMessages() {\n  const [messages, setMessages] = useState(['hey you']);\n\n  useEffect(() => {\n    function handleMessage(message) {\n      setMessages([...messages, message]);\n    }\n //   client.on(handleMessage);\n //    return () => client.off(handleMessage);\n  }, [messages, setMessages]);\n\n  return messages;\n}\n\n\n\n\n\n\n\nconst ChatWindow = (props) =>{\n\n\n   console.log('isConnected: ', isConnected);\n\n   let roomname='class'\n\n   const [commentObj,setChatCommentObj]=useState([{}]);\n\n   const [message, setMessage] = useState('');\n   \n   //const [messages,setMessages] = useState(client.messages());\n\n   const messages = useMessages();  \n\n\n //  useEffect(()=>{\n \n//   console.log('-----------',messageContainerFromServer);\n//   setMessages(messages=>messageContainerFromServer);\n//   },[messageContainerFromServer]);\n\n\n\n function sendMessage(e) {\n    e.preventDefault();\n    client.getClient().send(JSON.stringify({\n      type: \"message\",\n      message: message,\n    }))\n    console.log('sending message', message);\t \n    setMessage('');\n\n\n   }\n\n\n\n\n\n\n\n\n\nreturn(\n\n<div className={classes.chatWindow}>\n\n<ChatUserInfoTopBar clickedUserId={props.clickedUserId} />\n\n<ChatScreen messages={messages}  commentObj={commentObj}/>\n\t\n<div className={classes.chatInput}>\n\n\n\n\n     <form className={classes.addCommentForm} onSubmit={sendMessage}>\n\n\n                  <div className={classes.chatInput} >\n\n                      <input className={classes.inputTextBox} value={message} onChange={e => setMessage(e.target.value)} />\n\n\n                  </div>\n\n                 \n                 <button type=\"submit\"  className= {classes.submit_button} ><b><MdSend className={classes.sendButtonIcon}/> </b> </button>\n                  \n     </form>\n\n\n</div>\n\n\n\n\t\n</div>\n\n);\n\n}\n\nexport default ChatWindow;\n"]},"metadata":{},"sourceType":"module"}