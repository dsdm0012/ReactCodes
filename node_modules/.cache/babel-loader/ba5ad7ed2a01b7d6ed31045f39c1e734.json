{"ast":null,"code":"var _jsxFileName = \"/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/allAppsStudent/Messages/VATChat/ChatWindow/ChatWindow.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport classes from \"./ChatWindow.module.css\";\nimport ChatUserInfoTopBar from \"./ChatUserInfoTopBar\";\nimport ChatScreen from \"./ChatScreen\";\nimport ChatInput from \"./ChatInput\";\nimport { w3cwebsocket as W3CWebSocket } from 'websocket';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatWindow = () => {\n  _s();\n\n  let roomname = 'class';\n  const [message, setMessage] = useState([]);\n  const [state, setState] = useState({\n    messages: [],\n    value: ''\n  });\n  const client = new W3CWebSocket('ws://127.0.0.1:8000/ws/chat/class/');\n  const initialFormData = Object.freeze({\n    comment: \"\"\n  });\n  const [formData, updateFormData] = useState(initialFormData);\n\n  const handleChange = e => {\n    updateFormData({ ...formData,\n      [e.target.name]: e.target.value.trim()\n    });\n  };\n\n  useEffect(() => {\n    client.onopen = () => {\n      console.log(\"web socket client connected\");\n    };\n\n    client.onmessage = message => {\n      const dataFromServer = JSON.parse(message.data);\n      console.log('got reply! ', dataFromServer.type);\n\n      if (dataFromServer) {\n        this.setState(state => ({\n          messages: [...state.messages, {\n            msg: dataFromServer.message,\n            name: dataFromServer.name\n          }]\n        }));\n      }\n    };\n  }, []);\n\n  const handleSubmit = e => {\n    client.send(JSON.stringify({\n      type: \"message\",\n      message: formData.comment\n    }));\n    formData.comment = '';\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.chatWindow,\n    children: [/*#__PURE__*/_jsxDEV(ChatUserInfoTopBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(ChatScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.chatInput,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.addCommentForm,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.inputTextBox,\n          children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n            type: \"text\",\n            onChange: handleChange,\n            name: \"comment\",\n            className: classes.inputText_field,\n            placeholder: \"Write your comment\",\n            defaultValue: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: classes.submit_button,\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Post comment \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 77\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 3\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 1\n  }, this);\n};\n\n_s(ChatWindow, \"96H8CvOwo0Od1PAYzIUF+XnShSI=\");\n\n_c = ChatWindow;\nexport default ChatWindow;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"sources":["/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/allAppsStudent/Messages/VATChat/ChatWindow/ChatWindow.js"],"names":["React","useState","useEffect","classes","ChatUserInfoTopBar","ChatScreen","ChatInput","w3cwebsocket","W3CWebSocket","ChatWindow","roomname","message","setMessage","state","setState","messages","value","client","initialFormData","Object","freeze","comment","formData","updateFormData","handleChange","e","target","name","trim","onopen","console","log","onmessage","dataFromServer","JSON","parse","data","type","msg","handleSubmit","send","stringify","preventDefault","chatWindow","chatInput","addCommentForm","inputTextBox","inputText_field","submit_button"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from \"react\";\nimport classes from \"./ChatWindow.module.css\"\nimport ChatUserInfoTopBar from \"./ChatUserInfoTopBar\";\nimport ChatScreen from \"./ChatScreen\";\nimport ChatInput from \"./ChatInput\";\nimport {w3cwebsocket as W3CWebSocket } from 'websocket';\n\n\n\n\nconst ChatWindow = () =>{\n\n\nlet roomname='class'\n\nconst [message,setMessage]=useState([]);\n\n\nconst [state, setState] = useState(\n\n  {\n    messages: [],\n    value: '',\n  }\n);\n\n\n\nconst client = new W3CWebSocket('ws://127.0.0.1:8000/ws/chat/class/');\n\n\n   const initialFormData = Object.freeze({\n        comment: \"\",\n        });\n\n   const [formData, updateFormData] = useState(initialFormData);\n\n\n   const handleChange = (e) => {\n                updateFormData({\n                        ...formData,\n                        [e.target.name]: e.target.value.trim(),\n                });\n        };\n\n\n\n\n\nuseEffect(()=>{\n\n\nclient.onopen=()=>{\n\n   console.log(\"web socket client connected\");};\n\n\n   client.onmessage = (message) => {\n\n    const dataFromServer = JSON.parse(message.data);\n    console.log('got reply! ', dataFromServer.type);\n\n\n\t   if (dataFromServer) {\n\n\n                this.setState((state) =>\n                  ({\n                      messages: [...state.messages,\n                               {\n                            msg: dataFromServer.message,\n                            name: dataFromServer.name,\n                               }]\n                  })\n                );\n\n\n\n\n\n\t   }\n\n     }\n},[]);\n\n\n\n\n  const handleSubmit = (e) => {\n     client.send(JSON.stringify({\n      type: \"message\",\n      message: formData.comment,\n    }));\n    formData.comment = ''\n    e.preventDefault();\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nreturn(\n\n<div className={classes.chatWindow}>\n\n<ChatUserInfoTopBar/>\n\n<ChatScreen/>\n\t\n\n\n<div className={classes.chatInput}>\n\n\n\n\n\n  <form className={classes.addCommentForm} onSubmit={handleSubmit}>\n\n                   <div className={classes.inputTextBox} >\n                          <textarea\n                             type=\"text\"\n                             onChange={handleChange}\n                             name=\"comment\"\n                             className={classes.inputText_field}\n                             placeholder=\"Write your comment\"\n                             defaultValue=\"\"\n                          />\n                    </div>\n\n\n\n\n\n\n\n\n\n                 <button type=\"submit\"  className= {classes.submit_button} ><b>Post comment </b> </button>\n           </form>\n\n\n\n\n\n\n\n\n\n\n\n\n</div>\n\n\n\t\n</div>\n\n);\n\n}\n\nexport default ChatWindow;\n"]},"metadata":{},"sourceType":"module"}