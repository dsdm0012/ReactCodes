{"ast":null,"code":"var _jsxFileName = \"/home/bibhu/Dropbox/myprojectdir_Django_DRF_React/edrUIreact/edrfront/src/components/SideNavBar/SideNavBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport classes from './SideNavBar.module.css';\nimport SideNavBarButton from './SideNavBarButton';\nimport SideToolBar from './SideToolBar';\nimport { BsSpeedometer, BsChatLeftText, BsUiChecksGrid, BsPencilSquare, BsPeople, BsFilePerson, BsHammer, BsBook } from \"react-icons/bs\";\nimport { BsGraphUp, BsZoomIn, BsTrophy, BsListOl, BsCalendarDay, BsJournalText, BsQuestionSquare } from 'react-icons/bs';\nimport { SiGoogleclassroom } from \"react-icons/si\";\nimport { GiTeacher } from \"react-icons/gi\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SideNavBar = props => {\n  _s();\n\n  let history = useHistory();\n  let activeButtonColor = \"linear-gradient(to right, var(--sideNavBarBtnhoverColor) 90%, var(--themeColor) 0%)\";\n  let inActivebuttonColor = \"var(--sideNavBarBkgColor)\";\n  const [sideNavBarWidth, setSideNavBarWidth] = useState(props.sideNavBarWidth);\n  const [dashboardButtonColor, setDashoardButtonColor] = useState(inActivebuttonColor);\n  const [messagesButtonColor, setMessagesButtonColor] = useState(inActivebuttonColor);\n  const [classButtonColor, setClassButtonColor] = useState(inActivebuttonColor);\n  const [tasksButtonColor, setTasksButtonColor] = useState(inActivebuttonColor);\n  const [booksButtonColor, setBooksButtonColor] = useState(inActivebuttonColor);\n  const [examButtonColor, setExamButtonColor] = useState(inActivebuttonColor);\n  const [classmatesButtonColor, setClassmatesButtonColor] = useState(inActivebuttonColor);\n  const [teacherButtonColor, setTeacherButtonColor] = useState(inActivebuttonColor);\n  const [prepareButtonColor, setPrepareButtonColor] = useState(inActivebuttonColor);\n  const [progressButtonColor, setProgressButtonColor] = useState(inActivebuttonColor);\n  const [analyticsButtonColor, setAnalyticsButtonColor] = useState(inActivebuttonColor);\n  const [achievementsButtonColor, setAchievementsButtonColor] = useState(inActivebuttonColor);\n  const [goalsButtonColor, setGoalsButtonColor] = useState(inActivebuttonColor);\n  const [calenderButtonColor, setCalenderButtonColor] = useState(inActivebuttonColor);\n  const [diaryButtonColor, setDiaryButtonColor] = useState(inActivebuttonColor);\n  const [helpcenterButtonColor, setHelpCenterButtonColor] = useState(inActivebuttonColor);\n  useEffect(() => {\n    setSideNavBarWidth(props.sideNavBarWidth);\n  }, [props.sideNavBarWidth]);\n  useEffect(() => {\n    let activeButtonColor = \"linear-gradient(to right, var(--sideNavBarBtnhoverColor) 90%, var(--themeColor) 0%)\";\n    let inActivebuttonColor = \"var(--sideNavBarBkgColor)\";\n    console.log(\"dahboard mount info in sideNavBar:\", props.dashboardMounted);\n    {\n      !props.dashboardMounted && setDashoardButtonColor(dashboardButtonColor => inActivebuttonColor);\n    }\n    ;\n    {\n      props.dashboardMounted && setDashoardButtonColor(dashboardButtonColor => activeButtonColor);\n    }\n    ;\n  }, [props.dashboardMounted]);\n  useEffect(() => {\n    let activeButtonColor = \"linear-gradient(to right, var(--sideNavBarBtnhoverColor) 90%, var(--themeColor) 0%)\";\n    let inActivebuttonColor = \"var(--sideNavBarBkgColor)\";\n    console.log(\"messages mount info inSideNavBar:\", props.messagesMounted);\n    {\n      !props.messagesMounted && setMessagesButtonColor(messagesButtonColor => inActivebuttonColor);\n    }\n    ;\n    {\n      props.messagesMounted && setMessagesButtonColor(messagesButtonColor => activeButtonColor);\n    }\n    ;\n  }, [props.messagesMounted]);\n  useEffect(() => {\n    let activeButtonColor = \"linear-gradient(to right, var(--sideNavBarBtnhoverColor) 90%, var(--themeColor) 0%)\";\n    let inActivebuttonColor = \"var(--sideNavBarBkgColor)\";\n    console.log(\"class mount info inSideNavBar:\", props.classMounted);\n    {\n      !props.classMounted && setClassButtonColor(classButtonColor => inActivebuttonColor);\n    }\n    ;\n    {\n      props.classMounted && setClassButtonColor(classButtonColor => activeButtonColor);\n    }\n    ;\n  }, [props.classMounted]);\n  useEffect(() => {\n    let activeButtonColor = \"linear-gradient(to right, var(--sideNavBarBtnhoverColor) 90%, var(--themeColor) 0%)\";\n    let inActivebuttonColor = \"var(--sideNavBarBkgColor)\";\n    console.log(\"tasks mount info inSideNavBar:\", props.tasksMounted);\n    {\n      !props.tasksMounted && setTasksButtonColor(tasksButtonColor => inActivebuttonColor);\n    }\n    ;\n    {\n      props.tasksMounted && setTasksButtonColor(tasksButtonColor => activeButtonColor);\n    }\n    ;\n  }, [props.tasksMounted]);\n  useEffect(() => {\n    let activeButtonColor = \"linear-gradient(to right, var(--sideNavBarBtnhoverColor) 90%, var(--themeColor) 0%)\";\n    let inActivebuttonColor = \"var(--sideNavBarBkgColor)\";\n    console.log(\"books mount info inSideNavBar:\", props.booksMounted);\n    {\n      !props.booksMounted && setBooksButtonColor(booksButtonColor => inActivebuttonColor);\n    }\n    ;\n    {\n      props.booksMounted && setBooksButtonColor(booksButtonColor => activeButtonColor);\n    }\n    ;\n  }, [props.booksMounted]);\n  useEffect(() => {\n    let activeButtonColor = \"linear-gradient(to right, var(--sideNavBarBtnhoverColor) 90%, var(--themeColor) 0%)\";\n    let inActivebuttonColor = \"var(--sideNavBarBkgColor)\";\n    console.log(\"exam mount info inSideNavBar:\", props.examMounted);\n    {\n      !props.examMounted && setExamButtonColor(examButtonColor => inActivebuttonColor);\n    }\n    ;\n    {\n      props.examMounted && setExamButtonColor(examButtonColor => activeButtonColor);\n    }\n    ;\n  }, [props.examMounted]);\n  useEffect(() => {\n    let activeButtonColor = \"linear-gradient(to right, var(--sideNavBarBtnhoverColor) 90%, var(--themeColor) 0%)\";\n    let inActivebuttonColor = \"var(--sideNavBarBkgColor)\";\n    console.log(\"clasmates mount info inSideNavBar:\", props.classmatesMounted);\n    {\n      !props.classmatesMounted && setClassmatesButtonColor(classmatesButtonColor => inActivebuttonColor);\n    }\n    ;\n    {\n      props.classmatesMounted && setClassmatesButtonColor(classmatesButtonColor => activeButtonColor);\n    }\n    ;\n  }, [props.classmatesMounted]);\n  useEffect(() => {\n    let activeButtonColor = \"linear-gradient(to right, var(--sideNavBarBtnhoverColor) 90%, var(--themeColor) 0%)\";\n    let inActivebuttonColor = \"var(--sideNavBarBkgColor)\";\n    console.log(\"teacher mount info inSideNavBar:\", props.teacherMounted);\n    {\n      !props.teacherMounted && setTeacherButtonColor(teacherButtonColor => inActivebuttonColor);\n    }\n    ;\n    {\n      props.teacherMounted && setTeacherButtonColor(teacherButtonColor => activeButtonColor);\n    }\n    ;\n  }, [props.teacherMounted]);\n  useEffect(() => {\n    let activeButtonColor = \"linear-gradient(to right, var(--sideNavBarBtnhoverColor) 90%, var(--themeColor) 0%)\";\n    let inActivebuttonColor = \"var(--sideNavBarBkgColor)\";\n    console.log(\"prepare mount info inSideNavBar:\", props.prepareMounted);\n    {\n      !props.prepareMounted && setPrepareButtonColor(prepareButtonColor => inActivebuttonColor);\n    }\n    ;\n    {\n      props.prepareMounted && setPrepareButtonColor(prepareButtonColor => activeButtonColor);\n    }\n    ;\n  }, [props.prepareMounted]);\n  useEffect(() => {\n    let activeButtonColor = \"linear-gradient(to right, var(--sideNavBarBtnhoverColor) 90%, var(--themeColor) 0%)\";\n    let inActivebuttonColor = \"var(--sideNavBarBkgColor)\";\n    console.log(\"progress mount info inSideNavBar:\", props.progressMounted);\n    {\n      !props.progressMounted && setProgressButtonColor(progressButtonColor => inActivebuttonColor);\n    }\n    ;\n    {\n      props.progressMounted && setProgressButtonColor(progressButtonColor => activeButtonColor);\n    }\n    ;\n  }, [props.progressMounted]);\n  useEffect(() => {\n    let activeButtonColor = \"linear-gradient(to right, var(--sideNavBarBtnhoverColor) 90%, var(--themeColor) 0%)\";\n    let inActivebuttonColor = \"var(--sideNavBarBkgColor)\";\n    console.log(\"analytics mount info inSideNavBar:\", props.analyticsMounted);\n    {\n      !props.analyticsMounted && setAnalyticsButtonColor(analyticsButtonColor => inActivebuttonColor);\n    }\n    ;\n    {\n      props.analyticsMounted && setAnalyticsButtonColor(analyticsButtonColor => activeButtonColor);\n    }\n    ;\n  }, [props.analyticsMounted]);\n  useEffect(() => {\n    let activeButtonColor = \"linear-gradient(to right, var(--sideNavBarBtnhoverColor) 90%, var(--themeColor) 0%)\";\n    let inActivebuttonColor = \"var(--sideNavBarBkgColor)\";\n    console.log(\"achievements mount info inSideNavBar:\", props.achievementsMounted);\n    {\n      !props.achievementsMounted && setAchievementsButtonColor(achievementsButtonColor => inActivebuttonColor);\n    }\n    ;\n    {\n      props.achievementsMounted && setAchievementsButtonColor(achievementsButtonColor => activeButtonColor);\n    }\n    ;\n  }, [props.achievementsMounted]);\n  useEffect(() => {\n    let activeButtonColor = \"linear-gradient(to right, var(--sideNavBarBtnhoverColor) 90%, var(--themeColor) 0%)\";\n    let inActivebuttonColor = \"var(--sideNavBarBkgColor)\";\n    console.log(\"goals mount info inSideNavBar:\", props.goalsMounted);\n    {\n      !props.goalsMounted && setGoalsButtonColor(goalsButtonColor => inActivebuttonColor);\n    }\n    ;\n    {\n      props.goalsMounted && setGoalsButtonColor(goalsButtonColor => activeButtonColor);\n    }\n    ;\n  }, [props.goalsMounted]);\n  useEffect(() => {\n    let activeButtonColor = \"linear-gradient(to right, var(--sideNavBarBtnhoverColor) 90%, var(--themeColor) 0%)\";\n    let inActivebuttonColor = \"var(--sideNavBarBkgColor)\";\n    console.log(\"calender mount info inSideNavBar:\", props.calenderMounted);\n    {\n      !props.calenderMounted && setCalenderButtonColor(calenderButtonColor => inActivebuttonColor);\n    }\n    ;\n    {\n      props.calenderMounted && setCalenderButtonColor(calenderButtonColor => activeButtonColor);\n    }\n    ;\n  }, [props.calenderMounted]);\n  useEffect(() => {\n    let activeButtonColor = \"linear-gradient(to right, var(--sideNavBarBtnhoverColor) 90%, var(--themeColor) 0%)\";\n    let inActivebuttonColor = \"var(--sideNavBarBkgColor)\";\n    console.log(\"diary mount info inSideNavBar:\", props.diaryMounted);\n    {\n      !props.diaryMounted && setDiaryButtonColor(diaryButtonColor => inActivebuttonColor);\n    }\n    ;\n    {\n      props.diaryMounted && setDiaryButtonColor(diaryButtonColor => activeButtonColor);\n    }\n    ;\n  }, [props.diaryMounted]);\n  useEffect(() => {\n    let activeButtonColor = \"linear-gradient(to right, var(--sideNavBarBtnhoverColor) 90%, var(--themeColor) 0%)\";\n    let inActivebuttonColor = \"var(--sideNavBarBkgColor)\";\n    console.log(\"helpcenter mount info inSideNavBar:\", props.helpcenterMounted);\n    {\n      !props.helpcenterMounted && setHelpCenterButtonColor(helpcentreButtonColor => inActivebuttonColor);\n    }\n    ;\n    {\n      props.helpcenterMounted && setHelpCenterButtonColor(helpcentreButtonColor => activeButtonColor);\n    }\n    ;\n  }, [props.helpcenterMounted]);\n\n  const dashboardHandler = () => {\n    history.push('/dashboard/main');\n  };\n\n  const messagesHandler = () => {\n    history.push('/messages/chat');\n  };\n\n  const classHandler = () => {\n    history.push('/class/current');\n  };\n\n  const tasksHandler = () => {\n    history.push('/tasks');\n  };\n\n  const booksHandler = () => {\n    history.push('/books');\n  };\n\n  const examHandler = () => {\n    history.push('/exam');\n  };\n\n  const classmatesHandler = () => {\n    history.push('/classmates');\n  };\n\n  const teacherHandler = () => {\n    history.push('/teacher');\n  };\n\n  const prepareHandler = () => {\n    history.push('/prepare');\n  };\n\n  const progressHandler = () => {\n    history.push('/progress');\n  };\n\n  const analyticsHandler = () => {\n    history.push('/analyics');\n  };\n\n  const achievementsHandler = () => {\n    history.push('/achievements');\n  };\n\n  const goalsHandler = () => {\n    history.push('/goals');\n  };\n\n  const calenderHandler = () => {\n    history.push('/calender');\n  };\n\n  const diaryHandler = () => {\n    history.push('/diary');\n  };\n\n  const helpCenterHandler = () => {\n    history.push('/helpcenter');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.SideMainContainer,\n    style: {\n      width: sideNavBarWidth\n    },\n    children: [/*#__PURE__*/_jsxDEV(SideNavBarButton, {\n      onPress: dashboardHandler,\n      icon: BsSpeedometer,\n      name: \"Dashboard\",\n      buttonColor: {\n        background: dashboardButtonColor\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SideNavBarButton, {\n      onPress: messagesHandler,\n      icon: BsChatLeftText,\n      name: \"Messages\",\n      buttonColor: {\n        background: messagesButtonColor\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SideNavBarButton, {\n      onPress: classHandler,\n      icon: GiTeacher,\n      name: \"Class\",\n      buttonColor: {\n        background: classButtonColor\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SideNavBarButton, {\n      onPress: tasksHandler,\n      icon: BsUiChecksGrid,\n      name: \"Tasks\",\n      buttonColor: {\n        background: tasksButtonColor\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SideNavBarButton, {\n      onPress: booksHandler,\n      icon: BsBook,\n      name: \"Books\",\n      buttonColor: {\n        background: booksButtonColor\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SideNavBarButton, {\n      onPress: examHandler,\n      icon: BsPencilSquare,\n      name: \"Exam\",\n      buttonColor: {\n        background: examButtonColor\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SideNavBarButton, {\n      onPress: classmatesHandler,\n      icon: BsPeople,\n      name: \"Classmates\",\n      buttonColor: {\n        background: classmatesButtonColor\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SideNavBarButton, {\n      onPress: teacherHandler,\n      icon: BsFilePerson,\n      name: \"Teacher\",\n      buttonColor: {\n        background: teacherButtonColor\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 378,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SideNavBarButton, {\n      onPress: prepareHandler,\n      icon: BsHammer,\n      name: \"Prepare\",\n      buttonColor: {\n        background: prepareButtonColor\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SideNavBarButton, {\n      onPress: progressHandler,\n      icon: BsGraphUp,\n      name: \"Progress\",\n      buttonColor: {\n        background: progressButtonColor\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 382,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SideNavBarButton, {\n      onPress: analyticsHandler,\n      icon: BsZoomIn,\n      name: \"Analytics\",\n      buttonColor: {\n        background: analyticsButtonColor\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 384,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SideNavBarButton, {\n      onPress: achievementsHandler,\n      icon: BsTrophy,\n      name: \"Achievements\",\n      buttonColor: {\n        background: achievementsButtonColor\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SideNavBarButton, {\n      onPress: goalsHandler,\n      icon: BsListOl,\n      name: \"Goals\",\n      buttonColor: {\n        background: goalsButtonColor\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 388,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SideNavBarButton, {\n      onPress: calenderHandler,\n      icon: BsCalendarDay,\n      name: \"Calender\",\n      buttonColor: {\n        background: calenderButtonColor\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SideNavBarButton, {\n      onPress: diaryHandler,\n      icon: BsJournalText,\n      name: \"Diary\",\n      buttonColor: {\n        background: diaryButtonColor\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 392,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SideNavBarButton, {\n      onPress: helpCenterHandler,\n      icon: BsQuestionSquare,\n      name: \"Help Center\",\n      buttonColor: {\n        background: helpcenterButtonColor\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 394,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 361,\n    columnNumber: 6\n  }, this);\n};\n\n_s(SideNavBar, \"JV9MnnzYqMg/QOPaYfzMy9Xthrk=\", false, function () {\n  return [useHistory];\n});\n\n_c = SideNavBar;\nexport default SideNavBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"SideNavBar\");","map":{"version":3,"sources":["/home/bibhu/Dropbox/myprojectdir_Django_DRF_React/edrUIreact/edrfront/src/components/SideNavBar/SideNavBar.js"],"names":["React","useState","useEffect","classes","SideNavBarButton","SideToolBar","BsSpeedometer","BsChatLeftText","BsUiChecksGrid","BsPencilSquare","BsPeople","BsFilePerson","BsHammer","BsBook","BsGraphUp","BsZoomIn","BsTrophy","BsListOl","BsCalendarDay","BsJournalText","BsQuestionSquare","SiGoogleclassroom","GiTeacher","useHistory","SideNavBar","props","history","activeButtonColor","inActivebuttonColor","sideNavBarWidth","setSideNavBarWidth","dashboardButtonColor","setDashoardButtonColor","messagesButtonColor","setMessagesButtonColor","classButtonColor","setClassButtonColor","tasksButtonColor","setTasksButtonColor","booksButtonColor","setBooksButtonColor","examButtonColor","setExamButtonColor","classmatesButtonColor","setClassmatesButtonColor","teacherButtonColor","setTeacherButtonColor","prepareButtonColor","setPrepareButtonColor","progressButtonColor","setProgressButtonColor","analyticsButtonColor","setAnalyticsButtonColor","achievementsButtonColor","setAchievementsButtonColor","goalsButtonColor","setGoalsButtonColor","calenderButtonColor","setCalenderButtonColor","diaryButtonColor","setDiaryButtonColor","helpcenterButtonColor","setHelpCenterButtonColor","console","log","dashboardMounted","messagesMounted","classMounted","tasksMounted","booksMounted","examMounted","classmatesMounted","teacherMounted","prepareMounted","progressMounted","analyticsMounted","achievementsMounted","goalsMounted","calenderMounted","diaryMounted","helpcenterMounted","helpcentreButtonColor","dashboardHandler","push","messagesHandler","classHandler","tasksHandler","booksHandler","examHandler","classmatesHandler","teacherHandler","prepareHandler","progressHandler","analyticsHandler","achievementsHandler","goalsHandler","calenderHandler","diaryHandler","helpCenterHandler","SideMainContainer","width","background"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from 'react';\nimport classes from './SideNavBar.module.css';\nimport SideNavBarButton from './SideNavBarButton';\nimport SideToolBar from './SideToolBar';\nimport { BsSpeedometer,BsChatLeftText,BsUiChecksGrid,BsPencilSquare,BsPeople,BsFilePerson,BsHammer,BsBook } from \"react-icons/bs\";\nimport {BsGraphUp,BsZoomIn,BsTrophy,BsListOl,BsCalendarDay,BsJournalText,BsQuestionSquare} from 'react-icons/bs';\nimport {SiGoogleclassroom} from \"react-icons/si\";\nimport {GiTeacher} from \"react-icons/gi\";\nimport { useHistory } from \"react-router-dom\";\n\n\n\n\n\n\n\nconst SideNavBar=(props)=>{\n\n   let history = useHistory();\n   let activeButtonColor=\"linear-gradient(to right, var(--sideNavBarBtnhoverColor) 90%, var(--themeColor) 0%)\";\n   let inActivebuttonColor=\"var(--sideNavBarBkgColor)\";\n\n\n\n\n   const [sideNavBarWidth, setSideNavBarWidth] = useState(props.sideNavBarWidth);\n\n\n   \n\n   const [dashboardButtonColor, setDashoardButtonColor]=useState(inActivebuttonColor);\n   const [messagesButtonColor, setMessagesButtonColor]=useState(inActivebuttonColor);\t\n   const [classButtonColor, setClassButtonColor]=useState(inActivebuttonColor);  \n   const [tasksButtonColor, setTasksButtonColor]=useState(inActivebuttonColor);\n   const [booksButtonColor, setBooksButtonColor]=useState(inActivebuttonColor);\n   const [examButtonColor, setExamButtonColor]=useState(inActivebuttonColor);\n   const [classmatesButtonColor, setClassmatesButtonColor]=useState(inActivebuttonColor);\n   const [teacherButtonColor, setTeacherButtonColor]=useState(inActivebuttonColor);\t\n   const [prepareButtonColor, setPrepareButtonColor]=useState(inActivebuttonColor);\n   const [progressButtonColor, setProgressButtonColor]=useState(inActivebuttonColor);\n   const [analyticsButtonColor, setAnalyticsButtonColor]=useState(inActivebuttonColor);\n   const [achievementsButtonColor, setAchievementsButtonColor]=useState(inActivebuttonColor);\n   const [goalsButtonColor, setGoalsButtonColor]=useState(inActivebuttonColor);\n   const [calenderButtonColor, setCalenderButtonColor]=useState(inActivebuttonColor);\n   const [diaryButtonColor, setDiaryButtonColor]=useState(inActivebuttonColor);\n   const [helpcenterButtonColor, setHelpCenterButtonColor]=useState(inActivebuttonColor)\n\n\n\n   useEffect(() => {\n     setSideNavBarWidth(props.sideNavBarWidth);\n   }, [props.sideNavBarWidth]);\n\n\n\n\n   useEffect(()=>{\n\n       let activeButtonColor=\"linear-gradient(to right, var(--sideNavBarBtnhoverColor) 90%, var(--themeColor) 0%)\";\n       let inActivebuttonColor=\"var(--sideNavBarBkgColor)\";\n\n\n\n      console.log(\"dahboard mount info in sideNavBar:\", props.dashboardMounted);\n    \n        {!props.dashboardMounted && setDashoardButtonColor(dashboardButtonColor=>inActivebuttonColor)};\n\t{props.dashboardMounted && setDashoardButtonColor(dashboardButtonColor=>activeButtonColor)};    \n\n\n   },[props.dashboardMounted]);\n\n\n\n   useEffect(()=>{ \n       let activeButtonColor=\"linear-gradient(to right, var(--sideNavBarBtnhoverColor) 90%, var(--themeColor) 0%)\";\n       let inActivebuttonColor=\"var(--sideNavBarBkgColor)\";\n\n\n\n      console.log(\"messages mount info inSideNavBar:\", props.messagesMounted);\n\n      {!props.messagesMounted && setMessagesButtonColor(messagesButtonColor=>inActivebuttonColor)};\n      {props.messagesMounted && setMessagesButtonColor(messagesButtonColor=>activeButtonColor)}; \t   \n\n   },[props.messagesMounted]);\n\n  \n   useEffect(()=>{\n\n       let activeButtonColor=\"linear-gradient(to right, var(--sideNavBarBtnhoverColor) 90%, var(--themeColor) 0%)\";\n       let inActivebuttonColor=\"var(--sideNavBarBkgColor)\";\n\n\n      console.log(\"class mount info inSideNavBar:\", props.classMounted);\n\n      {!props.classMounted && setClassButtonColor(classButtonColor=>inActivebuttonColor)};\n      {props.classMounted && setClassButtonColor(classButtonColor=>activeButtonColor)};\n\n   },[props.classMounted]);\n  \n\n  useEffect(()=>{\n      let activeButtonColor=\"linear-gradient(to right, var(--sideNavBarBtnhoverColor) 90%, var(--themeColor) 0%)\";\n      let inActivebuttonColor=\"var(--sideNavBarBkgColor)\";\n\n\n\n      console.log(\"tasks mount info inSideNavBar:\", props.tasksMounted);\n\n      {!props.tasksMounted && setTasksButtonColor(tasksButtonColor=>inActivebuttonColor)};\n      {props.tasksMounted && setTasksButtonColor(tasksButtonColor=>activeButtonColor)};\n\n   },[props.tasksMounted]);\n\n\n   useEffect(()=>{\n\n        let activeButtonColor=\"linear-gradient(to right, var(--sideNavBarBtnhoverColor) 90%, var(--themeColor) 0%)\";\n        let inActivebuttonColor=\"var(--sideNavBarBkgColor)\";\n\n\n      console.log(\"books mount info inSideNavBar:\", props.booksMounted);\n\n      {!props.booksMounted && setBooksButtonColor(booksButtonColor=>inActivebuttonColor)};\n      {props.booksMounted && setBooksButtonColor(booksButtonColor=>activeButtonColor)};\n\n   },[props.booksMounted]);\n\n\n   useEffect(()=>{\n\n       let activeButtonColor=\"linear-gradient(to right, var(--sideNavBarBtnhoverColor) 90%, var(--themeColor) 0%)\";\n       let inActivebuttonColor=\"var(--sideNavBarBkgColor)\";\n\n\n      console.log(\"exam mount info inSideNavBar:\", props.examMounted);\n\n      {!props.examMounted && setExamButtonColor(examButtonColor=>inActivebuttonColor)};\n      {props.examMounted && setExamButtonColor(examButtonColor=>activeButtonColor)};\n\n   },[props.examMounted]);\n\n   useEffect(()=>{\n\n       let activeButtonColor=\"linear-gradient(to right, var(--sideNavBarBtnhoverColor) 90%, var(--themeColor) 0%)\";\n       let inActivebuttonColor=\"var(--sideNavBarBkgColor)\";\n\n\n\n      console.log(\"clasmates mount info inSideNavBar:\", props.classmatesMounted);\n\n      {!props.classmatesMounted && setClassmatesButtonColor(classmatesButtonColor=>inActivebuttonColor)};\n      {props.classmatesMounted && setClassmatesButtonColor(classmatesButtonColor=>activeButtonColor)};\n\n   },[props.classmatesMounted]);\n\n\n   useEffect(()=>{\n\n       let activeButtonColor=\"linear-gradient(to right, var(--sideNavBarBtnhoverColor) 90%, var(--themeColor) 0%)\";\n       let inActivebuttonColor=\"var(--sideNavBarBkgColor)\";\n\n\n      console.log(\"teacher mount info inSideNavBar:\", props.teacherMounted);\n\n      {!props.teacherMounted && setTeacherButtonColor(teacherButtonColor=>inActivebuttonColor)};\n      {props.teacherMounted && setTeacherButtonColor(teacherButtonColor=>activeButtonColor)};\n\n   },[props.teacherMounted]);\n\n\n   useEffect(()=>{\n       let activeButtonColor=\"linear-gradient(to right, var(--sideNavBarBtnhoverColor) 90%, var(--themeColor) 0%)\";\n       let inActivebuttonColor=\"var(--sideNavBarBkgColor)\";\n\n\n\n      console.log(\"prepare mount info inSideNavBar:\", props.prepareMounted);\n\n      {!props.prepareMounted && setPrepareButtonColor(prepareButtonColor=>inActivebuttonColor)};\n      {props.prepareMounted && setPrepareButtonColor(prepareButtonColor=>activeButtonColor)};\n\n   },[props.prepareMounted]);\n\n\n   useEffect(()=>{\n\n       let activeButtonColor=\"linear-gradient(to right, var(--sideNavBarBtnhoverColor) 90%, var(--themeColor) 0%)\";\n       let inActivebuttonColor=\"var(--sideNavBarBkgColor)\";\n\n\n      console.log(\"progress mount info inSideNavBar:\", props.progressMounted);\n\n      {!props.progressMounted && setProgressButtonColor(progressButtonColor=>inActivebuttonColor)};\n      {props.progressMounted && setProgressButtonColor(progressButtonColor=>activeButtonColor)};\n\n   },[props.progressMounted]);\n\n\n   useEffect(()=>{\n\n       let activeButtonColor=\"linear-gradient(to right, var(--sideNavBarBtnhoverColor) 90%, var(--themeColor) 0%)\";\n       let inActivebuttonColor=\"var(--sideNavBarBkgColor)\";\n\n\n      console.log(\"analytics mount info inSideNavBar:\", props.analyticsMounted);\n\n      {!props.analyticsMounted && setAnalyticsButtonColor(analyticsButtonColor=>inActivebuttonColor)};\n      {props.analyticsMounted && setAnalyticsButtonColor(analyticsButtonColor=>activeButtonColor)};\n\n   },[props.analyticsMounted]);\t\n\n\n   useEffect(()=>{\n       let activeButtonColor=\"linear-gradient(to right, var(--sideNavBarBtnhoverColor) 90%, var(--themeColor) 0%)\";\n       let inActivebuttonColor=\"var(--sideNavBarBkgColor)\";\n\n\n      console.log(\"achievements mount info inSideNavBar:\", props.achievementsMounted);\n\n      {!props.achievementsMounted && setAchievementsButtonColor(achievementsButtonColor=>inActivebuttonColor)};\n      {props.achievementsMounted && setAchievementsButtonColor(achievementsButtonColor=>activeButtonColor)};\n\n   },[props.achievementsMounted]);\n\n\n   useEffect(()=>{\n\n       let activeButtonColor=\"linear-gradient(to right, var(--sideNavBarBtnhoverColor) 90%, var(--themeColor) 0%)\";\n       let inActivebuttonColor=\"var(--sideNavBarBkgColor)\";\n\n\n      console.log(\"goals mount info inSideNavBar:\", props.goalsMounted);\n\n      {!props.goalsMounted && setGoalsButtonColor(goalsButtonColor=>inActivebuttonColor)};\n      {props.goalsMounted && setGoalsButtonColor(goalsButtonColor=>activeButtonColor)};\n\n   },[props.goalsMounted]);\n\n\n   useEffect(()=>{\n      let activeButtonColor=\"linear-gradient(to right, var(--sideNavBarBtnhoverColor) 90%, var(--themeColor) 0%)\";\n      let inActivebuttonColor=\"var(--sideNavBarBkgColor)\";\n\n\n      console.log(\"calender mount info inSideNavBar:\", props.calenderMounted);\n\n      {!props.calenderMounted && setCalenderButtonColor(calenderButtonColor=>inActivebuttonColor)};\n      {props.calenderMounted && setCalenderButtonColor(calenderButtonColor=>activeButtonColor)};\n\n   },[props.calenderMounted]);\n\n\n   useEffect(()=>{\n       let activeButtonColor=\"linear-gradient(to right, var(--sideNavBarBtnhoverColor) 90%, var(--themeColor) 0%)\";\n       let inActivebuttonColor=\"var(--sideNavBarBkgColor)\";\n\n\n      console.log(\"diary mount info inSideNavBar:\", props.diaryMounted);\n\n      {!props.diaryMounted && setDiaryButtonColor(diaryButtonColor=>inActivebuttonColor)};\n      {props.diaryMounted && setDiaryButtonColor(diaryButtonColor=>activeButtonColor)};\n\n   },[props.diaryMounted]);\n\n\n   useEffect(()=>{\n\n       let activeButtonColor=\"linear-gradient(to right, var(--sideNavBarBtnhoverColor) 90%, var(--themeColor) 0%)\";\n       let inActivebuttonColor=\"var(--sideNavBarBkgColor)\";\n\n\n      console.log(\"helpcenter mount info inSideNavBar:\", props.helpcenterMounted);\n\n      {!props.helpcenterMounted && setHelpCenterButtonColor(helpcentreButtonColor=>inActivebuttonColor)};\n      {props.helpcenterMounted && setHelpCenterButtonColor(helpcentreButtonColor=>activeButtonColor)};\n\n   },[props.helpcenterMounted]);\n\n\n\n\n\n\n   const dashboardHandler=()=>{\n   history.push('/dashboard/main');\n   }\n\n   const messagesHandler=()=>{\n   history.push('/messages/chat');\n   }\n\n   const classHandler=()=>{\n   history.push('/class/current');\n   }\n\n   const tasksHandler=()=>{\n   history.push('/tasks');\n   }\t\n\n   const booksHandler=()=>{\n   history.push('/books');\n   }\n\n   const examHandler=()=>{\n   history.push('/exam');\n   }\n\n   const classmatesHandler=()=>{\n   history.push('/classmates');\n   }\n\n   const teacherHandler=()=>{\n   history.push('/teacher');\n   }\n\n   const prepareHandler=()=>{\n   history.push('/prepare');\n   }\n   \n   const progressHandler=()=>{\n   history.push('/progress');\n   }\n\n   const analyticsHandler=()=>{\n   history.push('/analyics');\n   }\n\n   const achievementsHandler=()=>{\n   history.push('/achievements');\n   }\n\n   const goalsHandler=()=>{\n   history.push('/goals');\n   }\n\n   const calenderHandler=()=>{\n   history.push('/calender');\n   }\n\n\n   const diaryHandler=()=>{\n   history.push('/diary');\n   }\n\n   const helpCenterHandler=()=>{\n   history.push('/helpcenter');\n   }\n\n\n\n\n\n\n\n\n\n\n   return (\n\n     <div className={classes.SideMainContainer} style={{width:sideNavBarWidth}} >\n\n\n        <SideNavBarButton onPress={dashboardHandler}   icon={BsSpeedometer} name=\"Dashboard\" buttonColor={{background:dashboardButtonColor }}/>\n\n        <SideNavBarButton onPress={messagesHandler}  icon={BsChatLeftText} name=\"Messages\" buttonColor={{background:messagesButtonColor }}/>\n\n        <SideNavBarButton onPress={classHandler} icon={GiTeacher} name=\"Class\" buttonColor={{background:classButtonColor }} />\n\n        <SideNavBarButton onPress={tasksHandler} icon={BsUiChecksGrid} name=\"Tasks\"buttonColor={{background:tasksButtonColor }} />\n\n        <SideNavBarButton onPress={booksHandler} icon={BsBook} name=\"Books\"  buttonColor={{background:booksButtonColor }} />\n\n        <SideNavBarButton onPress={examHandler} icon={BsPencilSquare} name=\"Exam\"  buttonColor={{background:examButtonColor }} />\n\n        <SideNavBarButton onPress={classmatesHandler} icon={BsPeople} name=\"Classmates\"  buttonColor={{background:classmatesButtonColor }} />\t\n\n        <SideNavBarButton onPress={teacherHandler} icon={BsFilePerson} name=\"Teacher\"  buttonColor={{background:teacherButtonColor }} />\n\n        <SideNavBarButton onPress={prepareHandler} icon={BsHammer} name=\"Prepare\"  buttonColor={{background:prepareButtonColor }} />\n\n        <SideNavBarButton onPress={progressHandler} icon={BsGraphUp} name=\"Progress\"  buttonColor={{background:progressButtonColor }} />\n\n        <SideNavBarButton onPress={analyticsHandler} icon={BsZoomIn} name=\"Analytics\"  buttonColor={{background:analyticsButtonColor }} />\t\n\n        <SideNavBarButton onPress={achievementsHandler} icon={BsTrophy} name=\"Achievements\"  buttonColor={{background:achievementsButtonColor }} />\n\n        <SideNavBarButton onPress={goalsHandler} icon={BsListOl} name=\"Goals\"  buttonColor={{background:goalsButtonColor }} />\t\n\n        <SideNavBarButton onPress={calenderHandler} icon={BsCalendarDay} name=\"Calender\"  buttonColor={{background:calenderButtonColor }} />\n\n        <SideNavBarButton onPress={diaryHandler} icon={BsJournalText} name=\"Diary\"  buttonColor={{background:diaryButtonColor }} />\n\n        <SideNavBarButton onPress={helpCenterHandler} icon={BsQuestionSquare} name=\"Help Center\"  buttonColor={{background:helpcenterButtonColor }} />\n\n\n     </div>\n\n   );\n\n\n\n\n}\n\n\n\n\nexport default SideNavBar;\n\n"]},"metadata":{},"sourceType":"module"}