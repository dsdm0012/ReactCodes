{"ast":null,"code":"var _jsxFileName = \"/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/MainApps/Dashboard/General/General.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\"; //import classes from \"./MainAppContainer.module.css\"\n\nimport classes from \"./MainAppContainer.module.css\";\nimport TopInfoBarGeneral from './TopInfoBarGeneral';\nimport TopTitleBar from '../../CommonAppUtilities/TopTitleBar';\nimport GeneralContentDiv from './GeneralContentDiv';\nimport { BsLayoutTextSidebarReverse, BsFillCameraReelsFill, BsPencilSquare } from 'react-icons/bs';\nimport { GiTeacher } from \"react-icons/gi\";\nimport { CgClipboard } from 'react-icons/cg';\nimport TopToolBox from './components/Teacher/TopToolBoxV1';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst General = props => {\n  _s();\n\n  const [sideNavBarWidth, setSideNavBarWidth] = useState(props.sideNavBarWidth);\n  const [mainAppContainerWidth, setMainAppContainerWidth] = useState('calc( 100% - var(--sideNavBarWidth) )');\n  const isMounted = useRef(false);\n  useEffect(() => {\n    isMounted.current = true;\n    setSideNavBarWidth(props.sideNavBarWidth);\n\n    if (props.sideNavBarWidth === \"var(--sideNavBarWidth)\") {\n      setMainAppContainerWidth('calc( 100% - var(--sideNavBarWidth) )');\n    }\n\n    if (props.sideNavBarWidth === \"var(--sideNavBarWidthOnContract)\") {\n      setMainAppContainerWidth('calc( 100% - var(--sideNavBarWidthOnContract) )');\n    }\n\n    return () => {};\n  }, [props.sideNavBarWidth]);\n  useEffect(() => {\n    isMounted.current = true;\n    props.passMountInfo(true);\n    return () => {\n      isMounted.current = false;\n      props.passMountInfo(false);\n    };\n  }, [props]);\n  let title = \"General\";\n  let mainAppContainerStyle = {\n    left: sideNavBarWidth,\n    width: mainAppContainerWidth\n  };\n  const infoBarActiveButtonColor = {\n    color: 'white',\n    backgroundColor: '#919191'\n  };\n\n  const showcreateCourseForm = () => {};\n\n  const [toolBoxStyle1, setToolBoxStyle1] = useState({\n    buttonBkgColor: 'var(--clickBtnColorDashBackground)',\n    buttonTxtColor: 'var(--clickBtnColorDash)',\n    boxBkgColor: 'white',\n    boxTxtColor: 'var(--themeColor)',\n    rightTopBoxColor: 'green',\n    buttonText: '+Create a Course',\n    mainText: 'TOTAL COURSES',\n    mainNumber: 1,\n    topRightText: 'Ongoing',\n    topRightNumber: 1,\n    icon: {\n      BsLayoutTextSidebarReverse\n    },\n    iconName: \"Courses\"\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.mainAppContainer,\n    style: mainAppContainerStyle,\n    children: /*#__PURE__*/_jsxDEV(GeneralContentDiv, {\n      dashboardCourses: props.dashboardCourses,\n      socketObj: props.socketObj,\n      userData: props.userData,\n      rerender: props.rerender\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 7\n  }, this);\n};\n\n_s(General, \"ppgv6MWqVSqH0xFWpWruYr+Hvf4=\");\n\n_c = General;\nexport default General;\n\nvar _c;\n\n$RefreshReg$(_c, \"General\");","map":{"version":3,"sources":["/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/MainApps/Dashboard/General/General.js"],"names":["React","useState","useEffect","useRef","classes","TopInfoBarGeneral","TopTitleBar","GeneralContentDiv","BsLayoutTextSidebarReverse","BsFillCameraReelsFill","BsPencilSquare","GiTeacher","CgClipboard","TopToolBox","General","props","sideNavBarWidth","setSideNavBarWidth","mainAppContainerWidth","setMainAppContainerWidth","isMounted","current","passMountInfo","title","mainAppContainerStyle","left","width","infoBarActiveButtonColor","color","backgroundColor","showcreateCourseForm","toolBoxStyle1","setToolBoxStyle1","buttonBkgColor","buttonTxtColor","boxBkgColor","boxTxtColor","rightTopBoxColor","buttonText","mainText","mainNumber","topRightText","topRightNumber","icon","iconName","mainAppContainer","dashboardCourses","socketObj","userData","rerender"],"mappings":"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","sourcesContent":["import React,{useState,useEffect,useRef} from \"react\";\n//import classes from \"./MainAppContainer.module.css\"\nimport classes from \"./MainAppContainer.module.css\"\nimport TopInfoBarGeneral from './TopInfoBarGeneral';\nimport TopTitleBar from '../../CommonAppUtilities/TopTitleBar';\nimport GeneralContentDiv from './GeneralContentDiv';\n\n\nimport {BsLayoutTextSidebarReverse, BsFillCameraReelsFill, BsPencilSquare} from 'react-icons/bs';\nimport {GiTeacher} from \"react-icons/gi\";\n\nimport {CgClipboard} from 'react-icons/cg';\n\n\n\n\nimport TopToolBox from './components/Teacher/TopToolBoxV1';\n\n\n\n\n\n\nconst General=(props)=>{\n\n   \n   const [sideNavBarWidth,setSideNavBarWidth]=useState(props.sideNavBarWidth);\n   const [mainAppContainerWidth,setMainAppContainerWidth]=useState('calc( 100% - var(--sideNavBarWidth) )');\t\n\n   const isMounted = useRef(false);\n\n\n   useEffect(() => {\n      isMounted.current = true;\t   \n      setSideNavBarWidth(props.sideNavBarWidth);\n      if(props.sideNavBarWidth===\"var(--sideNavBarWidth)\"){setMainAppContainerWidth('calc( 100% - var(--sideNavBarWidth) )');}\n      if(props.sideNavBarWidth===\"var(--sideNavBarWidthOnContract)\"){setMainAppContainerWidth('calc( 100% - var(--sideNavBarWidthOnContract) )');}\n\n\n      return () => { \n      }\n\n   }, [props.sideNavBarWidth]);\n\n\n   useEffect(() => {\n    isMounted.current = true;\n    props.passMountInfo(true);\t   \n    return () => { \n\t    isMounted.current = false \n            props.passMountInfo(false);\n    }\n   }, [props]);\n\n\n\n\n\n\n\n   let title=\"General\"\t\n   let mainAppContainerStyle={left:sideNavBarWidth, width:mainAppContainerWidth}\n   const infoBarActiveButtonColor = {color: 'white',backgroundColor: '#919191'}\n\n   const showcreateCourseForm=()=>{\n\n   }\n\n      const [toolBoxStyle1, setToolBoxStyle1] = useState(\n     {\n        buttonBkgColor: 'var(--clickBtnColorDashBackground)',\n        buttonTxtColor:'var(--clickBtnColorDash)',\n        boxBkgColor: 'white',\n        boxTxtColor:'var(--themeColor)',\n        rightTopBoxColor: 'green',\n        buttonText:'+Create a Course',\n        mainText:'TOTAL COURSES',\n        mainNumber:1,\n        topRightText:'Ongoing',\n        topRightNumber:1,\n        icon:{BsLayoutTextSidebarReverse},\n        iconName:\"Courses\"\n     });\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n   return(\n\n      <div className={classes.mainAppContainer} style={mainAppContainerStyle} >\n\t  {/*  \n          <TopInfoBarGeneral styles={infoBarActiveButtonColor} selectedCourse={props.selectedCourse}/>\n        \n         \t    \n          <TopTitleBar title={title}/>\n\t  */}   \n          <GeneralContentDiv \n\t     dashboardCourses={props.dashboardCourses}\n\t     socketObj = {props.socketObj}\n\t     userData = {props.userData}\n\t     rerender={props.rerender}\n\t     />\n      \n        \n\n\n         \n\n\n\n\n        </div>\n      \n\n   );\n}\n\nexport default General;\n\n"]},"metadata":{},"sourceType":"module"}