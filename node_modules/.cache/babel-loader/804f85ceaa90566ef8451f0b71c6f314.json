{"ast":null,"code":"/* globals navigator */\n'use strict';\n/**\n * This function is very similar to <code>navigator.mediaDevices.getUserMedia</code>\n * except that if no MediaStreamConstraints are provided, then bot audio and video\n * are requested.\n * @function getUserMedia\n * @param {MediaStreamConstraints} [constraints={audio:true,video:true}] - the\n *   MediaStreamConstraints object specifying what kind of MediaStream to\n *   request from the browser (by default both audio and video)\n * @returns Promise<MediaStream>\n */\n\nfunction getUserMedia(constraints) {\n  if (typeof navigator === 'object' && typeof navigator.mediaDevices === 'object' && typeof navigator.mediaDevices.getUserMedia === 'function') {\n    constraints = constraints || {\n      audio: true,\n      video: true\n    };\n    return navigator.mediaDevices.getUserMedia(constraints);\n  }\n\n  return Promise.reject(new Error('getUserMedia is not supported'));\n}\n\nmodule.exports = getUserMedia;","map":{"version":3,"sources":["../../lib/webrtc/getusermedia.js"],"names":[],"mappings":"AAAA;AACA;AAEA;;;;;;;;;AASG;;AACH,SAAS,YAAT,CAAsB,WAAtB,EAAiC;AAC/B,MAAI,OAAO,SAAP,KAAqB,QAArB,IACC,OAAO,SAAS,CAAC,YAAjB,KAAkC,QADnC,IAEC,OAAO,SAAS,CAAC,YAAV,CAAuB,YAA9B,KAA+C,UAFpD,EAEgE;AAC9D,IAAA,WAAW,GAAG,WAAW,IAAI;AAAE,MAAA,KAAK,EAAE,IAAT;AAAe,MAAA,KAAK,EAAE;AAAtB,KAA7B;AACA,WAAO,SAAS,CAAC,YAAV,CAAuB,YAAvB,CAAoC,WAApC,CAAP;AACD;;AACD,SAAO,OAAO,CAAC,MAAR,CAAe,IAAI,KAAJ,CAAU,+BAAV,CAAf,CAAP;AACD;;AAED,MAAM,CAAC,OAAP,GAAiB,YAAjB","sourceRoot":"","sourcesContent":["/* globals navigator */\n'use strict';\n/**\n * This function is very similar to <code>navigator.mediaDevices.getUserMedia</code>\n * except that if no MediaStreamConstraints are provided, then bot audio and video\n * are requested.\n * @function getUserMedia\n * @param {MediaStreamConstraints} [constraints={audio:true,video:true}] - the\n *   MediaStreamConstraints object specifying what kind of MediaStream to\n *   request from the browser (by default both audio and video)\n * @returns Promise<MediaStream>\n */\nfunction getUserMedia(constraints) {\n    if (typeof navigator === 'object'\n        && typeof navigator.mediaDevices === 'object'\n        && typeof navigator.mediaDevices.getUserMedia === 'function') {\n        constraints = constraints || { audio: true, video: true };\n        return navigator.mediaDevices.getUserMedia(constraints);\n    }\n    return Promise.reject(new Error('getUserMedia is not supported'));\n}\nmodule.exports = getUserMedia;\n//# sourceMappingURL=getusermedia.js.map"]},"metadata":{},"sourceType":"script"}