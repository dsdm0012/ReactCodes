{"ast":null,"code":"var _jsxFileName = \"/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/PreApp.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport App from './App';\nimport Login from './CommonApps/Login';\nimport axiosInstance from './axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PreApp = () => {\n  _s();\n\n  const [loggedIn, setLoggedIn] = useState(false);\n  /*\t\n  useEffect(() =>{\n        axiosInstance.get().then((res) => {\n                         setLoggedIn(loggedIn=>true);\n                        // console.log(res.data);\n                 });\n    },[]);\n   */\n\n  {\n    /*\n    if (!loggedIn){ return <Login setLoggedIn={setLoggedIn}/>}\n    */\n  }\n  return /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 1\n  }, this);\n};\n\n_s(PreApp, \"rumETxDPcQWJcg8a6Y55ZSVDz7g=\");\n\n_c = PreApp;\nexport default PreApp;\n\nvar _c;\n\n$RefreshReg$(_c, \"PreApp\");","map":{"version":3,"sources":["/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/PreApp.js"],"names":["React","useState","useEffect","App","Login","axiosInstance","PreApp","loggedIn","setLoggedIn"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,aAAP,MAA0B,SAA1B;;;AAEA,MAAMC,MAAM,GAAC,MAAI;AAAA;;AAEhB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,KAAD,CAAxC;AAEA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AAIE;AAAC;AACH;AACA;AAAM;AAGN,sBAEA,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,UAFA;AAMC,CA1BD;;GAAMK,M;;KAAAA,M;AA4BN,eAAeA,MAAf","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport App from './App';\nimport Login from './CommonApps/Login';\nimport axiosInstance from './axios';\n\nconst PreApp=()=>{\n\n const [loggedIn, setLoggedIn] = useState(false);\n\n /*\t\n useEffect(() =>{\n\n      axiosInstance.get().then((res) => {\n                        setLoggedIn(loggedIn=>true);\n                       // console.log(res.data);\n                });\n\n  },[]);\n  */\n\n  {/*\n  if (!loggedIn){ return <Login setLoggedIn={setLoggedIn}/>}\n   */}\n\n\nreturn (\n\n<App/>\n\n);\n\n}\n\nexport default PreApp;\n"]},"metadata":{},"sourceType":"module"}