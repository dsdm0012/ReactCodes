{"ast":null,"code":"var _jsxFileName = \"/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/VideoPlayer/TwilioVideo/VideoChat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useEffect } from 'react';\nimport Video from \"twilio-video\"; //import axiosInstance from '../../axios';\n\nimport axios from 'axios';\nimport Room from './Room';\nimport Lobby from './Lobby';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst {\n  connect\n} = require('twilio-video');\n\nconst VideoChat = () => {\n  _s();\n\n  console.log(\"rerendering\");\n  const [room, setRoom] = useState(null);\n  const [username, setUsername] = useState(\"\");\n  const [roomName, setRoomName] = useState(\"\");\n  const [connecting, setConnecting] = useState(false);\n  const handleUsernameChange = useCallback(event => {\n    setUsername(event.target.value);\n    console.log('username change');\n  }, []);\n  const handleRoomNameChange = useCallback(event => {\n    setRoomName(event.target.value);\n    console.log('room name change');\n  }, []);\n  const [tokenData, setToken] = useState(null);\n\n  const joinRoom = ({\n    data\n  }) => {\n    Video.connect(data.accessToken, {\n      name: 'coolroom'\n    }).then(room => {\n      setConnecting(false);\n      console.log(\"room: \", room);\n      setRoom(room);\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setConnecting(true);\n    console.log(\"submit data\");\n    let susername = 'bibhu';\n    axios.post(`https://token-service-6908-dev.twil.io/token?identity=${susername}`, {}).then(res => {\n      setToken(tokenData => res.data);\n      console.log(\"token data inside: \", res.data.token);\n      let data = res.data;\n      joinRoom({\n        data\n      });\n    });\n  };\n\n  async function handleSubmit2(event) {\n    event.preventDefault();\n    let usename = username;\n    setConnecting(true);\n\n    try {\n      const response = await fetch(`https://token-service-6908-dev.twil.io/token?identity=${usename}`);\n      const data = await response.json();\n      const room = await connect(data.accessToken, {\n        name: 'cool-room',\n        audio: true,\n        video: true\n      });\n      setRoom(room);\n      console.log(\"room isnide submit2: \", room);\n      setConnecting(false);\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  const handleLogout = () => {\n    console.log(\"handle Logout\");\n  };\n\n  const [participant, setParticipants] = useState([]);\n\n  const participantConnected = participant => {\n    setParticipants(prevParticipants => [...prevParticipants, participant]);\n  };\n\n  const testButton = () => {}; //console.log(\"room: \", room);\n\n\n  let render;\n\n  if (room) {\n    render = /*#__PURE__*/_jsxDEV(Room, {\n      roomName: roomName,\n      room: room,\n      handleLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this);\n  } else {\n    render = /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Lobby, {\n        username: username,\n        roomName: roomName,\n        handleUsernameChange: handleUsernameChange,\n        handleRoomNameChange: handleRoomNameChange,\n        handleSubmit: handleSubmit2,\n        connecting: connecting\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: testButton,\n        children: \" Click to Test \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true);\n  }\n\n  return render;\n};\n\n_s(VideoChat, \"DD7e1Gz+kDLXe73nQVTqaQvQpF4=\");\n\n_c = VideoChat;\nexport default VideoChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoChat\");","map":{"version":3,"sources":["/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/VideoPlayer/TwilioVideo/VideoChat.js"],"names":["React","useState","useCallback","useEffect","Video","axios","Room","Lobby","connect","require","VideoChat","console","log","room","setRoom","username","setUsername","roomName","setRoomName","connecting","setConnecting","handleUsernameChange","event","target","value","handleRoomNameChange","tokenData","setToken","joinRoom","data","accessToken","name","then","handleSubmit","e","preventDefault","susername","post","res","token","handleSubmit2","usename","response","fetch","json","audio","video","err","handleLogout","participant","setParticipants","participantConnected","prevParticipants","testButton","render"],"mappings":"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","sourcesContent":["import React,{useState, useCallback, useEffect} from 'react';\nimport Video from \"twilio-video\";\n//import axiosInstance from '../../axios';\nimport axios from 'axios';\n\nimport Room from './Room';\nimport Lobby from './Lobby';\nconst { connect } = require('twilio-video');\n\nconst VideoChat=()=>{\n\n\n   console.log(\"rerendering\",);\n\n   const [room, setRoom] = useState(null);\n   const [username, setUsername] = useState(\"\");\n   const [roomName, setRoomName] = useState(\"\");\t\n   const [connecting, setConnecting] = useState(false);\n\n   const handleUsernameChange = useCallback((event) => {\n    setUsername(event.target.value);\n    console.log('username change');\n\n   }, []);\n\n   const handleRoomNameChange = useCallback((event) => {\n    setRoomName(event.target.value);\n    console.log('room name change');\n\n   }, []);\n\n   const [tokenData, setToken] = useState(null);\n   \n\n   const joinRoom=({data})=>{\n           \n    Video.connect(data.accessToken, {\n        name: 'coolroom',\n      })\n        .then((room) => {\n          setConnecting(false);\n\t  console.log(\"room: \", room);\t\n          setRoom(room);\n        })\n\n   }\n\n\n  \n\n\n   const handleSubmit=(e)=>{\n    e.preventDefault();\t   \n    setConnecting(true);\n    console.log(\"submit data\");\n    let susername='bibhu'\n\n    axios.post(`https://token-service-6908-dev.twil.io/token?identity=${susername}`, {\n    \n    })\n     .then((res) => {\n         setToken(tokenData=>res.data);\n         console.log(\"token data inside: \", res.data.token);\n\t    let data=res.data; \n          joinRoom({data});\n\n\n           \n\n                })\n\n\n   }\n  \n\n    async function handleSubmit2(event) {\n \n    event.preventDefault();\t    \n    let usename=username;\t    \n    setConnecting(true);\n    try {\n       const response = await fetch(`https://token-service-6908-dev.twil.io/token?identity=${usename}`);\n       const data = await response.json();\n       const room = await connect(data.accessToken, {\n          name: 'cool-room',\n          audio: true,\n          video: true\n       });\n\n    \n      setRoom(room);\n      console.log(\"room isnide submit2: \", room);\n      setConnecting(false);\n\n      } catch(err) {\n        console.log(err);\n    }\n   }\n\n\n\n   const handleLogout=()=>{\n\n   console.log(\"handle Logout\");\n\n\n\n   }\n\n\n  const [participant, setParticipants] = useState([]);\n  const participantConnected = (participant) => {\n      setParticipants((prevParticipants) => [...prevParticipants, participant]);\n    };\n\n\n const testButton=()=>{\n\n\n\n\n }\n\n\n\n\n\n\n\n\n\n\n\n\n\n //console.log(\"room: \", room);\n\n\n let render;\n  if (room) {\n    render = (\n      <Room roomName={roomName} room={room} handleLogout={handleLogout}/>\n    );\n  } else {\n    render = (\n\t<>    \n      <Lobby\n        username={username}\n        roomName={roomName}\n        handleUsernameChange={handleUsernameChange}\n        handleRoomNameChange={handleRoomNameChange}\n        handleSubmit={handleSubmit2}\n        connecting={connecting}\n      />\n\n     <button type='button' onClick={testButton}> Click to Test </button>\n\n     </>\n\n    );\n  }\n  return render;\n\n\n\n\n\n\n\n\n\n}\n\n\nexport default VideoChat;\n"]},"metadata":{},"sourceType":"module"}