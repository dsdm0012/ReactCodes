{"ast":null,"code":"import _slicedToArray from\"/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useRef}from\"react\";import classes from\"../../CommonAppUtilities/MainAppContainer.module.css\";import TopInfoBarPrevious from'./TopInfoBarPrevious';import TopTitleBar from'../../CommonAppUtilities/TopTitleBar';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Previous=function Previous(props){var _useState=useState(props.sideNavBarWidth),_useState2=_slicedToArray(_useState,2),sideNavBarWidth=_useState2[0],setSideNavBarWidth=_useState2[1];var _useState3=useState('calc( 100% - var(--sideNavBarWidth) )'),_useState4=_slicedToArray(_useState3,2),mainAppContainerWidth=_useState4[0],setMainAppContainerWidth=_useState4[1];var isMounted=useRef(false);useEffect(function(){isMounted.current=true;setSideNavBarWidth(props.sideNavBarWidth);if(props.sideNavBarWidth===\"var(--sideNavBarWidth)\"){setMainAppContainerWidth('calc( 100% - var(--sideNavBarWidth) )');}if(props.sideNavBarWidth===\"var(--sideNavBarWidthOnContract)\"){setMainAppContainerWidth('calc( 100% - var(--sideNavBarWidthOnContract) )');}return function(){};},[props.sideNavBarWidth]);useEffect(function(){isMounted.current=true;props.passMountInfo(true);return function(){isMounted.current=false;props.passMountInfo(false);};},[props]);var title=\"Previous\";var mainAppContainerStyle={left:sideNavBarWidth,width:mainAppContainerWidth};var infoBarActiveButtonColor={color:'white',backgroundColor:'#919191'};return/*#__PURE__*/_jsxs(\"div\",{className:classes.mainAppContainer,style:mainAppContainerStyle,children:[/*#__PURE__*/_jsx(TopInfoBarPrevious,{styles:infoBarActiveButtonColor}),/*#__PURE__*/_jsx(TopTitleBar,{title:title})]});};export default Previous;","map":{"version":3,"sources":["/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/allAppsStudent/Class/Previous/Previous.js"],"names":["React","useState","useEffect","useRef","classes","TopInfoBarPrevious","TopTitleBar","Previous","props","sideNavBarWidth","setSideNavBarWidth","mainAppContainerWidth","setMainAppContainerWidth","isMounted","current","passMountInfo","title","mainAppContainerStyle","left","width","infoBarActiveButtonColor","color","backgroundColor","mainAppContainer"],"mappings":"yKAAA,MAAOA,CAAAA,KAAP,EAAcC,QAAd,CAAuBC,SAAvB,CAAiCC,MAAjC,KAA8C,OAA9C,CACA,MAAOC,CAAAA,OAAP,KAAoB,sDAApB,CACA,MAAOC,CAAAA,kBAAP,KAA+B,sBAA/B,CACA,MAAOC,CAAAA,WAAP,KAAwB,sCAAxB,C,wFAGA,GAAMC,CAAAA,QAAQ,CAAC,QAATA,CAAAA,QAAS,CAACC,KAAD,CAAS,CAGrB,cAA2CP,QAAQ,CAACO,KAAK,CAACC,eAAP,CAAnD,wCAAOA,eAAP,eAAuBC,kBAAvB,eACA,eAAuDT,QAAQ,CAAC,uCAAD,CAA/D,yCAAOU,qBAAP,eAA6BC,wBAA7B,eAEA,GAAMC,CAAAA,SAAS,CAAGV,MAAM,CAAC,KAAD,CAAxB,CAGAD,SAAS,CAAC,UAAM,CACbW,SAAS,CAACC,OAAV,CAAoB,IAApB,CACAJ,kBAAkB,CAACF,KAAK,CAACC,eAAP,CAAlB,CACA,GAAGD,KAAK,CAACC,eAAN,GAAwB,wBAA3B,CAAoD,CAACG,wBAAwB,CAAC,uCAAD,CAAxB,CAAmE,CACxH,GAAGJ,KAAK,CAACC,eAAN,GAAwB,kCAA3B,CAA8D,CAACG,wBAAwB,CAAC,iDAAD,CAAxB,CAA6E,CAK5I,MAAO,WAAM,CACZ,CADD,CAGF,CAZQ,CAYN,CAACJ,KAAK,CAACC,eAAP,CAZM,CAAT,CAeAP,SAAS,CAAC,UAAM,CACfW,SAAS,CAACC,OAAV,CAAoB,IAApB,CACAN,KAAK,CAACO,aAAN,CAAoB,IAApB,EACA,MAAO,WAAM,CACZF,SAAS,CAACC,OAAV,CAAoB,KAApB,CACON,KAAK,CAACO,aAAN,CAAoB,KAApB,EACP,CAHD,CAIA,CAPQ,CAON,CAACP,KAAD,CAPM,CAAT,CAeA,GAAIQ,CAAAA,KAAK,CAAC,UAAV,CACA,GAAIC,CAAAA,qBAAqB,CAAC,CAACC,IAAI,CAACT,eAAN,CAAuBU,KAAK,CAACR,qBAA7B,CAA1B,CACA,GAAMS,CAAAA,wBAAwB,CAAG,CAACC,KAAK,CAAE,OAAR,CAAgBC,eAAe,CAAE,SAAjC,CAAjC,CAQA,mBAEG,aAAK,SAAS,CAAElB,OAAO,CAACmB,gBAAxB,CAA0C,KAAK,CAAEN,qBAAjD,wBACA,KAAC,kBAAD,EAAoB,MAAM,CAAEG,wBAA5B,EADA,cAGA,KAAC,WAAD,EAAa,KAAK,CAAEJ,KAApB,EAHA,GAFH,CAWF,CA5DD,CA8DA,cAAeT,CAAAA,QAAf","sourcesContent":["import React,{useState,useEffect,useRef} from \"react\";\nimport classes from \"../../CommonAppUtilities/MainAppContainer.module.css\"\nimport TopInfoBarPrevious from './TopInfoBarPrevious';\nimport TopTitleBar from '../../CommonAppUtilities/TopTitleBar';\n\n\nconst Previous=(props)=>{\n\n   \n   const [sideNavBarWidth,setSideNavBarWidth]=useState(props.sideNavBarWidth);\n   const [mainAppContainerWidth,setMainAppContainerWidth]=useState('calc( 100% - var(--sideNavBarWidth) )');\t\n\n   const isMounted = useRef(false);\n\n\n   useEffect(() => {\n      isMounted.current = true;\t   \n      setSideNavBarWidth(props.sideNavBarWidth);\n      if(props.sideNavBarWidth===\"var(--sideNavBarWidth)\"){setMainAppContainerWidth('calc( 100% - var(--sideNavBarWidth) )');}\n      if(props.sideNavBarWidth===\"var(--sideNavBarWidthOnContract)\"){setMainAppContainerWidth('calc( 100% - var(--sideNavBarWidthOnContract) )');}\n\n\n\n\n      return () => { \n      }\n\n   }, [props.sideNavBarWidth]);\n\n\n   useEffect(() => {\n    isMounted.current = true;\n    props.passMountInfo(true);\t   \n    return () => { \n\t    isMounted.current = false \n            props.passMountInfo(false);\n    }\n   }, [props]);\n\n\n\n\n\n\n\n   let title=\"Previous\"\t\n   let mainAppContainerStyle={left:sideNavBarWidth, width:mainAppContainerWidth}\n   const infoBarActiveButtonColor = {color: 'white',backgroundColor: '#919191'}\n\n\n\n\n\n\n\n   return(\n\n      <div className={classes.mainAppContainer} style={mainAppContainerStyle} >\n      <TopInfoBarPrevious styles={infoBarActiveButtonColor}/>\n\n      <TopTitleBar title={title}/>\n\n\n      </div>\n\n   );\n}\n\nexport default Previous;\n\n"]},"metadata":{},"sourceType":"module"}