{"ast":null,"code":"var _jsxFileName = \"/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/VideoPlayer/TwilioVideo/VideoChat.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useCallback, useEffect } from \"react\";\nimport Video from \"twilio-video\";\nimport Lobby from \"./Lobby\";\nimport Room from \"./Room\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst VideoChat = () => {\n  _s();\n\n  const [username, setUsername] = useState(\"\");\n  const [roomName, setRoomName] = useState(\"\");\n  const [room, setRoom] = useState(null);\n  const [connecting, setConnecting] = useState(false);\n  const handleUsernameChange = useCallback(event => {\n    setUsername(event.target.value);\n  }, []);\n  const handleRoomNameChange = useCallback(event => {\n    setRoomName(event.target.value);\n  }, []);\n  const handleSubmit = useCallback(async event => {\n    event.preventDefault();\n    setConnecting(true);\n    const data = await fetch(\"/video/token\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        identity: username,\n        room: roomName\n      }),\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }).then(res => res.json());\n    Video.connect(data.token, {\n      name: roomName\n    }).then(room => {\n      setConnecting(false);\n      setRoom(room);\n    }).catch(err => {\n      console.error(err);\n      setConnecting(false);\n    });\n  }, [roomName, username]);\n  const handleLogout = useCallback(() => {\n    setRoom(prevRoom => {\n      if (prevRoom) {\n        prevRoom.localParticipant.tracks.forEach(trackPub => {\n          trackPub.track.stop();\n        });\n        prevRoom.disconnect();\n      }\n\n      return null;\n    });\n  }, []);\n  useEffect(() => {\n    if (room) {\n      const tidyUp = event => {\n        if (event.persisted) {\n          return;\n        }\n\n        if (room) {\n          handleLogout();\n        }\n      };\n\n      window.addEventListener(\"pagehide\", tidyUp);\n      window.addEventListener(\"beforeunload\", tidyUp);\n      return () => {\n        window.removeEventListener(\"pagehide\", tidyUp);\n        window.removeEventListener(\"beforeunload\", tidyUp);\n      };\n    }\n  }, [room, handleLogout]);\n  let render;\n\n  if (room) {\n    render = /*#__PURE__*/_jsxDEV(Room, {\n      roomName: roomName,\n      room: room,\n      handleLogout: handleLogout\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this);\n  } else {\n    render = /*#__PURE__*/_jsxDEV(Lobby, {\n      username: username,\n      roomName: roomName,\n      handleUsernameChange: handleUsernameChange,\n      handleRoomNameChange: handleRoomNameChange,\n      handleSubmit: handleSubmit,\n      connecting: connecting\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this);\n  }\n\n  return render;\n};\n\n_s(VideoChat, \"j83AMPH5PClS5UGuWzDOBR9Qz2Y=\");\n\n_c = VideoChat;\nexport default VideoChat;\n\nvar _c;\n\n$RefreshReg$(_c, \"VideoChat\");","map":{"version":3,"sources":["/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/VideoPlayer/TwilioVideo/VideoChat.js"],"names":["React","useState","useCallback","useEffect","Video","Lobby","Room","VideoChat","username","setUsername","roomName","setRoomName","room","setRoom","connecting","setConnecting","handleUsernameChange","event","target","value","handleRoomNameChange","handleSubmit","preventDefault","data","fetch","method","body","JSON","stringify","identity","headers","then","res","json","connect","token","name","catch","err","console","error","handleLogout","prevRoom","localParticipant","tracks","forEach","trackPub","track","stop","disconnect","tidyUp","persisted","window","addEventListener","removeEventListener","render"],"mappings":"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","sourcesContent":["import React, { useState, useCallback, useEffect } from \"react\";\nimport Video from \"twilio-video\";\nimport Lobby from \"./Lobby\";\nimport Room from \"./Room\";\n\nconst VideoChat = () => {\n  const [username, setUsername] = useState(\"\");\n  const [roomName, setRoomName] = useState(\"\");\n  const [room, setRoom] = useState(null);\n  const [connecting, setConnecting] = useState(false);\n\n  const handleUsernameChange = useCallback((event) => {\n    setUsername(event.target.value);\n  }, []);\n\n  const handleRoomNameChange = useCallback((event) => {\n    setRoomName(event.target.value);\n  }, []);\n\n  const handleSubmit = useCallback(\n    async (event) => {\n      event.preventDefault();\n      setConnecting(true);\n      const data = await fetch(\"/video/token\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          identity: username,\n          room: roomName,\n        }),\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      }).then((res) => res.json());\n      Video.connect(data.token, {\n        name: roomName,\n      })\n        .then((room) => {\n          setConnecting(false);\n          setRoom(room);\n        })\n        .catch((err) => {\n          console.error(err);\n          setConnecting(false);\n        });\n    },\n    [roomName, username]\n  );\n\n  const handleLogout = useCallback(() => {\n    setRoom((prevRoom) => {\n      if (prevRoom) {\n        prevRoom.localParticipant.tracks.forEach((trackPub) => {\n          trackPub.track.stop();\n        });\n        prevRoom.disconnect();\n      }\n      return null;\n    });\n  }, []);\n\n  useEffect(() => {\n    if (room) {\n      const tidyUp = (event) => {\n        if (event.persisted) {\n          return;\n        }\n        if (room) {\n          handleLogout();\n        }\n      };\n      window.addEventListener(\"pagehide\", tidyUp);\n      window.addEventListener(\"beforeunload\", tidyUp);\n      return () => {\n        window.removeEventListener(\"pagehide\", tidyUp);\n        window.removeEventListener(\"beforeunload\", tidyUp);\n      };\n    }\n  }, [room, handleLogout]);\n\n  let render;\n  if (room) {\n    render = (\n      <Room roomName={roomName} room={room} handleLogout={handleLogout} />\n    );\n  } else {\n    render = (\n      <Lobby\n        username={username}\n        roomName={roomName}\n        handleUsernameChange={handleUsernameChange}\n        handleRoomNameChange={handleRoomNameChange}\n        handleSubmit={handleSubmit}\n        connecting={connecting}\n      />\n    );\n  }\n  return render;\n};\n\nexport default VideoChat;\n"]},"metadata":{},"sourceType":"module"}