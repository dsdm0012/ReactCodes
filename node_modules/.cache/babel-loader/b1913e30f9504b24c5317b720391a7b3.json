{"ast":null,"code":"var _jsxFileName = \"/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/MainApps/Messages/VATChat/ChatWindow/ChatScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from \"react\";\nimport classes from \"./ChatScreen.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatScreen = props => {\n  _s();\n\n  const messages = props.messages;\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.chatScreen,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.dummyDiv1,\n      children: \"  Bibhuprasad   \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 6\n    }, this), props.commentObj.map((comment, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.comment,\n        children: [comment.commenter === props.currentUser && /*#__PURE__*/_jsxDEV(\"i\", {\n          className: classes.commentText,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" \", comment.commenttext]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \" 9:30pm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 12\n        }, this), comment.commenter !== props.currentUser && /*#__PURE__*/_jsxDEV(\"i\", {\n          className: classes.commentText,\n          style: {\n            backgroundColor: 'white',\n            float: 'left',\n            marginLeft: '100px',\n            boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'\n          },\n          children: comment.commenttext\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 24\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 23\n      }, this);\n    }), messages.map((message, index) => {\n      let allMsg = message.split(\" \");\n      let userId = allMsg[allMsg.length - 2]; //let displayMsg1 = allMsg.pop();\n      //let displayMsg2 = allMsg.pop(); \n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.comment,\n        children: [Number(userId) === props.currentUser && /*#__PURE__*/_jsxDEV(\"i\", {\n          className: classes.commentText,\n          children: [\"  \", allMsg.join(\" \"), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 27\n        }, this), Number(userId) !== props.currentUser && /*#__PURE__*/_jsxDEV(\"i\", {\n          className: classes.commentText,\n          style: {\n            backgroundColor: 'white',\n            float: 'left',\n            marginLeft: '100px',\n            boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'\n          },\n          children: [\"  \", allMsg.join(\" \"), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 27\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 23\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.dummyDiv,\n      ref: messagesEndRef,\n      children: \"   \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 1\n  }, this);\n};\n\n_s(ChatScreen, \"0epSoi03NVSoD0I0FiLK4iVNXOA=\");\n\n_c = ChatScreen;\nexport default ChatScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatScreen\");","map":{"version":3,"sources":["/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/MainApps/Messages/VATChat/ChatWindow/ChatScreen.js"],"names":["React","useRef","useEffect","classes","ChatScreen","props","messages","messagesEndRef","scrollToBottom","current","scrollIntoView","behavior","chatScreen","dummyDiv1","commentObj","map","comment","index","commenter","currentUser","commentText","commenttext","backgroundColor","float","marginLeft","boxShadow","message","allMsg","split","userId","length","Number","join","dummyDiv"],"mappings":"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","sourcesContent":["import React,{useRef,useEffect} from \"react\";\nimport classes from \"./ChatScreen.module.css\";\n\n\nconst ChatScreen=(props)=>{\n\n\nconst messages=props.messages;\n\n    const messagesEndRef = useRef(null);\n\n    const scrollToBottom = () => {\n       messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" })\n    }\n\n\n\n    useEffect(() => {\n      scrollToBottom();\n    }, [messages]);\n\n\n\n\nreturn(\n\n<div className={classes.chatScreen}>\n\n\n     <div className={classes.dummyDiv1}>  Bibhuprasad   </div>\n\n\n      {props.commentObj.map((comment,index)=>{\n\n               return <div  key={index} className={classes.comment} >  \n\t\t      \n\t\t      {comment.commenter === props.currentUser &&\n\t\t         <i className={classes.commentText}>\n\t\t\t     <span> {comment.commenttext}</span>\n\t\t\t     <span> 9:30pm</span>\n\t\t\t</i> \n                      }\n\n                      {comment.commenter !== props.currentUser &&\n\n                       <i className={classes.commentText} style={{backgroundColor: 'white', float: 'left',marginLeft: '100px',boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'}}>{comment.commenttext}</i>\n\n                      }\n\n\t\t      </div>\n                \n\n\n\n           }\n\n        )}\n\n\n\n\n\n\n         { messages.map((message,index)=>{\n\n               let allMsg = message.split(\" \");\n\t\t \n\t       let userId = allMsg[allMsg.length-2];\t\n\n\t       //let displayMsg1 = allMsg.pop();\n\t       //let displayMsg2 = allMsg.pop(); \n\n               return <div key={index} className={classes.comment}>   \n\n\n                    {Number(userId) === props.currentUser &&\n\n                          <i className={classes.commentText}>  {allMsg.join(\" \")} </i>\n\n                     }\n\n\n                     {Number(userId) !== props.currentUser &&\n\n                          <i className={classes.commentText} style={{backgroundColor: 'white', float: 'left',marginLeft: '100px',boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'}}>  {allMsg.join(\" \")} </i>\n\n                     }\n\n\n\n\n\n\n\t\t      </div>\n\n           }\n\n        ) \n      } \n   \n\n\n     <div className={classes.dummyDiv} ref={messagesEndRef}>   </div>\t\n\n\n\n\n\n\n\n\n\n</div>\t\n);\n\n\n}\n\n\nexport default ChatScreen;\n"]},"metadata":{},"sourceType":"module"}