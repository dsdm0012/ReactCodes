{"ast":null,"code":"var _jsxFileName = \"/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/MainApps/Dashboard/General/components/Student/CoursesGridContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport classes from './CoursesGridContainer.module.css';\nimport CourseViewDashboard from './CourseViewDashboard';\nimport { getteachercourses, getuser, getcoursesbyglobalCode, getcoursesbyglobalCodeArray } from '../../../../../CommonApps/AllAPICalls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CoursesGridContainer = () => {\n  _s();\n\n  const Course1 = {\n    courseName: \"Quantum  Mechanics-I Quantum  Mechanics-I Quantum  Mechanics-I Quantum  Mechanics-I\",\n    courseNameColor: \"var(--themeColor)\",\n    borderColor: \"var(--headerRightIconsColor)\",\n    infoBarBkgColor: \"white\",\n    boxBkgColor: \"white\",\n    courseSignUpstatusColor: \"green\",\n    courseSwitchText: \"You are in this course\",\n    courseSwitchTextColor: \"var(--themeColor)\",\n    progressBarColor: \"#50C878\"\n  }; //#e0ebff\n\n  const [data, setData] = useState({\n    \"dashboardcourses\": []\n  });\n  const [courseData, getCourseData] = useState([{\n    \"id\": 1,\n    \"teacher\": 1,\n    \"courseShortName\": \"Quantum Mechanics-I\",\n    \"courseFullName\": \"Basic Quantum Mechanics Course for BSc 1st Year\",\n    \"courseGlobalCode\": \"100001\",\n    \"courseLocalCode\": \"QM-132\",\n    \"courseStatus\": \"ongoing\",\n    \"courseStartDate\": \"2022-02-10\",\n    \"courseEndDate\": \"2022-02-10\",\n    \"designedFor\": 1,\n    \"educationboard\": \"CBSE\",\n    \"subject\": \"Physics\",\n    \"abouttheCourse\": \"sdsad\",\n    \"instituteName\": \"IIT Bhubaneswar\",\n    \"instituteCity\": \"BBSR\",\n    \"instituteCountry\": \"India\",\n    \"enrolledstudents\": [2],\n    \"enrolementrequests\": [2]\n  }]);\n  useEffect(() => {\n    getuser({\n      setData\n    });\n  }, []);\n  useEffect(() => {\n    //getcoursesbyglobalCode({globalCode, getCourseData});\n    console.log(\"dashboardcourse: \", data.dashboardcourses);\n    let courseOne = [];\n    {\n      data.dashboardcourses.map((id, index) => {\n        if (id !== 0) {\n          let globalCode = 100000 + id;\n          courseOne = getcoursesbyglobalCode({\n            globalCode,\n            getCourseData\n          });\n          console.log(\"SSS: \", courseOne);\n        }\n      });\n    } //console.log(\"courseOne length: \", courseOne.length);\n    //console.log(\"courseOne:\", courseOne);\n    //getCourseData(courseData=>courseOne);\n  }, [data.dashboardcourses]);\n  let dummy = [];\n  dummy.push(22);\n  dummy.push(22);\n  console.log(\"test-----\", dummy.length);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.coursesGridContainer,\n    children: courseData.map((course, index) => {\n      return /*#__PURE__*/_jsxDEV(CourseViewDashboard, {\n        Course: Course1\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 23\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 1\n  }, this);\n};\n\n_s(CoursesGridContainer, \"e9XllF5pfuK8foHOB+bItz61uEw=\");\n\n_c = CoursesGridContainer;\nexport default CoursesGridContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoursesGridContainer\");","map":{"version":3,"sources":["/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/MainApps/Dashboard/General/components/Student/CoursesGridContainer.js"],"names":["React","useState","useEffect","classes","CourseViewDashboard","getteachercourses","getuser","getcoursesbyglobalCode","getcoursesbyglobalCodeArray","CoursesGridContainer","Course1","courseName","courseNameColor","borderColor","infoBarBkgColor","boxBkgColor","courseSignUpstatusColor","courseSwitchText","courseSwitchTextColor","progressBarColor","data","setData","courseData","getCourseData","console","log","dashboardcourses","courseOne","map","id","index","globalCode","dummy","push","length","coursesGridContainer","course"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport classes from './CoursesGridContainer.module.css';\nimport CourseViewDashboard from './CourseViewDashboard';\nimport {getteachercourses,getuser,getcoursesbyglobalCode, getcoursesbyglobalCodeArray} from '../../../../../CommonApps/AllAPICalls';\n\n\nconst CoursesGridContainer =()=>{\n\n\n\nconst  Course1={      courseName:\"Quantum  Mechanics-I Quantum  Mechanics-I Quantum  Mechanics-I Quantum  Mechanics-I\",\n         courseNameColor:\"var(--themeColor)\",\n         borderColor:\"var(--headerRightIconsColor)\",\n         infoBarBkgColor:\"white\",\n         boxBkgColor:\"white\",\n         courseSignUpstatusColor:\"green\",\n         courseSwitchText:\"You are in this course\",\n         courseSwitchTextColor:\"var(--themeColor)\",\n         progressBarColor:\"#50C878\",\n        }\n\n//#e0ebff\nconst [data, setData] = useState({\n\"dashboardcourses\": []\n\n});\nconst [courseData,getCourseData] = useState([\n\n{\n        \"id\": 1,\n        \"teacher\": 1,\n        \"courseShortName\": \"Quantum Mechanics-I\",\n        \"courseFullName\": \"Basic Quantum Mechanics Course for BSc 1st Year\",\n        \"courseGlobalCode\": \"100001\",\n        \"courseLocalCode\": \"QM-132\",\n        \"courseStatus\": \"ongoing\",\n        \"courseStartDate\": \"2022-02-10\",\n        \"courseEndDate\": \"2022-02-10\",\n        \"designedFor\": 1,\n        \"educationboard\": \"CBSE\",\n        \"subject\": \"Physics\",\n        \"abouttheCourse\": \"sdsad\",\n        \"instituteName\": \"IIT Bhubaneswar\",\n        \"instituteCity\": \"BBSR\",\n        \"instituteCountry\": \"India\",\n        \"enrolledstudents\": [\n            2\n        ],\n        \"enrolementrequests\": [\n            2\n        ]\n    }\n\n]);\n\nuseEffect(()=>{\n     getuser({setData});\n  },[])\n\n\n\n\nuseEffect(()=>{\n\n  //getcoursesbyglobalCode({globalCode, getCourseData});\n  \n  console.log(\"dashboardcourse: \", data.dashboardcourses);\n  \n  let courseOne=[];\n   \t\n\t{data.dashboardcourses.map((id,index)=>{\n\n           if(id !==0){\t\n               let globalCode=100000+id;\t\n                 courseOne=getcoursesbyglobalCode({globalCode, getCourseData});\n\n\t       \t  console.log(\"SSS: \",courseOne); \n\n               }\n\n           });\t\n\n        }\n\n      \n\n       //console.log(\"courseOne length: \", courseOne.length);\n       //console.log(\"courseOne:\", courseOne);\n       //getCourseData(courseData=>courseOne);\n  \t\n\n},[data.dashboardcourses]);\n\nlet dummy =[]\ndummy.push(22);\ndummy.push(22);\n\nconsole.log(\"test-----\",dummy.length);\n\n\n\n\n\nreturn (\n\n\n<div className={classes.coursesGridContainer}>\n   {/*   \n   <CourseViewDashboard Course={Course1} />\n    */}\n      \n\n      {courseData.map((course,index)=>{\n\n               return <CourseViewDashboard key={index} Course={Course1}  />\n\n           }\n\n        )}\n\n\n\n\n\n\n</div>\n\n\n);\n\n\n}\n\nexport default CoursesGridContainer;\n\n"]},"metadata":{},"sourceType":"module"}