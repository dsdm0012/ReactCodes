{"ast":null,"code":"import _slicedToArray from\"/home/bibhu/Dropbox/myprojectdir_Django_DRF_React/edrUIreact/edrfront/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useRef}from\"react\";import classes from\"../../CommonAppUtilities/MainAppContainer.module.css\";import TopInfoBarAll from'./TopInfoBarAll';import TopTitleBar from'../../CommonAppUtilities/TopTitleBar';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var All=function All(props){var _useState=useState(props.sideNavBarWidth),_useState2=_slicedToArray(_useState,2),sideNavBarWidth=_useState2[0],setSideNavBarWidth=_useState2[1];var _useState3=useState('calc( 100% - var(--sideNavBarWidth) )'),_useState4=_slicedToArray(_useState3,2),mainAppContainerWidth=_useState4[0],setMainAppContainerWidth=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),contract=_useState6[0],setContract=_useState6[1];var isMounted=useRef(false);useEffect(function(){isMounted.current=true;setSideNavBarWidth(props.sideNavBarWidth);{!contract&&setMainAppContainerWidth('calc( 100% - var(--sideNavBarWidth) )');}{contract&&setMainAppContainerWidth('calc( 100% - var(--sideNavBarWidthOnContract) )');}setContract(!contract);return function(){};},[props.sideNavBarWidth]);useEffect(function(){isMounted.current=true;props.passMountInfo(true);console.log(\"All mounted=>isMounted.current: \",isMounted.current);return function(){isMounted.current=false;props.passMountInfo(false);console.log('All unmount=> isMounted.current: ',isMounted.current);};},[]);var title=\"All\";var mainAppContainerStyle={left:sideNavBarWidth,width:mainAppContainerWidth};var infoBarActiveButtonColor={color:'white',backgroundColor:'#919191'};return/*#__PURE__*/_jsxs(\"div\",{className:classes.mainAppContainer,style:mainAppContainerStyle,children:[/*#__PURE__*/_jsx(TopInfoBarAll,{styles:infoBarActiveButtonColor}),/*#__PURE__*/_jsx(TopTitleBar,{title:title})]});};export default All;","map":{"version":3,"sources":["/home/bibhu/Dropbox/myprojectdir_Django_DRF_React/edrUIreact/edrfront/src/allAppsStudent/Class/All/All.js"],"names":["React","useState","useEffect","useRef","classes","TopInfoBarAll","TopTitleBar","All","props","sideNavBarWidth","setSideNavBarWidth","mainAppContainerWidth","setMainAppContainerWidth","contract","setContract","isMounted","current","passMountInfo","console","log","title","mainAppContainerStyle","left","width","infoBarActiveButtonColor","color","backgroundColor","mainAppContainer"],"mappings":"4LAAA,MAAOA,CAAAA,KAAP,EAAcC,QAAd,CAAuBC,SAAvB,CAAiCC,MAAjC,KAA8C,OAA9C,CACA,MAAOC,CAAAA,OAAP,KAAoB,sDAApB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,WAAP,KAAwB,sCAAxB,C,wFAGA,GAAMC,CAAAA,GAAG,CAAC,QAAJA,CAAAA,GAAI,CAACC,KAAD,CAAS,CAGhB,cAA2CP,QAAQ,CAACO,KAAK,CAACC,eAAP,CAAnD,wCAAOA,eAAP,eAAuBC,kBAAvB,eACA,eAAuDT,QAAQ,CAAC,uCAAD,CAA/D,yCAAOU,qBAAP,eAA6BC,wBAA7B,eACA,eAAgCX,QAAQ,CAAC,KAAD,CAAxC,yCAAOY,QAAP,eAAiBC,WAAjB,eAEA,GAAMC,CAAAA,SAAS,CAAGZ,MAAM,CAAC,KAAD,CAAxB,CAGAD,SAAS,CAAC,UAAM,CACba,SAAS,CAACC,OAAV,CAAoB,IAApB,CACAN,kBAAkB,CAACF,KAAK,CAACC,eAAP,CAAlB,CACA,CAAC,CAACI,QAAD,EAAaD,wBAAwB,CAAC,uCAAD,CAArC,CAA+E,CAChF,CAACC,QAAQ,EAAID,wBAAwB,CAAC,iDAAD,CAApC,CAAwF,CACzFE,WAAW,CAAC,CAACD,QAAF,CAAX,CAEA,MAAO,WAAM,CACZ,CADD,CAGF,CAVQ,CAUN,CAACL,KAAK,CAACC,eAAP,CAVM,CAAT,CAaAP,SAAS,CAAC,UAAM,CACfa,SAAS,CAACC,OAAV,CAAoB,IAApB,CACAR,KAAK,CAACS,aAAN,CAAoB,IAApB,EACAC,OAAO,CAACC,GAAR,CAAY,kCAAZ,CAA+CJ,SAAS,CAACC,OAAzD,EACA,MAAO,WAAM,CACZD,SAAS,CAACC,OAAV,CAAoB,KAApB,CACOR,KAAK,CAACS,aAAN,CAAoB,KAApB,EACAC,OAAO,CAACC,GAAR,CAAY,mCAAZ,CAAgDJ,SAAS,CAACC,OAA1D,EACP,CAJD,CAKA,CATQ,CASN,EATM,CAAT,CAiBA,GAAII,CAAAA,KAAK,CAAC,KAAV,CACA,GAAIC,CAAAA,qBAAqB,CAAC,CAACC,IAAI,CAACb,eAAN,CAAuBc,KAAK,CAACZ,qBAA7B,CAA1B,CACA,GAAMa,CAAAA,wBAAwB,CAAG,CAACC,KAAK,CAAE,OAAR,CAAgBC,eAAe,CAAE,SAAjC,CAAjC,CAQA,mBAEG,aAAK,SAAS,CAAEtB,OAAO,CAACuB,gBAAxB,CAA0C,KAAK,CAAEN,qBAAjD,wBACA,KAAC,aAAD,EAAe,MAAM,CAAEG,wBAAvB,EADA,cAGA,KAAC,WAAD,EAAa,KAAK,CAAEJ,KAApB,EAHA,GAFH,CAWF,CA7DD,CA+DA,cAAeb,CAAAA,GAAf","sourcesContent":["import React,{useState,useEffect,useRef} from \"react\";\nimport classes from \"../../CommonAppUtilities/MainAppContainer.module.css\"\nimport TopInfoBarAll from './TopInfoBarAll';\nimport TopTitleBar from '../../CommonAppUtilities/TopTitleBar';\n\n\nconst All=(props)=>{\n\n   \n   const [sideNavBarWidth,setSideNavBarWidth]=useState(props.sideNavBarWidth);\n   const [mainAppContainerWidth,setMainAppContainerWidth]=useState('calc( 100% - var(--sideNavBarWidth) )');\t\n   const [contract, setContract] = useState(false);\n\n   const isMounted = useRef(false);\n\n\n   useEffect(() => {\n      isMounted.current = true;\t   \n      setSideNavBarWidth(props.sideNavBarWidth);\n      {!contract && setMainAppContainerWidth('calc( 100% - var(--sideNavBarWidth) )')}\n      {contract && setMainAppContainerWidth('calc( 100% - var(--sideNavBarWidthOnContract) )')}\n      setContract(!contract);\n\n      return () => { \n      }\n\n   }, [props.sideNavBarWidth]);\n\n\n   useEffect(() => {\n    isMounted.current = true;\n    props.passMountInfo(true);\t   \n    console.log(\"All mounted=>isMounted.current: \",isMounted.current);\t   \n    return () => { \n\t    isMounted.current = false \n            props.passMountInfo(false);\n            console.log('All unmount=> isMounted.current: ',isMounted.current);\n    }\n   }, []);\n\n\n\n\n\n\n\n   let title=\"All\"\t\n   let mainAppContainerStyle={left:sideNavBarWidth, width:mainAppContainerWidth}\n   const infoBarActiveButtonColor = {color: 'white',backgroundColor: '#919191'}\n\n\n\n\n\n\n\n   return(\n\n      <div className={classes.mainAppContainer} style={mainAppContainerStyle} >\n      <TopInfoBarAll styles={infoBarActiveButtonColor}/>\n\n      <TopTitleBar title={title}/>\n\n\n      </div>\n\n   );\n}\n\nexport default All;\n\n"]},"metadata":{},"sourceType":"module"}