{"ast":null,"code":"var _jsxFileName = \"/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/MainApps/Class/Overview/components/Teacher/CourseCreate/CreateCourseForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport classes from \"./CreateCourseForm.module.css\";\nimport { AiFillCloseCircle } from \"react-icons/ai\";\nimport logoImage from '../../../../../../CommonApps/BWlogo.JPG';\nimport { OptionField, OptionFieldSubmitValue, OptionFieldSecondaryObjs, ParagraphField, TextInput, DateField, TimeField, NumberInput, DayField } from './FormInputObjects';\nimport { getclassobjectbyId, createcourse, getuser, getsubjectsfromclassandboard, createnewclass, createmulticlass } from '../../../../../../CommonApps/AllAPICalls';\nimport FadeLoader from \"react-spinners/FadeLoader\";\nimport { css } from \"@emotion/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nconst convertAndAddto24hourFormat = ({\n  formDataMultiClass,\n  day\n}) => {\n  if (day === \"Monday\") {\n    let ampm = formDataMultiClass.selectedampmM;\n    let minute = formDataMultiClass.selectedminuteM;\n    let hour = formDataMultiClass.selectedhourM;\n\n    if (ampm === \"pm\") {\n      hour = Number(hour) + 12;\n    }\n\n    let time = hour + ':' + minute + ':' + '00';\n    let timestr = time.toString();\n    formDataMultiClass[\"classtimeMonday\"] = timestr;\n  }\n\n  if (day === \"Tuesday\") {\n    let ampm = formDataMultiClass.selectedampmT;\n    let minute = formDataMultiClass.selectedminuteT;\n    let hour = formDataMultiClass.selectedhourT;\n\n    if (ampm === \"pm\") {\n      hour = Number(hour) + 12;\n    }\n\n    let time = hour + ':' + minute + ':' + '00';\n    let timestr = time.toString();\n    formDataMultiClass[\"classtimeTuesday\"] = timestr;\n  }\n};\n\nconst CreateCourseForm = props => {\n  _s();\n\n  let [loading, setLoading] = useState(true);\n  let [color, setColor] = useState(\" var(--themeColor)\");\n  const [data, setData] = useState({});\n  useEffect(() => {\n    getuser({\n      setData\n    });\n  }, []); ////////////////////////Single Class Details/////////////////////////\n\n  const initialFormDataSingleClass = Object.freeze({\n    courseId: props.selectedCourse.length > 0 ? props.selectedCourse[0].id : null,\n    serialNo: null,\n    classStatus: \"scheduled\",\n    classdate: \"\",\n    classtime: \"00:00:00\",\n    duration: null,\n    meetingLink: \"\",\n    roomNo: \"\",\n    chapter: null,\n    topics: []\n  });\n  const [formDataSingleClass, updateFormDataSingleClass] = useState(initialFormDataSingleClass);\n  const [singleClassTime, setSingleClassTime] = useState(\"00:00:00\");\n\n  const handleChangeSingleClass = e => {\n    //console.log(\"name, value: \", e.target.name,\"---\",e.target.value);    \n    updateFormDataSingleClass({ ...formDataSingleClass,\n      [e.target.name]: e.target.value.trim()\n    });\n  };\n\n  const [showForm, setShowForm] = useState(true);\n  const [showSingleClassForm, setSingleClassForm] = useState(true);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if (formDataSingleClass.classdate === \"\") {\n      alert('please enter date');\n      return null;\n    }\n\n    if (!(\"selectedhour\" in formDataSingleClass)) {\n      alert('please select hour');\n      return null;\n    }\n\n    if (!(\"selectedminute\" in formDataSingleClass)) {\n      alert('please select minutes');\n      return null;\n    }\n\n    if (!(\"selectedampm\" in formDataSingleClass)) {\n      alert('please select am or pm');\n      return null;\n    }\n\n    if (formDataSingleClass.duration === null) {\n      alert('please enter duration');\n      return null;\n    }\n\n    let ampm = formDataSingleClass.selectedampm;\n    let minute = formDataSingleClass.selectedminute;\n    let hour = formDataSingleClass.selectedhour;\n\n    if (ampm === \"pm\") {\n      hour = Number(hour) + 12;\n    }\n\n    let time = hour + ':' + minute + ':' + '00';\n    let timestr = time.toString();\n    formDataSingleClass[\"classtime\"] = timestr;\n    console.log(\"time: \", formDataSingleClass.classtime);\n    createnewclass({\n      formDataSingleClass\n    }); //alert(\"Successfully submitted\");\n\n    props.onPress(); //setFormSubmitted(!formSubmitted);\n  };\n\n  const [formButton1Style, setFormButton1Style] = useState({\n    backgroundColor: 'var(--themeColor)',\n    color: 'white'\n  });\n  const [formButton2Style, setFormButton2Style] = useState({\n    backgroundColor: 'lightgrey',\n    color: 'grey'\n  });\n\n  const singleClassHandler = () => {\n    setSingleClassForm(true);\n    setFormButton1Style({\n      backgroundColor: 'var(--themeColor)',\n      color: 'white'\n    });\n    setFormButton2Style({\n      backgroundColor: 'lightgrey',\n      color: 'grey'\n    });\n  };\n\n  const multiClassHandler = () => {\n    setSingleClassForm(false);\n    setFormButton1Style({\n      backgroundColor: 'lightgrey',\n      color: 'grey'\n    });\n    setFormButton2Style({\n      backgroundColor: 'var(--themeColor)',\n      color: 'white'\n    });\n  };\n\n  let intervals = [10, 15, 20, 25, 30, 40, 45, 50, 60, 70, 120]; //Multi Class Details\n\n  const [formDataMultiClass, updateFormDataMultiClass] = useState(initialFormDataSingleClass);\n\n  const handleChange = () => {};\n\n  const [checkedM, setCheckedM] = useState(false);\n  const [checkedT, setCheckedT] = useState(false);\n\n  const handleChangeMulti = e => {\n    console.log(\"name, value: \", e.target.name, \"---\", e.target.value, \" checkedM\", checkedM, \"--checkedT\", checkedT);\n    updateFormDataMultiClass({ ...formDataMultiClass,\n      [e.target.name]: e.target.value.trim()\n    });\n  };\n\n  const handleSubmitMulti = e => {\n    e.preventDefault();\n    console.log(\"multi class form: \", formDataMultiClass);\n\n    if (!(\"classDateStart\" in formDataMultiClass)) {\n      alert('please select start date');\n      return null;\n    }\n\n    if (!(\"classDateEnd\" in formDataMultiClass)) {\n      alert('please select end date');\n      return null;\n    }\n\n    formDataMultiClass[\"checkedM\"] = checkedM;\n\n    if (checkedM && !(\"selectedhourM\" in formDataMultiClass)) {\n      alert('please class hour');\n      return null;\n    }\n\n    if (checkedM && !(\"selectedminuteM\" in formDataMultiClass)) {\n      alert('please class minute');\n      return null;\n    }\n\n    if (checkedM && !(\"selectedampmM\" in formDataMultiClass)) {\n      alert('please select am or pm.');\n      return null;\n    }\n\n    if (checkedM) {\n      let day = \"Monday\"; //add classtimeMonday to form \n\n      convertAndAddto24hourFormat({\n        formDataMultiClass,\n        day\n      });\n    }\n\n    createmulticlass({\n      formDataMultiClass\n    }); //console.log(\"starting to create\");\n  };\n\n  console.log(\"formData Multi: \", formDataMultiClass);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.createTicketFormDivParent,\n    children: [1 === 2 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.createTicketFormLoading,\n      children: [/*#__PURE__*/_jsxDEV(FadeLoader, {\n        color: color,\n        loading: loading,\n        css: \"\",\n        size: 50\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.submittingDiv,\n        children: \" Creating . . . \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.createTicketForm,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.closeButtonDiv,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: props.onPress,\n          className: classes.closeFormButton,\n          children: /*#__PURE__*/_jsxDEV(AiFillCloseCircle, {\n            className: classes.closeButtonIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 22\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 18\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.logoAndTitleContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: classes.bwLogo,\n          src: logoImage,\n          alt: \"edr Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.formTitleDiv,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"  Create  class \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 349,\n            columnNumber: 57\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 11\n      }, this), props.selectedCourse.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.noCourseWarning,\n        children: \"Please goback and select a course before creating class\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 355,\n        columnNumber: 49\n      }, this), props.selectedCourse.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.singleNMultiFormOption,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.singleClass,\n          onClick: singleClassHandler,\n          style: formButton1Style,\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Create a class\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 364,\n            columnNumber: 110\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 364,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: classes.multiClass,\n          onClick: multiClassHandler,\n          style: formButton2Style,\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Create multiple classes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 365,\n            columnNumber: 109\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 11\n      }, this), props.selectedCourse.length > 0 && showSingleClassForm && /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.formElement1,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(DateField, {\n          handleChange: handleChangeSingleClass,\n          label: \"*When is your class?\",\n          name: \"classdate\",\n          placeholder: \"Enter a date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(TimeField, {\n          handleChange: handleChangeSingleClass,\n          label: \"*When class starts\",\n          selectedhour: \"selectedhour\",\n          selectedminute: \"selectedminute\",\n          selectedampm: \"selectedampm\",\n          placeholder: \"Enter a time\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(OptionField, {\n          handleChange: handleChangeSingleClass,\n          label: \"*Duration of class\",\n          name: \"duration\",\n          options: intervals\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 387,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.submitButtonDiv,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: classes.submit_button,\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Create \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 76\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 391,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 72\n      }, this), props.selectedCourse.length > 0 && !showSingleClassForm && /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.formElement1,\n        onSubmit: handleSubmitMulti,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.multiClassInfo,\n          children: \" First set the classes and time for a week. Then you can choose to repeat same pattern for several weeks.  \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(DateField, {\n          handleChange: handleChangeMulti,\n          label: \"Choose start date\",\n          name: \"classDateStart\",\n          placeholder: \"Enter a date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(DayField, {\n          handleChange: handleChangeMulti,\n          label: \"Monday\",\n          selectedhour: \"selectedhourM\",\n          selectedminute: \"selectedminuteM\",\n          selectedampm: \"selectedampmM\",\n          setChecked: setCheckedM\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(DayField, {\n          handleChange: handleChangeMulti,\n          label: \"Tuesday\",\n          selectedhour: \"selectedhourT\",\n          selectedminute: \"selectedminuteT\",\n          selectedampm: \"selectedampmT\",\n          setChecked: setCheckedT\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(DateField, {\n          handleChange: handleChangeMulti,\n          label: \"Choose end date\",\n          name: \"classDateEnd\",\n          placeholder: \"Enter a date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 435,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.submitButtonDiv,\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: classes.submit_button,\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Create \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 439,\n              columnNumber: 76\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 439,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 14\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 401,\n        columnNumber: 73\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 323,\n    columnNumber: 1\n  }, this);\n};\n\n_s(CreateCourseForm, \"ALO/PsDpc37IdYAWi2buJFY9y3c=\");\n\n_c = CreateCourseForm;\nexport default CreateCourseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateCourseForm\");","map":{"version":3,"sources":["/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/MainApps/Class/Overview/components/Teacher/CourseCreate/CreateCourseForm.js"],"names":["React","useState","useEffect","classes","AiFillCloseCircle","logoImage","OptionField","OptionFieldSubmitValue","OptionFieldSecondaryObjs","ParagraphField","TextInput","DateField","TimeField","NumberInput","DayField","getclassobjectbyId","createcourse","getuser","getsubjectsfromclassandboard","createnewclass","createmulticlass","FadeLoader","css","override","convertAndAddto24hourFormat","formDataMultiClass","day","ampm","selectedampmM","minute","selectedminuteM","hour","selectedhourM","Number","time","timestr","toString","selectedampmT","selectedminuteT","selectedhourT","CreateCourseForm","props","loading","setLoading","color","setColor","data","setData","initialFormDataSingleClass","Object","freeze","courseId","selectedCourse","length","id","serialNo","classStatus","classdate","classtime","duration","meetingLink","roomNo","chapter","topics","formDataSingleClass","updateFormDataSingleClass","singleClassTime","setSingleClassTime","handleChangeSingleClass","e","target","name","value","trim","showForm","setShowForm","showSingleClassForm","setSingleClassForm","handleSubmit","preventDefault","alert","selectedampm","selectedminute","selectedhour","console","log","onPress","formButton1Style","setFormButton1Style","backgroundColor","formButton2Style","setFormButton2Style","singleClassHandler","multiClassHandler","intervals","updateFormDataMultiClass","handleChange","checkedM","setCheckedM","checkedT","setCheckedT","handleChangeMulti","handleSubmitMulti","createTicketFormDivParent","createTicketFormLoading","submittingDiv","createTicketForm","closeButtonDiv","closeFormButton","closeButtonIcon","logoAndTitleContainer","bwLogo","formTitleDiv","noCourseWarning","singleNMultiFormOption","singleClass","multiClass","formElement1","submitButtonDiv","submit_button","multiClassInfo"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from \"react\";\nimport classes from \"./CreateCourseForm.module.css\";\nimport {AiFillCloseCircle} from \"react-icons/ai\";\nimport logoImage from '../../../../../../CommonApps/BWlogo.JPG'\nimport {OptionField,OptionFieldSubmitValue,\n\t  OptionFieldSecondaryObjs, ParagraphField,\n\t  TextInput, DateField,\n\t  TimeField,NumberInput,DayField} from './FormInputObjects';\nimport {getclassobjectbyId, \n\t  createcourse,getuser,\n\t  getsubjectsfromclassandboard,\n\t  createnewclass,createmulticlass} from '../../../../../../CommonApps/AllAPICalls';\nimport FadeLoader from \"react-spinners/FadeLoader\";\nimport { css } from \"@emotion/react\";\n\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\n\nconst convertAndAddto24hourFormat=({ formDataMultiClass, day })=>{\n\t  if (day===\"Monday\"){\n          let ampm = formDataMultiClass.selectedampmM;\n          let minute = formDataMultiClass.selectedminuteM;\n          let hour = formDataMultiClass.selectedhourM;\n          if(ampm===\"pm\"){\n          hour=Number(hour)+12;\n          }\n\n          let time=hour+':'+minute+':'+'00';\n\n          let timestr= time.toString();\n\n          formDataMultiClass[\"classtimeMonday\"]=timestr;\n          }\n\n          if (day===\"Tuesday\"){\n          let ampm = formDataMultiClass.selectedampmT;\n          let minute = formDataMultiClass.selectedminuteT;\n          let hour = formDataMultiClass.selectedhourT;\n          if(ampm===\"pm\"){\n          hour=Number(hour)+12;\n          }\n\n          let time=hour+':'+minute+':'+'00';\n\n          let timestr= time.toString();\n\n          formDataMultiClass[\"classtimeTuesday\"]=timestr;\n          } \n\n\n\n\n\n\n\n}\n\n\n\n\n\n\n\n\n\n\nconst CreateCourseForm=(props)=>{\n\n\n    let [loading, setLoading] = useState(true);\n    let [color, setColor] = useState(\" var(--themeColor)\");\n\n\nconst [data, setData] = useState({});\n\n\n    useEffect(()=>{\n       getuser({setData});\n    },[]);\n\n\n\n    ////////////////////////Single Class Details/////////////////////////\n    const initialFormDataSingleClass = Object.freeze({\n\tcourseId: props.selectedCourse.length > 0 ? props.selectedCourse[0].id : null,\n        serialNo: null,\n        classStatus: \"scheduled\",\n        classdate: \"\",\n        classtime: \"00:00:00\",\n        duration: null,\n        meetingLink: \"\",\n        roomNo: \"\",\n        chapter: null,\n        topics: []\n         \n\n        });\n\n\n\n    const [formDataSingleClass, updateFormDataSingleClass] = useState(initialFormDataSingleClass);\n\n    const [singleClassTime,setSingleClassTime] = useState(\"00:00:00\");\t\n\n\n    const handleChangeSingleClass = (e) => {\n\n\t//console.log(\"name, value: \", e.target.name,\"---\",e.target.value);    \n\n\n        updateFormDataSingleClass({\n                        ...formDataSingleClass,\n                        [e.target.name]: e.target.value.trim(),\n                });\n    }\n\n\n\n\n    const [showForm, setShowForm] = useState(true);\n\n    const [showSingleClassForm, setSingleClassForm] = useState(true);\n\n    const handleSubmit = (e) => {\n\t   e.preventDefault();\n\t  \n          if(formDataSingleClass.classdate===\"\"){\n            alert('please enter date');\n                        return null;\n          }\n\n\n          if(!(\"selectedhour\" in formDataSingleClass)){\n            alert('please select hour');\n                        return null;\n\t  }\n\n          if(!(\"selectedminute\" in formDataSingleClass)){\n            alert('please select minutes');\n                        return null;\n          }\n\n          if(!(\"selectedampm\" in formDataSingleClass)){\n            alert('please select am or pm');\n                        return null;\n          }\n\n          if(formDataSingleClass.duration===null){\n            alert('please enter duration');\n                        return null;\n          }\n\n          \n\n          let ampm = formDataSingleClass.selectedampm;\n\t  let minute = formDataSingleClass.selectedminute;\n\t  let hour = formDataSingleClass.selectedhour;  \n          if(ampm===\"pm\"){\n          hour=Number(hour)+12;\n\t  }\n\n\t  let time=hour+':'+minute+':'+'00';  \n\n\t  let timestr= time.toString(); \n\n          formDataSingleClass[\"classtime\"]=timestr;\n\n          console.log(\"time: \", formDataSingleClass.classtime);\n          \n\n          createnewclass({formDataSingleClass});\n\t  //alert(\"Successfully submitted\");\n\n          props.onPress();\n\n          //setFormSubmitted(!formSubmitted);\n\n\t\n\t\n\t};\n\n\n    const [formButton1Style,setFormButton1Style]=useState({\n      backgroundColor:'var(--themeColor)',\n      color:'white'\t    \n\n    });\n\n    const [formButton2Style,setFormButton2Style]=useState({\n      backgroundColor:'lightgrey',\n      color:'grey'\n\n    });\n\n\n\n\n    const singleClassHandler=()=>{\n       setSingleClassForm(true);\n       setFormButton1Style({\n         backgroundColor:'var(--themeColor)',\n         color:'white'\n       });\n\n       setFormButton2Style({\n          backgroundColor:'lightgrey',\n          color:'grey'\n       });\n    }\n\n\n    const multiClassHandler=()=>{\n       setSingleClassForm(false);\n       setFormButton1Style({\n          backgroundColor:'lightgrey',\n          color:'grey'\n       });\n\n       setFormButton2Style({\n          backgroundColor:'var(--themeColor)',\n          color:'white'\n       });\t \n    }\n\n\n    let intervals=[10,15,20,25,30,40,45,50,60,70,120]\n\n\n\n   //Multi Class Details\n\n    const [formDataMultiClass, updateFormDataMultiClass] = useState(initialFormDataSingleClass);\n\n    const handleChange=()=>{\n\n    }\n\n    const [checkedM, setCheckedM] = useState(false);\n    const [checkedT, setCheckedT] = useState(false);\n\n\n\n    const handleChangeMulti=(e)=>{\n    console.log(\"name, value: \", e.target.name,\"---\",e.target.value,\" checkedM\",checkedM, \"--checkedT\",checkedT);\n     updateFormDataMultiClass({\n                        ...formDataMultiClass,\n                        [e.target.name]: e.target.value.trim(),\n                });\n     }\n\n\n    const handleSubmitMulti=(e)=>{\n      e.preventDefault();\n      console.log(\"multi class form: \", formDataMultiClass)\n\n      if(!(\"classDateStart\" in formDataMultiClass)){\n            alert('please select start date');\n                        return null;\n          }\n\n      if(!(\"classDateEnd\" in formDataMultiClass)){\n            alert('please select end date');\n                        return null;\n          }\n\n\n      formDataMultiClass[\"checkedM\"]=checkedM;\n\n\n      if( checkedM && !(\"selectedhourM\" in formDataMultiClass)){\n            alert('please class hour');\n                        return null;\n          }\n\n      if( checkedM && !(\"selectedminuteM\" in formDataMultiClass)){\n            alert('please class minute');\n                        return null;\n          }\n\n      if( checkedM && !(\"selectedampmM\" in formDataMultiClass)){\n            alert('please select am or pm.');\n                        return null;\n          }\n\n\n\n      if(checkedM){\n\t      let day=\"Monday\";\n\t      //add classtimeMonday to form \n\t      convertAndAddto24hourFormat({formDataMultiClass,day});\n\n      }\n\n      createmulticlass({formDataMultiClass});\n      //console.log(\"starting to create\");\n\n\n\n    }\n\n\n\n\n\n\n\n    console.log(\"formData Multi: \",formDataMultiClass );\n\n\n\n\n\n\n\n\nreturn(\n\n<div className={classes.createTicketFormDivParent}>\n\n   {1===2 &&  \n\t   <div className={classes.createTicketFormLoading}>\n\n\t   <FadeLoader color={color} loading={loading} css={\"\"} size={50}  />\n\t    \n\t   <div className={classes.submittingDiv}> Creating . . . </div>\n           </div>\n   }\n\n   \n\n   <div className={classes.createTicketForm}>\n\n          <div className={classes.closeButtonDiv}>\n                 <button onClick={props.onPress} \n\t               className={classes.closeFormButton}> \n\t                    <AiFillCloseCircle className={classes.closeButtonIcon}/> \n\t         </button>\n          </div>\n\n\n\n          <div className={classes.logoAndTitleContainer}>\n                 <img  className={classes.bwLogo} src={logoImage} alt='edr Logo' />\n                  <div className={classes.formTitleDiv}><i>  Create  class </i></div>\n          </div>\n\n\n\n\n          {  props.selectedCourse.length===0 && <div className={classes.noCourseWarning}>\n\n                  Please goback and select a course before creating class\n\t          </div>\n\t  }\n\n\n\t { props.selectedCourse.length > 0 &&\n          <div className={classes.singleNMultiFormOption}>\n              <button className={classes.singleClass} onClick={singleClassHandler} style={formButton1Style}> <h2>Create a class</h2> </button>\n              <button className={classes.multiClass}  onClick={multiClassHandler} style={formButton2Style}> <h2>Create multiple classes</h2> </button>\n          </div>\n         }\n\n\n\n\n\n\n        \n          { props.selectedCourse.length > 0 && showSingleClassForm &&  <form className={classes.formElement1} onSubmit={handleSubmit}>\n\n             <DateField handleChange={handleChangeSingleClass} label=\"*When is your class?\" name=\"classdate\" placeholder=\"Enter a date\" />\n\n             <TimeField handleChange={handleChangeSingleClass} \n\t\t     label=\"*When class starts\" \t\t     \n\t\t     selectedhour = \"selectedhour\"\n\t\t     selectedminute = \"selectedminute\"\n\t\t     selectedampm = \"selectedampm\"\n\t\t     placeholder=\"Enter a time\" \n\t\t/>\n             \t\t \n             <OptionField handleChange={handleChangeSingleClass}  label=\"*Duration of class\" name=\"duration\"  options={intervals} />\n\n\n              <div className={classes.submitButtonDiv}>\n                <button type=\"submit\"  className= {classes.submit_button} ><b>Create </b> </button>\n             </div>\n\n\n\n           </form>\n          }\n\n\n\n           {props.selectedCourse.length > 0 && !showSingleClassForm &&  <form className={classes.formElement1} onSubmit={handleSubmitMulti}>\n\n\n\t     <div className={classes.multiClassInfo}> First set the classes and time for a week. \n\t\t\t   Then you can choose to repeat same pattern for several weeks.  </div>  \t\t   \n\n             <DateField handleChange={handleChangeMulti} label=\"Choose start date\" name=\"classDateStart\" placeholder=\"Enter a date\" />\n\n\n\n\n             <DayField handleChange={handleChangeMulti} \n\t\t   label=\"Monday\" \n\t\t   selectedhour = \"selectedhourM\"\n                   selectedminute = \"selectedminuteM\"\n                   selectedampm = \"selectedampmM\"\n\t\t   setChecked = {setCheckedM}\n\t\t\t   />\n             <DayField handleChange={handleChangeMulti} \n\t\t   label=\"Tuesday\" \n\t\t   selectedhour = \"selectedhourT\"\n                   selectedminute = \"selectedminuteT\"\n                   selectedampm = \"selectedampmT\"\n\t\t   setChecked = {setCheckedT}\n\t\t\t   />\n             {/*\t\t\t   \n\t       <DayField handleChange={handleChangeS} label=\"Wednesday\" name=\"wednesdayfield\" />\n\t       <DayField handleChange={handleChangeS} label=\"Thursday\" name=\"thursdayfield\" />\n\t       <DayField handleChange={handleChangeS} label=\"Friday\" name=\"fridayfield\" />\n\t       <DayField handleChange={handleChangeS} label=\"Saturday\" name=\"saturdayfield\" />\n\t       <DayField handleChange={handleChangeS} label=\"Sunday\" name=\"sundayfield\" />\n             */}\n\n\n           <DateField handleChange={handleChangeMulti} label=\"Choose end date\" name=\"classDateEnd\" placeholder=\"Enter a date\" />\n\n\n             <div className={classes.submitButtonDiv}>\n                <button type=\"submit\"  className= {classes.submit_button} ><b>Create </b> </button>\n             </div>\n\n\n\n           </form>\n          }\n\n\n\n\n\n\n\n\n\n\n   </div>\n\n\n\n   {  /* !showForm &&\t\n  <form className={classes.createTicketForm} onSubmit={handleSubmit}>\n\n\n\n\n\n\n\n\n      \n       <OptionFieldSecondaryObjs handleChange={handleChange2}  label=\"Choose Board\" name=\"educationboard\"  options={classObject.boardofeducation}/>\n       \n \n       <OptionFieldSubmitValue handleChange={handleChange}  label=\"Choose Subject\" name=\"subject\"  options={subjectsObject}/>       \n\n\n       <TextInput handleChange={handleChange} label=\"Assign a Codename\" placeholder=\"Enter a code e.g. QM-231\" name=\"courseLocalCode\"/>\n\n       <TextInput handleChange={handleChange} label=\"Short name of the course\" placeholder=\"e.g. Quantum Mechanics-I\" name=\"courseShortName\"/>\n\n\n       <TextInput handleChange={handleChange} label=\"Write full name of the course\" placeholder=\"e.g. Elementary Quantum Mechanics of Practical Atomic Systems\" name=\"courseFullName\"/>\n\n\n       <DateField handleChange={handleChange} label=\"Start date\" name=\"courseStartDate\" placeholder=\"Enter course start date\"   />\n\n       <DateField handleChange={handleChange} label=\"End date\" name=\"courseEndDate\" placeholder=\"Enter course end date\"   />\n\n       <ParagraphField label=\"About the course\" name=\"abouttheCourse\"  placeholder=\"Few words about the course\"  handleChange={handleChange} />\t\n\n\n       <TextInput handleChange={handleChange} label=\"Write name of your institute\" placeholder=\"e.g. IIT BBSR\" name=\"instituteName\"/>\n\n \n \n\n\n\n\n    <div className={classes.submitButtonDiv}>\n          <button type=\"submit\"  className= {classes.submit_button} ><b>Create </b> </button>\n\n    </div>\n\n\n\n\n\n\n  </form>*/}\n\n\n</div>\t\n);\n\n}\n\n\nexport default CreateCourseForm;\n"]},"metadata":{},"sourceType":"module"}