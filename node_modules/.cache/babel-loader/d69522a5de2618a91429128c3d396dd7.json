{"ast":null,"code":"var _jsxFileName = \"/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/MainApps/Dashboard/General/Notices/NoticeBox.js\";\nimport React, { useState, useEffect } from 'react';\nimport classes from './NoticeBox.module.css';\nimport { BsCheckCircle } from 'react-icons/bs';\nimport { deletenoticebyId, removenoticebyId } from '../../../../CommonApps/AllAPICalls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NoticeBox = props => {\n  let bkgColor = props.read ? \"#F0F0F0\" : \"white\";\n\n  const noticeCreationTime = ({\n    datetime\n  }) => {\n    let DatetimeLocalFull = new Date(datetime);\n    let DatetimeLocalFullStr = String(DatetimeLocalFull);\n    let dayStr = DatetimeLocalFullStr.split(\" \").at(0);\n    let dateStr = DatetimeLocalFullStr.split(\" \").at(2);\n    let month = DatetimeLocalFullStr.split(\" \").at(1);\n    let year = DatetimeLocalFullStr.split(\" \").at(3);\n    let fullTimeLocal = DatetimeLocalFullStr.split(\" \").at(4);\n    let fullTimeLocalStr = String(fullTimeLocal);\n    let localTimeHour = fullTimeLocalStr.split(\":\").at(0);\n    let localTimeMin = fullTimeLocalStr.split(\":\").at(1);\n    let ampm = \"am\";\n\n    if (localTimeHour == 12) {\n      ampm = 'pm';\n    } else if (localTimeHour == 0) {\n      localTimeHour = 12;\n    } else if (localTimeHour > 12) {\n      localTimeHour -= 12;\n      ampm = 'pm';\n    }\n\n    let time = String(localTimeHour) + \":\" + String(localTimeMin) + String(ampm) + \", \" + String(dateStr) + \" \" + String(month) + \" \" + String(year);\n    return time;\n  };\n\n  let datetime = props.Notice.creationTime;\n\n  const deleteNoticeHandler = () => {\n    let noticeId = props.Notice.id;\n    deletenoticebyId({\n      noticeId,\n      props\n    });\n  };\n\n  const removeNoticeHandler = () => {\n    let noticeId = props.Notice.id;\n    console.log(\"remove handler\");\n    removenoticebyId({\n      noticeId,\n      props\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.noticeBox,\n    style: {\n      backgroundColor: bkgColor\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.topSection,\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: classes.noticeID,\n        children: [\"Notice ID: EDR-\", props.Notice.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: classes.creationTime,\n        children: [\" Created at: \", noticeCreationTime({\n          datetime\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 2\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.midSection,\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"  \", props.Notice.noticeTitle, \"   \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 44\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: props.Notice.noticeText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 85\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.buttomSection,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.noticeBoxButtonView,\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: [\"Posted by :\", props.Notice.creater.firstname !== \"\" ? props.Notice.creater.firstname + \" \" + props.Notice.creater.lastname : props.Notice.creater.username]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 55\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), props.read && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.markAsUnread,\n        className: classes.markAsUnreadButton,\n        children: /*#__PURE__*/_jsxDEV(BsCheckCircle, {\n          className: classes.noticeReadIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 3\n      }, this), !props.read && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: classes.noticeBoxButtonRead,\n        onClick: props.markAsRead,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"mark as read\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 18\n      }, this), props.userData !== null && Number(props.userData.id) === Number(props.Notice.creater.id) && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.noticeBoxButtonHide,\n        onClick: deleteNoticeHandler,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 2\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 4\n      }, this), props.userData !== null && Number(props.userData.id) !== Number(props.Notice.creater.id) && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.noticeBoxButtonHide,\n        onClick: removeNoticeHandler,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 1\n  }, this);\n};\n\n_c = NoticeBox;\nexport default NoticeBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoticeBox\");","map":{"version":3,"sources":["/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/MainApps/Dashboard/General/Notices/NoticeBox.js"],"names":["React","useState","useEffect","classes","BsCheckCircle","deletenoticebyId","removenoticebyId","NoticeBox","props","bkgColor","read","noticeCreationTime","datetime","DatetimeLocalFull","Date","DatetimeLocalFullStr","String","dayStr","split","at","dateStr","month","year","fullTimeLocal","fullTimeLocalStr","localTimeHour","localTimeMin","ampm","time","Notice","creationTime","deleteNoticeHandler","noticeId","id","removeNoticeHandler","console","log","noticeBox","backgroundColor","topSection","noticeID","midSection","noticeTitle","noticeText","buttomSection","noticeBoxButtonView","creater","firstname","lastname","username","markAsUnread","markAsUnreadButton","noticeReadIcon","noticeBoxButtonRead","markAsRead","userData","Number","noticeBoxButtonHide"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport classes from './NoticeBox.module.css';\nimport {BsCheckCircle} from 'react-icons/bs';\n\n\nimport {deletenoticebyId, removenoticebyId} from '../../../../CommonApps/AllAPICalls';\n\n\n\n\nconst NoticeBox =(props)=>{\n\n\n\n\n\n     let bkgColor= props.read? \"#F0F0F0\": \"white\";\n\n     const noticeCreationTime=({datetime})=>{\n\n     let DatetimeLocalFull = new Date(datetime);\n\n\n     let DatetimeLocalFullStr= String(DatetimeLocalFull);\n\n     let dayStr=DatetimeLocalFullStr.split(\" \").at(0);\n     let dateStr=DatetimeLocalFullStr.split(\" \").at(2);\n     let month= DatetimeLocalFullStr.split(\" \").at(1);\n     let year = DatetimeLocalFullStr.split(\" \").at(3);\t    \n\n     let fullTimeLocal = DatetimeLocalFullStr.split(\" \").at(4);\n\n     let fullTimeLocalStr = String(fullTimeLocal);\n\n     let localTimeHour = fullTimeLocalStr.split(\":\").at(0);\n     let localTimeMin = fullTimeLocalStr.split(\":\").at(1);\n\n\n\n     let ampm =\"am\";\n\n\n     if (localTimeHour == 12) {\n        ampm = 'pm';\n     } else if (localTimeHour == 0) {\n        localTimeHour = 12;\n     } else if (localTimeHour > 12) {\n        localTimeHour -= 12;\n        ampm = 'pm';\n     }\n\n\n\n\n\n\n\n\n\n     let time=String(localTimeHour)+\":\"+String(localTimeMin)+String(ampm)+\", \"+String(dateStr)+\" \"+String(month)+\" \"+String(year);\n\n     return time;\n\n   }\n\n\n   let datetime= props.Notice.creationTime;\n\n\n\n   const deleteNoticeHandler=()=>{\n\n     let noticeId=props.Notice.id;\t   \n     deletenoticebyId({noticeId,props});\n\n\n   }\n\n\n   const removeNoticeHandler=()=>{\n     let noticeId=props.Notice.id;\n     console.log(\"remove handler\")\t   \n     removenoticebyId({noticeId, props});\n   }\t\n\n\n\n\n\n\n\n\n\n\n\nreturn (\n\n<div className={classes.noticeBox} style={{backgroundColor:bkgColor}}>\n\n\n<div className={classes.topSection}> \n\t<i className={classes.noticeID}>Notice ID: EDR-{props.Notice.id}</i>  \n\t<i className={classes.creationTime}> Created at: {noticeCreationTime({datetime})}</i>  \n\n</div>\n\n\n<div className={classes.midSection}> <div> <h2>  {props.Notice.noticeTitle}   </h2> <p>{props.Notice.noticeText}</p></div></div>\n\n<div className={classes.buttomSection}> \n\n        <div className={classes.noticeBoxButtonView}> <i>Posted by : \n\t{props.Notice.creater.firstname !==\"\"? props.Notice.creater.firstname+\" \"+props.Notice.creater.lastname : props.Notice.creater.username}\n\t</i>\n\t</div>\n\n\n        {props.read && \n\t\t<button type=\"button\" onClick={props.markAsUnread} className={classes.markAsUnreadButton}> \n\t\t    <BsCheckCircle className={classes.noticeReadIcon}/>\n\t\t</button>\n\t}\t\n\n\n\t{!props.read && <button type=\"button\" className={classes.noticeBoxButtonRead} onClick={props.markAsRead}> \n\n \t<i>mark as read</i>\n\n        </button>}\n\n   { props.userData !==null && Number(props.userData.id) === Number(props.Notice.creater.id) &&\n   <button className={classes.noticeBoxButtonHide} onClick={deleteNoticeHandler}> \n\t<i>delete</i>\n   </button>\n   }\n\n   { props.userData !==null && Number(props.userData.id) !== Number(props.Notice.creater.id) &&\n   <button className={classes.noticeBoxButtonHide} onClick={removeNoticeHandler}> \n        <i>remove</i>\n   </button>\n   }\n\n\n\n\n</div>\t\n\n\n\n\n</div>\n\n);\n\n}\n\n\nexport default NoticeBox;\n"]},"metadata":{},"sourceType":"module"}