{"ast":null,"code":"'use strict';\n/**\n * @property {number} [availableSend] - bps (undefined in Firefox)\n * @property {number} recv - bps\n * @property {number} [rtt] - s (undefined in Firefox)\n * @property {number} send - bps\n */\n\nvar IceReport =\n/** @class */\nfunction () {\n  /**\n   * Construct an {@link IceReport}.\n   * @param {number} send - bps\n   * @param {number} recv - bps\n   * @param {number} [rtt] - s\n   * @param {number} [availableSend] - bps\n   */\n  function IceReport(send, recv, availableSend, rtt) {\n    Object.defineProperties(this, {\n      availableSend: {\n        enumerable: true,\n        value: availableSend\n      },\n      recv: {\n        enumerable: true,\n        value: recv\n      },\n      rtt: {\n        enumerable: true,\n        value: rtt\n      },\n      send: {\n        enumerable: true,\n        value: send\n      }\n    });\n  }\n  /**\n   * @param {RTCStats} olderStats\n   * @param {RTCStats} newerStats\n   * @returns {IceReport}\n   */\n\n\n  IceReport.of = function (olderStats, newerStats) {\n    var secondsElapsed = (newerStats.timestamp - olderStats.timestamp) / 1000;\n    var deltaBytesSent = newerStats.bytesSent - olderStats.bytesSent;\n    var deltaBytesReceived = newerStats.bytesReceived - olderStats.bytesReceived;\n    var send = secondsElapsed > 0 ? deltaBytesSent / secondsElapsed * 8 : 0;\n    var recv = secondsElapsed > 0 ? deltaBytesReceived / secondsElapsed * 8 : 0;\n    var availableSend = newerStats.availableOutgoingBitrate,\n        rtt = newerStats.currentRoundTripTime;\n    return new IceReport(send, recv, availableSend, rtt);\n  };\n\n  return IceReport;\n}();\n\nmodule.exports = IceReport;","map":null,"metadata":{},"sourceType":"script"}