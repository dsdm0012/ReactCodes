{"ast":null,"code":"/* globals navigator */\n'use strict';\n/**\n * This function is very similar to <code>navigator.mediaDevices.getUserMedia</code>\n * except that if no MediaStreamConstraints are provided, then bot audio and video\n * are requested.\n * @function getUserMedia\n * @param {MediaStreamConstraints} [constraints={audio:true,video:true}] - the\n *   MediaStreamConstraints object specifying what kind of MediaStream to\n *   request from the browser (by default both audio and video)\n * @returns Promise<MediaStream>\n */\n\nfunction getUserMedia(constraints) {\n  if (typeof navigator === 'object' && typeof navigator.mediaDevices === 'object' && typeof navigator.mediaDevices.getUserMedia === 'function') {\n    constraints = constraints || {\n      audio: true,\n      video: true\n    };\n    return navigator.mediaDevices.getUserMedia(constraints);\n  }\n\n  return Promise.reject(new Error('getUserMedia is not supported'));\n}\n\nmodule.exports = getUserMedia;","map":null,"metadata":{},"sourceType":"script"}