{"ast":null,"code":"import axiosInstance from '../axios';\nimport { Logout } from './Logout';\nexport const getuser = ({\n  setData\n}) => {\n  axiosInstance.get().then(res => {\n    setData(data => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const putuser = ({\n  data,\n  formData\n}) => {\n  axiosInstance.put('', {\n    \"email\": data.email,\n    \"username\": data.username,\n    \"firstname\": formData.firstname,\n    \"lastname\": formData.lastname,\n    \"gender\": formData.gender,\n    \"role\": \"student\",\n    \"position\": formData.position,\n    \"dateofbirth\": formData.dateofbirth\n  }).then(res => {}).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getticket = ({\n  ticketId,\n  setData\n}) => {\n  axiosInstance.get(`tickets/${ticketId}/`).then(res => {\n    setData(data => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getalltickets = ({\n  setData\n}) => {\n  axiosInstance.get(`tickets/`).then(res => {\n    setData(data => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getuserbyId = ({\n  userId,\n  setUserData\n}) => {\n  axiosInstance.get(`/${userId}/`).then(res => {\n    setUserData(userData => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n\n    if (error.response.status === 404) {\n      console.log(\"here is the error\");\n    }\n  });\n};\nexport const getticketscategory = ({\n  setTicketType\n}) => {\n  axiosInstance.get(`tickets/category/`).then(res => {\n    setTicketType(data => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getcategorybyId = ({\n  ticketCategory,\n  setCatData\n}) => {\n  axiosInstance.get(`tickets/category/${ticketCategory}/`).then(res => {\n    setCatData(data => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const createticket = ({\n  formData,\n  data\n}) => {\n  axiosInstance.post(`tickets/`, {\n    \"title\": formData.title,\n    \"author\": data.id,\n    \"category\": formData.category,\n    \"excerpt\": formData.keywords,\n    \"content\": formData.description,\n    \"status\": \"closed\",\n    \"pstatus\": \"draft\",\n    \"priority\": formData.priority,\n    \"resolution\": \"unresolved\"\n  }).then(res => {}).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const postcomment = ({\n  ticketId,\n  userId,\n  comment\n}) => {\n  axiosInstance.post(`tickets/comments/`, {\n    \"ticketId\": ticketId,\n    \"commenter\": userId,\n    \"commenttext\": comment\n  }).then(res => {}).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getcomments = ({\n  setCommentObj,\n  ticketId\n}) => {\n  axiosInstance.get(`tickets/comments/${ticketId}/`).then(res => {\n    setCommentObj(commentObj => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getallusers = ({\n  setUsersData\n}) => {\n  axiosInstance.get(`/allusers/`).then(res => {\n    setUsersData(userData => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const postchatcomment = ({\n  groupId,\n  userId,\n  comment\n}) => {\n  axiosInstance.post(`chat/comments/`, {\n    \"groupId\": groupId,\n    \"commenter\": userId,\n    \"commenttext\": comment\n  }).then(res => {}).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getchatcomments = ({\n  setChatCommentObj,\n  groupId\n}) => {\n  axiosInstance.get(`chat/comments/${groupId}/`).then(res => {\n    setChatCommentObj(commentObj => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const createchatgroup = ({\n  groupname,\n  groupMembers\n}) => {\n  axiosInstance.post(`chat/groups/`, {\n    \"name\": groupname,\n    \"groupusers\": groupMembers\n  }).then(res => {}).catch(error => {\n    if (error.response.status === 400) {\n      alert(\"User is already added. Refresh the page and try again.\");\n    }\n\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getchatgroups = ({\n  getChatGroups\n}) => {\n  axiosInstance.get(`chat/groups/`).then(res => {\n    getChatGroups(chatGroups => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const createcourse = ({\n  formData,\n  data\n}) => {\n  axiosInstance.post(`course/names/`, {\n    \"teacher\": data.id,\n    \"courseShortName\": formData.courseShortName,\n    \"courseFullName\": formData.courseFullName,\n    \"courseGlobalCode\": \"321212\",\n    \"courseLocalCode\": formData.courseLocalCode,\n    \"courseStatus\": \"ongoing\",\n    \"courseStartDate\": formData.courseStartDate,\n    \"courseEndDate\": formData.courseEndDate,\n    \"designedFor\": formData.classname,\n    \"educationboard\": formData.educationboard,\n    \"subject\": formData.subject,\n    \"abouttheCourse\": formData.abouttheCourse,\n    \"instituteName\": formData.instituteName,\n    \"instituteCity\": \"BBSR\",\n    \"instituteCountry\": \"India\",\n    \"enrolledstudents\": [2],\n    \"enrolementrequests\": [2],\n    \"syllabus\": 1\n  }).then(res => {}).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getclassrank = ({\n  setClassRank\n}) => {\n  axiosInstance.get(`course/coursecategories/`).then(res => {\n    setClassRank(data => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getclassobjectbyId = ({\n  classId,\n  setClassObject\n}) => {\n  axiosInstance.get(`course/class/${classId}/`).then(res => {\n    setClassObject(data => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getsubjectsfromclassandboard = ({\n  classId,\n  boardId,\n  setSubjectsObject\n}) => {\n  axiosInstance.get(`course/subjects/${classId}/${boardId}`).then(res => {\n    setSubjectsObject(data => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getteachercourses = ({\n  teacherId,\n  setTeacherCourses\n}) => {\n  axiosInstance.get(`course/names/${teacherId}`).then(res => {\n    setTeacherCourses(courseData => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getcoursesbyglobalCode = ({\n  globalCode,\n  getCourseData\n}) => {\n  axiosInstance.get(`course/code/${globalCode}/`).then(res => {\n    getCourseData(courseData => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getcoursesbyCourseId = ({\n  courseId,\n  getCourseData\n}) => {\n  axiosInstance.get(`course/object/${courseId}/`).then(res => {\n    getCourseData(courseData => [res.data]);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getcoursesbyCourseIdArray = ({\n  courseId,\n  getDashboardCourses\n}) => {\n  axiosInstance.get(`course/object/${courseId}/`).then(res => {\n    getDashboardCourses(dashboardCourses => [...dashboardCourses, res.data]);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nvar c1 = {\n  \"id\": 10,\n  \"teacher\": 1,\n  \"courseShortName\": \"d\",\n  \"courseFullName\": \"d\",\n  \"courseGlobalCode\": \"100010\",\n  \"courseLocalCode\": \"d\",\n  \"courseStatus\": \"closed\",\n  \"courseStartDate\": \"2022-02-04\",\n  \"courseEndDate\": \"2022-02-05\",\n  \"designedFor\": \"Class-11\",\n  \"classsection\": \"A\",\n  \"educationboard\": \"CBSE\",\n  \"subject\": \"Physics\",\n  \"abouttheCourse\": \"d\",\n  \"instituteName\": \"d\",\n  \"instituteCity\": \"BBSR\",\n  \"instituteCountry\": \"India\",\n  \"enrolledstudents\": [2, 4],\n  \"enrolementrequests\": [2, 4],\n  \"noticearray\": [17, 6, 9, 10, 23, 25]\n};\nexport const Appenn = ({\n  courseId,\n  allCourses\n}) => {\n  axiosInstance.get(`course/object/${courseId}/`).then(() => allCourses.push({\n    \"bibhu\": 'hello baby'\n  }));\n};\n_c = Appenn;\nexport const getcoursesbyCourseIdSimpleArray = ({\n  courseId,\n  getCourses\n}) => {\n  axiosInstance.get(`course/object/${courseId}/`).then(res => {\n    getCourses(courses => [...courses, res.data]);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getcoursesbyglobalCodeArray = ({\n  globalCode,\n  getCourseData\n}) => {\n  axiosInstance.get(`course/code/${globalCode}/`).then(res => {\n    let newArray = res.data;\n    getCourseData(courseData => [...courseData, ...newArray]);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const putcourseuser = ({\n  data\n}) => {\n  axiosInstance.put('', {\n    \"email\": data.email,\n    \"username\": data.username,\n    \"firstname\": data.firstname,\n    \"lastname\": data.lastname,\n    \"gender\": data.gender,\n    \"role\": data.userype,\n    \"position\": data.position,\n    \"dateofbirth\": data.dateofbirth,\n    \"dashboardcourses\": data.dashboardcourses\n  }).then(res => {}).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const putdashboardcourses = ({\n  data\n}) => {\n  axiosInstance.put('dashboardcourses/', {\n    \"dashboardcourses\": data.dashboardcourses\n  }).then(res => {}).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const deletedashboardcourses = ({\n  dashboardcourses\n}) => {\n  axiosInstance.put('dashboardcourses/', {\n    \"dashboardcourses\": dashboardcourses\n  }).then(res => {}).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const putcourseenrollrequest = ({\n  courseId,\n  enrollmentcourseId\n}) => {\n  axiosInstance.put(`course/enrollrequest/${courseId}/`, {\n    \"enrolementrequests\": enrollmentcourseId\n  }).then(res => {}).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const putcourseenroll = ({\n  courseId,\n  enrolledstudents\n}) => {\n  axiosInstance.put(`course/enroll/${courseId}/`, {\n    \"enrolledstudents\": enrolledstudents\n  }).then(res => {\n    console.log(\"hello\", enrolledstudents);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const createnotice = ({\n  data,\n  formData,\n  selectedCourseIds\n}) => {\n  axiosInstance.post(`noticeboard/all/`, {\n    \"creater\": data.id,\n    \"noticeTitle\": formData.noticeTitle,\n    \"noticeText\": formData.noticeText,\n    \"postCourses\": selectedCourseIds,\n    \"noticefile\": null\n  }).then(res => {}).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getnotice = ({\n  getNoticeData\n}) => {\n  axiosInstance.get(`noticeboard/all/`).then(res => {\n    getNoticeData(noticeData => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getnoticebyId = ({\n  noticeid,\n  getNoticeData\n}) => {\n  axiosInstance.get(`noticeboard/all/${noticeid}`).then(res => {\n    let newNotice = res.data;\n    getNoticeData(courseData => [...courseData, newNotice]);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getenrolledstudents = ({\n  courseId,\n  getEnrolledData\n}) => {\n  axiosInstance.get(`course/enroll/${courseId}/`).then(res => {\n    getEnrolledData(enrolledData => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getsyllabusfromId = ({\n  syllabusId,\n  getSyllabusData\n}) => {\n  axiosInstance.get(`syllabus/names/${syllabusId}/`).then(res => {\n    getSyllabusData(syllabusData => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getchapterfromId = ({\n  chapterId,\n  getChapterData\n}) => {\n  axiosInstance.get(`syllabus/chapter/${chapterId}/`).then(res => {\n    getChapterData(chapterData => [...chapterData, res.data]);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getsectionfromId = ({\n  sectionId,\n  getSectionData\n}) => {\n  axiosInstance.get(`syllabus/section/${sectionId}/`).then(res => {\n    getSectionData(sectionData => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const gettopicfromId = ({\n  topicId,\n  getTopicData\n}) => {\n  axiosInstance.get(`syllabus/topic/${topicId}/`).then(res => {\n    getTopicData(topicData => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const putsectiondata = ({\n  sectionid,\n  topicData\n}) => {\n  axiosInstance.put(`syllabus/section/${sectionid}/`, {\n    \"id\": sectionid,\n    \"name\": \"Section-2\",\n    \"topics\": topicData\n  }).then(res => {\n    console.log(\"hhhhh---\", topicData);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const createnewsection = ({\n  sectionPostData\n}) => {\n  axiosInstance.post(`syllabus/section/`, {\n    \"name\": sectionPostData.name,\n    \"topics\": [],\n    \"chapterid\": sectionPostData.chapterid,\n    \"sectionnum\": 1\n  }).then(res => {\n    console.log(\"section added\");\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const deletesectiondata = ({\n  sectionid\n}) => {\n  axiosInstance.delete(`syllabus/section/${sectionid}/`, {}).then(res => {\n    console.log(\"deleted---\");\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const createnewchapter = ({\n  formData\n}) => {\n  axiosInstance.post(`syllabus/chapter/`, {\n    \"name\": formData.chapterTitle,\n    \"sections\": [],\n    \"chapternum\": formData.chapterNumber,\n    \"syllabusid\": formData.syllabusId\n  }).then(res => {\n    console.log(\"chapter added\", formData.syllabusId);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getchapternumbers = ({\n  setChapterNumbers\n}) => {\n  axiosInstance.get(`syllabus/chapternumber/`).then(res => {\n    setChapterNumbers(chapterNumbers => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const createnewclass = ({\n  formData\n}) => {\n  axiosInstance.post(`class/all/`, {\n    \"courseId\": null,\n    \"serialNo\": null,\n    \"classStatus\": \"scheduled\",\n    \"classdate\": \"2022-03-28\",\n    \"classtime\": null,\n    \"duration\": null,\n    \"meetingLink\": null,\n    \"roomNo\": null,\n    \"chapter\": null,\n    \"topics\": []\n  }).then(res => {\n    console.log(\"class added\");\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Appenn\");","map":{"version":3,"sources":["/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/CommonApps/AllAPICalls.js"],"names":["axiosInstance","Logout","getuser","setData","get","then","res","data","catch","error","response","status","putuser","formData","put","email","username","firstname","lastname","gender","position","dateofbirth","getticket","ticketId","getalltickets","getuserbyId","userId","setUserData","userData","console","log","getticketscategory","setTicketType","getcategorybyId","ticketCategory","setCatData","createticket","post","title","id","category","keywords","description","priority","postcomment","comment","getcomments","setCommentObj","commentObj","getallusers","setUsersData","postchatcomment","groupId","getchatcomments","setChatCommentObj","createchatgroup","groupname","groupMembers","alert","getchatgroups","getChatGroups","chatGroups","createcourse","courseShortName","courseFullName","courseLocalCode","courseStartDate","courseEndDate","classname","educationboard","subject","abouttheCourse","instituteName","getclassrank","setClassRank","getclassobjectbyId","classId","setClassObject","getsubjectsfromclassandboard","boardId","setSubjectsObject","getteachercourses","teacherId","setTeacherCourses","courseData","getcoursesbyglobalCode","globalCode","getCourseData","getcoursesbyCourseId","courseId","getcoursesbyCourseIdArray","getDashboardCourses","dashboardCourses","c1","Appenn","allCourses","push","getcoursesbyCourseIdSimpleArray","getCourses","courses","getcoursesbyglobalCodeArray","newArray","putcourseuser","userype","dashboardcourses","putdashboardcourses","deletedashboardcourses","putcourseenrollrequest","enrollmentcourseId","putcourseenroll","enrolledstudents","createnotice","selectedCourseIds","noticeTitle","noticeText","getnotice","getNoticeData","noticeData","getnoticebyId","noticeid","newNotice","getenrolledstudents","getEnrolledData","enrolledData","getsyllabusfromId","syllabusId","getSyllabusData","syllabusData","getchapterfromId","chapterId","getChapterData","chapterData","getsectionfromId","sectionId","getSectionData","sectionData","gettopicfromId","topicId","getTopicData","topicData","putsectiondata","sectionid","createnewsection","sectionPostData","name","chapterid","deletesectiondata","delete","createnewchapter","chapterTitle","chapterNumber","getchapternumbers","setChapterNumbers","chapterNumbers","createnewclass"],"mappings":"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","sourcesContent":["import axiosInstance from '../axios';\nimport {Logout} from './Logout';\n\n\nexport const getuser =({setData})=>{\n  \n\n\n    axiosInstance.get()\n                  .then((res) => {\n                        setData(data=>res.data);\n                   })\n                  .catch((error)=>{\n                      if(error.response.status===401){\n\t\t\t Logout();     \n                      }\n\n                   });\n\n}\n\n\n\nexport const putuser =({data, formData})=>{\n\n\n        axiosInstance.put('',{\n        \"email\":data.email,\n        \"username\":data.username,\n        \"firstname\": formData.firstname,\n        \"lastname\": formData.lastname,\n        \"gender\": formData.gender,\n        \"role\": \"student\",\n        \"position\":formData.position,\n        \"dateofbirth\": formData.dateofbirth,\n\n\n                        })\n                        .then((res) => {\n\n                          })\n\n                        .catch((error)=>{\n                             if(error.response.status===401){\n\t\t              Logout();\t\t     \n                            }\n\n                        });\n\n\n\n}\n\n\nexport const getticket =({ticketId, setData})=>{\n\n\n       axiosInstance.get(`tickets/${ticketId}/`).then((res) => {\n                        setData(data=>res.data);\n                })\n               .catch((error)=>{\n                     if(error.response.status===401){\n\t\t      Logout();\t     \n\n                      }\n\n\n                });\n\n\n\n\n}\n\n\nexport const getalltickets = ({setData})=>{\n\n\n   axiosInstance.get(`tickets/`).then((res) => {\n                        setData(data=>res.data);\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n\t\t     Logout();\t     \n\n                      }\n\n\n                });\n\n\n}\n\n\nexport const getuserbyId = ({userId, setUserData})=>{\n\n   axiosInstance.get(`/${userId}/`).then((res) => {\n                        setUserData(userData=>res.data);\n                })\n\t        .catch((error)=>{\n                     if(error.response.status===401){\n\t\t      Logout();\t     \n\n                      }\n\n                     if (error.response.status===404){console.log(\"here is the error\");}\n\n\n\n                });\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport const getticketscategory = ({setTicketType})=>{\n\n\n   axiosInstance.get(`tickets/category/`).then((res) => {\n                        setTicketType(data=>res.data);\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                     Logout();\n\n                      }\n\n\n                });\n\n\n}\n\n\nexport const getcategorybyId = ({ticketCategory, setCatData})=>{\n\n\n   axiosInstance.get(`tickets/category/${ticketCategory}/`).then((res) => {\n                        setCatData(data=>res.data);\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                     Logout();\n\n                      }\n\n\n                });\n\n\n}\n\n\n\nexport const createticket = ({formData,data})=>{\n\n     axiosInstance\n        .post(`tickets/`,{\n\n    \"title\": formData.title,\n    \"author\": data.id,\n    \"category\": formData.category,\n    \"excerpt\": formData.keywords,\n    \"content\": formData.description,\n    \"status\": \"closed\",\n    \"pstatus\": \"draft\",\n    \"priority\": formData.priority,\n    \"resolution\": \"unresolved\",\n\n\n                        })\n                        .then((res) => {\n                })\n         .catch((error)=>{\n                     if(error.response.status===401){\n                     Logout();\n\n                      }\n\n\n                });\n\n}\n\nexport const postcomment = ({ticketId, userId, comment})=>{\n\n\n  axiosInstance\n        .post(`tickets/comments/`,{           \n        \"ticketId\": ticketId,\n        \"commenter\": userId,\n        \"commenttext\": comment,\n\n                        })\n                        .then((res) => {\n                })\n         .catch((error)=>{\n                     if(error.response.status===401){\n                     Logout();\n\n                      }\n\n\n                });\n\n}\n\n\n\n\n\nexport const getcomments = ({setCommentObj,ticketId})=>{\n\n     axiosInstance.get(`tickets/comments/${ticketId}/`).then((res) => {\n                        setCommentObj(commentObj=>res.data);\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                     Logout();\n\n                      }\n\n\n                });\n\n}\n\n\n\nexport const getallusers = ({ setUsersData})=>{\n\n   axiosInstance.get(`/allusers/`).then((res) => {\n                        setUsersData(userData=>res.data);\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                      Logout();\n\n                      }\n\n\n                });\n\n}\n\n\n\n\nexport const postchatcomment = ({groupId, userId, comment})=>{\n\n\n  axiosInstance\n        .post(`chat/comments/`,{\n        \"groupId\": groupId,\n        \"commenter\": userId,\n        \"commenttext\": comment,\n\n                        })\n                        .then((res) => {\n                })\n         .catch((error)=>{\n                     if(error.response.status===401){\n                     Logout();\n\n                      }\n\n\n                });\n\n}\n\n\n\nexport const getchatcomments = ({setChatCommentObj,groupId})=>{\n\n     axiosInstance.get(`chat/comments/${groupId}/`).then((res) => {\n                        setChatCommentObj(commentObj=>res.data);\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                     Logout();\n\n                      }\n\n\n                });\n\n}\n\n\n\n\n\n\nexport const createchatgroup = ({groupname,groupMembers})=>{\n\n\n  axiosInstance\n        .post(`chat/groups/`,\n\n               {\n                  \"name\": groupname,\n\t\t   \"groupusers\": groupMembers,    \n               }\n\n\n\n\t           )\n                        .then((res) => {\n                })\n         .catch((error)=>{\n                    if(error.response.status===400){alert(\"User is already added. Refresh the page and try again.\");}\n\n                     if(error.response.status===401){\n                     Logout();\n\n                      }\n\n\n                });\n\n}\n\n\n\n\nexport const getchatgroups = ({getChatGroups})=>{\n\n\n    axiosInstance.get(`chat/groups/`)\n\n\n                        .then((res) => {\n\n                    getChatGroups(chatGroups=>res.data);\n\n                })\n         .catch((error)=>{\n\n                     if(error.response.status===401){\n                     Logout();\n\n                      }\n\n\n                });\n\n}\n\n\n\n\n\n\nexport const createcourse = ({formData,data})=>{\n\n     axiosInstance\n        .post(`course/names/`,{\n\n\n        \"teacher\": data.id,\n        \"courseShortName\": formData.courseShortName,\n        \"courseFullName\": formData.courseFullName,\n        \"courseGlobalCode\": \"321212\",\n        \"courseLocalCode\": formData.courseLocalCode,\n        \"courseStatus\": \"ongoing\",\n        \"courseStartDate\": formData.courseStartDate,\n        \"courseEndDate\": formData.courseEndDate,\n        \"designedFor\": formData.classname,\n\t\"educationboard\": formData.educationboard,\t\n        \"subject\": formData.subject,\n        \"abouttheCourse\": formData.abouttheCourse,\n        \"instituteName\": formData.instituteName,\n        \"instituteCity\": \"BBSR\",\n        \"instituteCountry\": \"India\",\n        \"enrolledstudents\": [\n            2\n        ],\n        \"enrolementrequests\": [\n            2\n        ],\n\t\"syllabus\": 1\t\n\n\n\n\n                        })\n                        .then((res) => {\n                })\n         .catch((error)=>{\n                     if(error.response.status===401){\n                     Logout();\n\n                      }\n\n\n                });\n\n}\n\n\n\nexport const getclassrank = ({setClassRank})=>{\n\n\n   axiosInstance.get(`course/coursecategories/`).then((res) => {\n                        setClassRank(data=>res.data);\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                     Logout();\n\n                      }\n\n\n                });\n\n\n}\n\n\n\nexport const getclassobjectbyId = ({classId, setClassObject})=>{\n\n   axiosInstance.get(`course/class/${classId}/`).then((res) => {\n                        setClassObject(data=>res.data);\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                     Logout();\n\n                      }\n                });\n}\n\n\n\n\nexport const getsubjectsfromclassandboard = ({classId, boardId ,setSubjectsObject}) =>{\n\n\naxiosInstance.get(`course/subjects/${classId}/${boardId}`).then((res) => {\n                        setSubjectsObject(data=>res.data);\n\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                     Logout();\n\n                      }\n                });\n\n\n\n\n\n\n\n}\n\n\n\n\n\nexport const getteachercourses = ({ teacherId, setTeacherCourses})=>{\n\n   axiosInstance.get(`course/names/${teacherId}`).then((res) => {\n                        setTeacherCourses(courseData=>res.data);\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                      Logout();\n\n                      }\n\n\n                });\n\n}\n\n\n\n\nexport const getcoursesbyglobalCode = ({ globalCode, getCourseData})=>{\n\n   axiosInstance.get(`course/code/${globalCode}/`).then((res) => {\n                        getCourseData(courseData=>res.data);\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                      Logout();\n\n                      }\n\n\n                });\n\n}\n\n\n\n\nexport const getcoursesbyCourseId = ({ courseId, getCourseData})=>{\n\n   axiosInstance.get(`course/object/${courseId}/`).then((res) => {\n                        getCourseData(courseData=>[res.data]);\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                      Logout();\n\n                      }\n\n\n                });\n\n}\n\n\n\n\n\nexport const getcoursesbyCourseIdArray = ({ courseId, getDashboardCourses})=>{\n\n   axiosInstance.get(`course/object/${courseId}/`).then((res) => {\n                        getDashboardCourses(dashboardCourses=>[...dashboardCourses,res.data]);\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                      Logout();\n\n                      }\n\n\n                });\n\n}\n\n\n\n\nvar c1={\n    \"id\": 10,\n    \"teacher\": 1,\n    \"courseShortName\": \"d\",\n    \"courseFullName\": \"d\",\n    \"courseGlobalCode\": \"100010\",\n    \"courseLocalCode\": \"d\",\n    \"courseStatus\": \"closed\",\n    \"courseStartDate\": \"2022-02-04\",\n    \"courseEndDate\": \"2022-02-05\",\n    \"designedFor\": \"Class-11\",\n    \"classsection\": \"A\",\n    \"educationboard\": \"CBSE\",\n    \"subject\": \"Physics\",\n    \"abouttheCourse\": \"d\",\n    \"instituteName\": \"d\",\n    \"instituteCity\": \"BBSR\",\n    \"instituteCountry\": \"India\",\n    \"enrolledstudents\": [\n        2,\n        4\n    ],\n    \"enrolementrequests\": [\n        2,\n        4\n    ],\n    \"noticearray\": [\n        17,\n        6,\n        9,\n        10,\n        23,\n        25\n    ]\n}\n\n\n\n\nexport const Appenn=({courseId, allCourses})=>{\n\n  axiosInstance.get(`course/object/${courseId}/`).then(()=>(\n    allCourses.push({\"bibhu\": 'hello baby'})\n    )\n  );\n\n }\n\n\n\n\n\n\n\n\nexport const getcoursesbyCourseIdSimpleArray = ({ courseId, getCourses})=>{\n\n   axiosInstance.get(`course/object/${courseId}/`).then((res) => {\n\t              getCourses(courses=>[...courses,res.data]);         \n\n                    }).catch((error)=>{\n                     if(error.response.status===401){\n                      Logout();\n\n                      }\n\n\n                });\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport const getcoursesbyglobalCodeArray = ({ globalCode, getCourseData})=>{\n\n   axiosInstance.get(`course/code/${globalCode}/`).then((res) => {\n               let newArray=res.data;\n               getCourseData(courseData => [...courseData, ...newArray]);\n\n\n\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                      Logout();\n\n                      }\n\n\n                });\n\n\n}\n\n\n\n\nexport const putcourseuser =({data})=>{\n\n\n        axiosInstance.put('',{\n        \"email\":data.email,\n        \"username\":data.username,\n        \"firstname\": data.firstname,\n        \"lastname\": data.lastname,\n        \"gender\": data.gender,\n        \"role\": data.userype,\n        \"position\":data.position,\n        \"dateofbirth\": data.dateofbirth,\n\t\"dashboardcourses\":data.dashboardcourses,\t\n\n\n                        })\n                        .then((res) => {\n\n\n                          })\n\n                        .catch((error)=>{\n                             if(error.response.status===401){\n                              Logout();\n                            }\n\n                        });\n}\n\n\n\n\n\n\n\nexport const putdashboardcourses =({data})=>{\n\n\n        axiosInstance.put('dashboardcourses/',{\n        \"dashboardcourses\":data.dashboardcourses,\n\n\n                        })\n                        .then((res) => {\n\n\n                          })\n\n                        .catch((error)=>{\n                             if(error.response.status===401){\n                              Logout();\n                            }\n\n                        });\n}\n\n\n\n\n\n\nexport const deletedashboardcourses =({dashboardcourses})=>{\n\n\n        axiosInstance.put('dashboardcourses/',{\n        \"dashboardcourses\":dashboardcourses,\n\n\n                        })\n                        .then((res) => {\n\n\n                          })\n\n                        .catch((error)=>{\n                             if(error.response.status===401){\n                              Logout();\n                            }\n\n                        });\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport const putcourseenrollrequest =({courseId, enrollmentcourseId})=>{\n\n\n        axiosInstance.put(`course/enrollrequest/${courseId}/`,{\n        \"enrolementrequests\":enrollmentcourseId,\n\n\t})\n                        .then((res) => {\n\n\n                          })\n\n                        .catch((error)=>{\n                             if(error.response.status===401){\n                              Logout();\n                            }\n\n                        });\n\n\n\n}\n\n\nexport const putcourseenroll =({courseId, enrolledstudents})=>{\n\n\n        axiosInstance.put(`course/enroll/${courseId}/`,{\n        \"enrolledstudents\":enrolledstudents,\n\n        })\n                        .then((res) => {\n                          console.log(\"hello\", enrolledstudents);               \n\n                          })\n\n                        .catch((error)=>{\n                             if(error.response.status===401){\n                              Logout();\n                            }\n\n                        });\n\n\n\n}\n\n\n\n\n\n\nexport const createnotice = ({data, formData, selectedCourseIds})=>{\n\n     axiosInstance\n        .post(`noticeboard/all/`,{\n\n\n\t\t\"creater\": data.id,\n                \"noticeTitle\": formData.noticeTitle,\n                \"noticeText\": formData.noticeText,\n                \"postCourses\": selectedCourseIds,\n                \"noticefile\": null\n\n\n\n\n\n\n\n\n\n\t      })\n                        .then((res) => {\n                })\n         .catch((error)=>{\n                     if(error.response.status===401){\n                     Logout();\n\n                      }\n\n\n                });\n\n}\n\n\n\n\n\n\n\n\nexport const getnotice = ({getNoticeData})=>{\n\n   axiosInstance.get(`noticeboard/all/`).then((res) => {\n               \n\t     getNoticeData(noticeData => res.data);\n\n\n\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                      Logout();\n\n                      }\n\n\n                });\n\n}\n\n\n\n\n\n\n\n\n\n\n\nexport const getnoticebyId = ({noticeid, getNoticeData})=>{\n\n   axiosInstance.get(`noticeboard/all/${noticeid}`).then((res) => {\n\n               let newNotice=res.data;\n               getNoticeData(courseData => [...courseData, newNotice]);\n\n\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                      Logout();\n\n                      }\n\n\n                });\n\n}\n\n\n\n\n\n\n\nexport const getenrolledstudents = ({courseId, getEnrolledData})=>{\n\n   axiosInstance.get(`course/enroll/${courseId}/`).then((res) => {\n\n             getEnrolledData(enrolledData => res.data);\n\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                      Logout();\n\n                      }\n\n\n                });\n\n}\n\n\n\n\n\nexport const getsyllabusfromId = ({syllabusId, getSyllabusData})=>{\n\n\naxiosInstance.get(`syllabus/names/${syllabusId}/`).then((res) => {\n\n             getSyllabusData(syllabusData => res.data);\n\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                      Logout();\n\n                      }\n\n\n                });\t\t\n\n}\n\n\n\n\n\n\n\nexport const getchapterfromId = ({chapterId, getChapterData})=>{\n\n\naxiosInstance.get(`syllabus/chapter/${chapterId}/`).then((res) => {\n\n             getChapterData(chapterData => [...chapterData, res.data]);\n\n\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                      Logout();\n\n                      }\n\n\n                });\n\n}\n\n\n\n\n\n\n\nexport const getsectionfromId = ({sectionId, getSectionData})=>{\n\n\naxiosInstance.get(`syllabus/section/${sectionId}/`).then((res) => {\n\n             getSectionData(sectionData => res.data);\n\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                      Logout();\n\n                      }\n\n                });\n\n}\n\n\n\nexport const gettopicfromId = ({topicId, getTopicData})=>{\n\n\naxiosInstance.get(`syllabus/topic/${topicId}/`).then((res) => {\n\n             getTopicData(topicData => res.data);\n\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                      Logout();\n\n                      }\n                });\n\n}\n\n\n\n\n\n\n\n\nexport const putsectiondata =({sectionid, topicData})=>{\n\n\n        axiosInstance.put(`syllabus/section/${sectionid}/`,{\n       \n          \"id\": sectionid,\n          \"name\": \"Section-2\",\n          \"topics\": topicData,\n\n\n                        })\n                        .then((res) => {\n                        console.log(\"hhhhh---\",topicData);\n\n                          })\n\n                        .catch((error)=>{\n                             if(error.response.status===401){\n                              Logout();\n                            }\n\n                        });\n\n\n}\n\n\nexport const createnewsection =({ sectionPostData })=>{\n\n\n        axiosInstance.post(`syllabus/section/`,{\n\n         \n          \"name\": sectionPostData.name,\n          \"topics\": [],\n\t  \"chapterid\":sectionPostData.chapterid,\n\t  \"sectionnum\":1\n\n\n                        })\n                        .then((res) => {\n                        \n\t\t\t\tconsole.log(\"section added\");\n\n                          })\n\n                        .catch((error)=>{\n                             if(error.response.status===401){\n                              Logout();\n                            }\n\n                        });\n\n\n}\n\n\n\n\n\n\n\n\nexport const deletesectiondata =({sectionid })=>{\n\n\n        axiosInstance.delete(`syllabus/section/${sectionid}/`,{\n\n\n                        })\n                        .then((res) => {\n                        console.log(\"deleted---\");\n\n                          })\n\n                        .catch((error)=>{\n                             if(error.response.status===401){\n                              Logout();\n                            }\n\n                        });\n\n\n}\n\n\n\nexport const createnewchapter =({ formData })=>{\n\n\n        axiosInstance.post(`syllabus/chapter/`,{\n\n            \n              \"name\": formData.chapterTitle,\n              \"sections\": [],\n              \"chapternum\": formData.chapterNumber,\n\t       \"syllabusid\":formData.syllabusId\t\n            \n\n\n                        })\n                        .then((res) => {\n\n                                console.log(\"chapter added\", formData.syllabusId);\n\n                          })\n\n                        .catch((error)=>{\n                             if(error.response.status===401){\n                              Logout();\n                            }\n\n                        });\n\n}\n\n\n\n\nexport const getchapternumbers = ({setChapterNumbers})=>{\n\n\naxiosInstance.get(`syllabus/chapternumber/`).then((res) => {\n\n             setChapterNumbers(chapterNumbers => res.data);\n\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                      Logout();\n\n                      }\n                });\n\n}\n\n\n\n\nexport const createnewclass =({ formData })=>{\n\n\n        axiosInstance.post(`class/all/`,{\n\n        \"courseId\": null,\n        \"serialNo\": null,\n        \"classStatus\": \"scheduled\",\n        \"classdate\": \"2022-03-28\",\n        \"classtime\": null,\n        \"duration\": null,\n        \"meetingLink\": null,\n        \"roomNo\": null,\n        \"chapter\": null,\n        \"topics\": []\n\n\n\n\n                        })\n                        .then((res) => {\n\n                                console.log(\"class added\");\n\n                          })\n\n                        .catch((error)=>{\n                             if(error.response.status===401){\n                              Logout();\n                            }\n\n                        });\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}