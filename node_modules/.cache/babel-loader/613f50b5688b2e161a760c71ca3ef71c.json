{"ast":null,"code":"import React,{useRef,useEffect}from\"react\";import classes from\"./ChatScreen.module.css\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ChatScreen=function ChatScreen(props){var messages=props.messages;var messagesEndRef=useRef(null);var scrollToBottom=function scrollToBottom(){var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:\"smooth\"});};useEffect(function(){scrollToBottom();},[messages]);return/*#__PURE__*/_jsxs(\"div\",{className:classes.chatScreen,children:[/*#__PURE__*/_jsx(\"div\",{className:classes.dummyDiv1,children:\"  Bibhuprasad   \"}),props.commentObj.map(function(comment,index){return/*#__PURE__*/_jsxs(\"div\",{className:classes.comment,children:[comment.commenter===props.currentUser&&/*#__PURE__*/_jsx(\"i\",{className:classes.commentText,children:comment.commenttext}),comment.commenter!==props.currentUser&&/*#__PURE__*/_jsx(\"i\",{className:classes.commentText,style:{backgroundColor:'white',float:'left',marginLeft:'100px',boxShadow:'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'},children:comment.commenttext})]},index);}),messages.map(function(message,index){var allMsg=message.split(\" \");var userId=allMsg[allMsg.length-2];var displayMsg1=allMsg.pop();var displayMsg2=allMsg.pop();return/*#__PURE__*/_jsxs(\"div\",{className:classes.comment,children:[Number(userId)===props.currentUser&&/*#__PURE__*/_jsxs(\"i\",{className:classes.commentText,children:[\"  \",allMsg.join(\" \"),\" \"]}),Number(userId)!==props.currentUser&&/*#__PURE__*/_jsxs(\"i\",{className:classes.commentText,style:{backgroundColor:'white',float:'left',marginLeft:'100px',boxShadow:'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'},children:[\"  \",allMsg.join(\" \"),\" \"]})]},index);}),/*#__PURE__*/_jsx(\"div\",{className:classes.dummyDiv,ref:messagesEndRef,children:\"   \"})]});};export default ChatScreen;","map":{"version":3,"sources":["/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/MainApps/Messages/VATChat/ChatWindow/ChatScreen.js"],"names":["React","useRef","useEffect","classes","ChatScreen","props","messages","messagesEndRef","scrollToBottom","current","scrollIntoView","behavior","chatScreen","dummyDiv1","commentObj","map","comment","index","commenter","currentUser","commentText","commenttext","backgroundColor","float","marginLeft","boxShadow","message","allMsg","split","userId","length","displayMsg1","pop","displayMsg2","Number","join","dummyDiv"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAcC,MAAd,CAAqBC,SAArB,KAAqC,OAArC,CACA,MAAOC,CAAAA,OAAP,KAAoB,yBAApB,C,wFAGA,GAAMC,CAAAA,UAAU,CAAC,QAAXA,CAAAA,UAAW,CAACC,KAAD,CAAS,CAG1B,GAAMC,CAAAA,QAAQ,CAACD,KAAK,CAACC,QAArB,CAEA,GAAMC,CAAAA,cAAc,CAAGN,MAAM,CAAC,IAAD,CAA7B,CAEA,GAAMO,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,2BACzB,uBAAAD,cAAc,CAACE,OAAf,sEAAwBC,cAAxB,CAAuC,CAAEC,QAAQ,CAAE,QAAZ,CAAvC,EACD,CAFH,CAMAT,SAAS,CAAC,UAAM,CACZM,cAAc,GACf,CAFM,CAEJ,CAACF,QAAD,CAFI,CAAT,CAOA,mBAEA,aAAK,SAAS,CAAEH,OAAO,CAACS,UAAxB,wBAGK,YAAK,SAAS,CAAET,OAAO,CAACU,SAAxB,8BAHL,CAMOR,KAAK,CAACS,UAAN,CAAiBC,GAAjB,CAAqB,SAACC,OAAD,CAASC,KAAT,CAAiB,CAE9B,mBAAO,aAAkB,SAAS,CAAEd,OAAO,CAACa,OAArC,WAEbA,OAAO,CAACE,SAAR,GAAsBb,KAAK,CAACc,WAA5B,eACD,UAAG,SAAS,CAAEhB,OAAO,CAACiB,WAAtB,UAAoCJ,OAAO,CAACK,WAA5C,EAHc,CAMCL,OAAO,CAACE,SAAR,GAAsBb,KAAK,CAACc,WAA5B,eAEA,UAAG,SAAS,CAAEhB,OAAO,CAACiB,WAAtB,CAAmC,KAAK,CAAE,CAACE,eAAe,CAAE,OAAlB,CAA2BC,KAAK,CAAE,MAAlC,CAAyCC,UAAU,CAAE,OAArD,CAA6DC,SAAS,CAAE,uCAAxE,CAA1C,UAA6JT,OAAO,CAACK,WAArK,EARD,GAAWJ,KAAX,CAAP,CAiBH,CAnBL,CANP,CAkCWX,QAAQ,CAACS,GAAT,CAAa,SAACW,OAAD,CAAST,KAAT,CAAiB,CAE1B,GAAIU,CAAAA,MAAM,CAAGD,OAAO,CAACE,KAAR,CAAc,GAAd,CAAb,CAEP,GAAIC,CAAAA,MAAM,CAAGF,MAAM,CAACA,MAAM,CAACG,MAAP,CAAc,CAAf,CAAnB,CAEA,GAAIC,CAAAA,WAAW,CAAGJ,MAAM,CAACK,GAAP,EAAlB,CACA,GAAIC,CAAAA,WAAW,CAAGN,MAAM,CAACK,GAAP,EAAlB,CAEO,mBAAO,aAAiB,SAAS,CAAE7B,OAAO,CAACa,OAApC,WAGDkB,MAAM,CAACL,MAAD,CAAN,GAAmBxB,KAAK,CAACc,WAAzB,eAEK,WAAG,SAAS,CAAEhB,OAAO,CAACiB,WAAtB,gBAAsCO,MAAM,CAACQ,IAAP,CAAY,GAAZ,CAAtC,OALJ,CAUAD,MAAM,CAACL,MAAD,CAAN,GAAmBxB,KAAK,CAACc,WAAzB,eAEI,WAAG,SAAS,CAAEhB,OAAO,CAACiB,WAAtB,CAAmC,KAAK,CAAE,CAACE,eAAe,CAAE,OAAlB,CAA2BC,KAAK,CAAE,MAAlC,CAAyCC,UAAU,CAAE,OAArD,CAA6DC,SAAS,CAAE,uCAAxE,CAA1C,gBAA+JE,MAAM,CAACQ,IAAP,CAAY,GAAZ,CAA/J,OAZJ,GAAUlB,KAAV,CAAP,CAuBH,CAhCD,CAlCX,cAyEK,YAAK,SAAS,CAAEd,OAAO,CAACiC,QAAxB,CAAkC,GAAG,CAAE7B,cAAvC,iBAzEL,GAFA,CAyFC,CA7GD,CAgHA,cAAeH,CAAAA,UAAf","sourcesContent":["import React,{useRef,useEffect} from \"react\";\nimport classes from \"./ChatScreen.module.css\";\n\n\nconst ChatScreen=(props)=>{\n\n\nconst messages=props.messages;\n\nconst messagesEndRef = useRef(null);\n\nconst scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" })\n  }\n\n\n\nuseEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n\n\n\nreturn(\n\n<div className={classes.chatScreen}>\n\n\n     <div className={classes.dummyDiv1}>  Bibhuprasad   </div>\n\n\n      {props.commentObj.map((comment,index)=>{\n\n               return <div  key={index} className={classes.comment} >  \n\t\t      \n\t\t      {comment.commenter === props.currentUser &&\n\t\t      <i className={classes.commentText}>{comment.commenttext}</i> \n                      }\n\n                      {comment.commenter !== props.currentUser &&\n\n                       <i className={classes.commentText} style={{backgroundColor: 'white', float: 'left',marginLeft: '100px',boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'}}>{comment.commenttext}</i>\n\n                      }\n\n\t\t      </div>\n                \n\n\n\n           }\n\n        )}\n\n\n\n\n\n\n         { messages.map((message,index)=>{\n\n               let allMsg = message.split(\" \");\n\t\t \n\t       let userId = allMsg[allMsg.length-2];\t\n\n\t       let displayMsg1 = allMsg.pop();\n\t       let displayMsg2 = allMsg.pop(); \n\n               return <div key={index} className={classes.comment}>   \n\n\n                    {Number(userId) === props.currentUser &&\n\n                          <i className={classes.commentText}>  {allMsg.join(\" \")} </i>\n\n                     }\n\n\n                     {Number(userId) !== props.currentUser &&\n\n                          <i className={classes.commentText} style={{backgroundColor: 'white', float: 'left',marginLeft: '100px',boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'}}>  {allMsg.join(\" \")} </i>\n\n                     }\n\n\n\n\n\n\n\t\t      </div>\n\n           }\n\n        ) \n      } \n   \n\n\n     <div className={classes.dummyDiv} ref={messagesEndRef}>   </div>\t\n\n\n\n\n\n\n\n\n\n</div>\t\n);\n\n\n}\n\n\nexport default ChatScreen;\n"]},"metadata":{},"sourceType":"module"}