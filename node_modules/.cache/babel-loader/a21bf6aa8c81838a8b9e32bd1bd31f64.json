{"ast":null,"code":"var _jsxFileName = \"/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom'; //import logo from './logo.svg';\n\nimport './App.css';\nimport Header from './components/Header/Header';\nimport SideNavBar from './components/SideNavBar/SideNavBar';\nimport SideToolBar from './components/SideNavBar/SideToolBar';\nimport UserProfile from './MainApps/Account/UserProfile/UserProfile';\nimport Settings from './MainApps/Account/Settings/Settings';\nimport Courses from './MainApps/Account/Courses/Courses'; //Import Applications\n\nimport General from './MainApps/Dashboard/General/General';\nimport Subject from './MainApps/Dashboard/Subject/Subject';\nimport News from './MainApps/Dashboard/News/News';\nimport VATChat from './MainApps/Messages/VATChat/VATChat';\nimport EMail from './MainApps/Messages/EMail/EMail';\nimport Tickets from './MainApps/Messages/Tickets/Tickets';\nimport Overview from './MainApps/Class/Overview/Overview';\nimport Detail from './MainApps/Class/Detail/Detail';\nimport Specifics from './MainApps/Class/Specifics/Specifics';\nimport Login from './CommonApps/Login';\nimport axiosInstance from './axios';\nimport { getcoursesbyCourseId, getuser, getcoursesbyglobalCodeArray, getcoursesbyCourseIdArray, getcoursesbyCourseIdSimpleArray } from './CommonApps/AllAPICalls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  console.log(\"Page reredering-----------------\");\n  const [rerender, setRerender] = useState(false);\n\n  const rerenderHandler = () => {\n    setRerender(!rerender);\n  };\n\n  const [sideNavBarWidth, setWidth] = useState('var(--sideNavBarWidth)');\n  const [contract, setContract] = useState(true);\n\n  const expandHandler = () => {\n    contract && setWidth('var(--sideNavBarWidthOnContract)');\n    !contract && setWidth('var(--sideNavBarWidth)');\n    setContract(!contract);\n  };\n\n  const [dashboardMounted, setDashboardMounted] = useState(false);\n  const [messagesMounted, setMessagesMounted] = useState(false);\n  const [classMounted, setClassMounted] = useState(false);\n  const [tasksMounted, setTasksMounted] = useState(false);\n  const [booksMounted, setBooksMounted] = useState(false);\n  const [examMounted, setExamMounted] = useState(false);\n  const [classmatesMounted, setClassmatesMounted] = useState(false);\n  const [teacherMounted, setTeacherMounted] = useState(false);\n  const [prepareMounted, setProgressMounted] = useState(false);\n  const [analyticsMounted, setAnalticsMounted] = useState(false);\n  const [achievementsMounted, setAchievementsMounted] = useState(false);\n  const [goalsMounted, setGoalsMounted] = useState(false);\n  const [calenderMounted, setCalenderMounted] = useState(false);\n  const [diaryMounted, setDiaryMounted] = useState(false);\n  const [helpcenterMounted, setHelpCenterMounted] = useState(false);\n  const [selectedCourse, getCourseData] = useState([]); //const [courseData, getCourseData] = useState([]);\n\n  let selectedCourseId = localStorage.getItem('preferredCourseId');\n  useEffect(() => {\n    console.log(\"useEffect-1\");\n    let courseId = selectedCourseId;\n    getcoursesbyCourseId({\n      courseId,\n      getCourseData\n    });\n    return () => {\n      getCourseData(selectedCourse => []);\n    };\n  }, [selectedCourseId, rerender]);\n  const [data, setData] = useState({\n    \"dashboardcourses\": []\n  });\n  /*\t\n   useEffect(()=>{\n  console.log(\"useEffect-2\");   \n        getuser({setData});\n    },[rerender])\n  */\n\n  const [dashboardCourses, getDashboardCourses] = useState([]);\n  /*\n   \n   useEffect(()=>{\n   \t     \n      console.log(\"useEffect-3\");\n      let courseIds = data.dashboardcourses;        \n     let allCourses=[];\t  \n     getDashboardCourses(dashboardCourses=>[]);\t     \n     courseIds.map((courseId, index)=>{\n         if(courseId !==0){\n     // console.log(\"courseIds............... \",courseId);\t   \n             getcoursesbyCourseIdArray({courseId, getDashboardCourses});\n             //getcoursesbyCourseIdSimpleArray({courseId, allCourses});\n          }\n     } );\n       return ()=>{\n  // console.log(\"clear fucntion called\");    \n         getDashboardCourses(dashboardCourses=>[]);\n     }\n  },[data.dashboardcourses, rerender, getDashboardCourses ]);\n  \n  */\n  //console.log(\"dashboard courses: \", dashboardCourses);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"edrapp\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"SJ/SWgH1qsNVjRDEycupJ3kpPeM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/App.js"],"names":["React","useState","useEffect","Route","Switch","Header","SideNavBar","SideToolBar","UserProfile","Settings","Courses","General","Subject","News","VATChat","EMail","Tickets","Overview","Detail","Specifics","Login","axiosInstance","getcoursesbyCourseId","getuser","getcoursesbyglobalCodeArray","getcoursesbyCourseIdArray","getcoursesbyCourseIdSimpleArray","App","console","log","rerender","setRerender","rerenderHandler","sideNavBarWidth","setWidth","contract","setContract","expandHandler","dashboardMounted","setDashboardMounted","messagesMounted","setMessagesMounted","classMounted","setClassMounted","tasksMounted","setTasksMounted","booksMounted","setBooksMounted","examMounted","setExamMounted","classmatesMounted","setClassmatesMounted","teacherMounted","setTeacherMounted","prepareMounted","setProgressMounted","analyticsMounted","setAnalticsMounted","achievementsMounted","setAchievementsMounted","goalsMounted","setGoalsMounted","calenderMounted","setCalenderMounted","diaryMounted","setDiaryMounted","helpcenterMounted","setHelpCenterMounted","selectedCourse","getCourseData","selectedCourseId","localStorage","getItem","courseId","data","setData","dashboardCourses","getDashboardCourses"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport {Route,Switch} from 'react-router-dom';\n//import logo from './logo.svg';\n\nimport  './App.css';\nimport Header from './components/Header/Header';\n\nimport SideNavBar from './components/SideNavBar/SideNavBar';\nimport SideToolBar from './components/SideNavBar/SideToolBar';\n\nimport UserProfile from './MainApps/Account/UserProfile/UserProfile';\nimport Settings from './MainApps/Account/Settings/Settings';\nimport Courses from './MainApps/Account/Courses/Courses';\n\n\n//Import Applications\nimport General from './MainApps/Dashboard/General/General';\nimport Subject from './MainApps/Dashboard/Subject/Subject';\nimport News from './MainApps/Dashboard/News/News';\n\n\n\n\nimport VATChat from './MainApps/Messages/VATChat/VATChat';\nimport EMail from './MainApps/Messages/EMail/EMail';\nimport Tickets from './MainApps/Messages/Tickets/Tickets';\n\n\nimport Overview from './MainApps/Class/Overview/Overview';\nimport Detail from './MainApps/Class/Detail/Detail';\nimport Specifics from './MainApps/Class/Specifics/Specifics';\n\n\nimport Login from './CommonApps/Login';\nimport axiosInstance from './axios';\n\nimport {getcoursesbyCourseId, getuser, getcoursesbyglobalCodeArray, getcoursesbyCourseIdArray, getcoursesbyCourseIdSimpleArray} from './CommonApps/AllAPICalls';\n\n\n\nfunction App() {\n\n  \nconsole.log(\"Page reredering-----------------\");\n\n   const [rerender,setRerender] = useState(false);\n\n   const rerenderHandler=()=>{\n   setRerender(!rerender);\n\n   }\n   \n\n\n   const [sideNavBarWidth, setWidth] = useState('var(--sideNavBarWidth)');\n   const [contract,setContract] = useState(true);\n\n\n\n   const expandHandler=()=>{\n\n        contract && setWidth('var(--sideNavBarWidthOnContract)');\n\n       !contract && setWidth('var(--sideNavBarWidth)');\n\n       setContract(!contract);\n   }\n\n\n\n\n\n\n   const [dashboardMounted, setDashboardMounted] = useState(false);\n   const [messagesMounted, setMessagesMounted] = useState(false);\n   const [classMounted, setClassMounted] = useState(false);\n   const [tasksMounted, setTasksMounted] = useState(false);\t\n   const [booksMounted, setBooksMounted] = useState(false);\n   const [examMounted, setExamMounted] = useState(false);\t\n   const [classmatesMounted, setClassmatesMounted] = useState(false);\n   const [teacherMounted, setTeacherMounted] = useState(false);\n   const [prepareMounted, setProgressMounted] = useState(false);\n   const [analyticsMounted, setAnalticsMounted] = useState(false);\t\n   const [achievementsMounted, setAchievementsMounted] = useState(false);                \n   const [goalsMounted, setGoalsMounted] = useState(false);\n   const [calenderMounted, setCalenderMounted] = useState(false);\n   const [diaryMounted, setDiaryMounted] = useState(false);\n   const [helpcenterMounted, setHelpCenterMounted] = useState(false);\n\n   const [selectedCourse, getCourseData] = useState([]);\n\n   //const [courseData, getCourseData] = useState([]);\n\n\n   let selectedCourseId = localStorage.getItem('preferredCourseId')\n\n   useEffect(()=>{\n     console.log(\"useEffect-1\");\t   \n     let courseId=selectedCourseId;\n     \t   \n     getcoursesbyCourseId({courseId,getCourseData});\n     return ()=>{\n      getCourseData(selectedCourse=>[]);\n     }\n  },[selectedCourseId, rerender]);\n\n\n   \n\n\n   const [data,setData]=useState({\n   \"dashboardcourses\": []\n   });\n\n  /*\t\n   useEffect(()=>{\n\tconsole.log(\"useEffect-2\");   \n        getuser({setData});\n    },[rerender])\n  */\n\n\n  const [dashboardCourses, getDashboardCourses] = useState([]);\n\n\n    /*\n     \n     useEffect(()=>{\n     \t     \n\n       console.log(\"useEffect-3\");\n\n       let courseIds = data.dashboardcourses;        \n       let allCourses=[];\t  \n       getDashboardCourses(dashboardCourses=>[]);\t     \n       courseIds.map((courseId, index)=>{\n           if(courseId !==0){\n\t      // console.log(\"courseIds............... \",courseId);\t   \n               getcoursesbyCourseIdArray({courseId, getDashboardCourses});\n               //getcoursesbyCourseIdSimpleArray({courseId, allCourses});\n\n           }\n       } );\n\n\n       return ()=>{\n\n\t  // console.log(\"clear fucntion called\");    \n           getDashboardCourses(dashboardCourses=>[]);\n       }\n    },[data.dashboardcourses, rerender, getDashboardCourses ]);\n    \n    */\n\n\n\n  \n  //console.log(\"dashboard courses: \", dashboardCourses);\n\n\n\n\n\n\n\n\n  return (\n    <div className=\"edrapp\">\n\n\n     {/*  \n    \n    <Header onPress={expandHandler}  selectedCourse={selectedCourse} userData={data} dashboardCourses={dashboardCourses}/> \n   \n    \n\n    <SideToolBar toolBarWidth={sideNavBarWidth}/>\n \n    \n    <SideNavBar sideNavBarWidth={sideNavBarWidth} \n\tdashboardMounted={dashboardMounted}  \n\tmessagesMounted={messagesMounted} \n        \n        classMounted = {classMounted} \n        tasksMounted = {tasksMounted} \n        booksMounted = {booksMounted} \n        examMounted = {examMounted} \n        classmatesMounted = {classmatesMounted} \n        teacherMounted = {teacherMounted} \n        prepareMounted = {prepareMounted} \n        analyticsMounted ={analyticsMounted} \n        achievementsMounted = {achievementsMounted} \n        goalsMounted = {goalsMounted} \n        calenderMounted = {calenderMounted} \n        diaryMounted = {diaryMounted} \n        helpcenterMounted = {helpcenterMounted} \n      />\n    \n    \n\n \n    <Switch>\n\n\n\t        \t  \n\n      <Route exact path='/account/userprofile' >\n      <UserProfile sideNavBarWidth={sideNavBarWidth} selectedCourse={selectedCourse}/>\n      </Route>\n\n      <Route exact path='/account/settings' >\n        <Settings sideNavBarWidth={sideNavBarWidth} selectedCourse={selectedCourse}/>\n      </Route>\n\n      <Route exact path='/account/courses' >\n        <Courses sideNavBarWidth={sideNavBarWidth} selectedCourse={selectedCourse}/>\n      </Route>\n       \n \n      <Route exact path='/dashboard/general' >\n        <General sideNavBarWidth={sideNavBarWidth} \n\t    passMountInfo={setDashboardMounted} \n\t    selectedCourse={selectedCourse} \n\t    onPress={rerenderHandler}\n\t    dashboardCourses={dashboardCourses}\n\t/>\n      </Route>\n\n     <Route exact path='/dashboard/subject' >\n        <Subject sideNavBarWidth={sideNavBarWidth} passMountInfo={setDashboardMounted}  selectedCourse={selectedCourse}/>\n      </Route>\n\n      <Route exact path='/dashboard/news' >\n        <News sideNavBarWidth={sideNavBarWidth} passMountInfo={setDashboardMounted}  selectedCourse={selectedCourse}/>\n      </Route>\n\n\n\n\n\n\t \n      <Route exact path='/messages/chat' >\n        <VATChat sideNavBarWidth={sideNavBarWidth} passMountInfo={setMessagesMounted}  selectedCourse={selectedCourse}/>\n      </Route>\n        \n\n      <Route exact path='/messages/email' >\n        <EMail sideNavBarWidth={sideNavBarWidth} passMountInfo={setMessagesMounted}  selectedCourse={selectedCourse}/>\n      </Route>\n\n      \n\n      <Route exact path='/messages/tickets' >\n        <Tickets sideNavBarWidth={sideNavBarWidth} passMountInfo={setMessagesMounted}  selectedCourse={selectedCourse}/>\n      </Route>\n\t \n\n      <Route exact path='/class/overview' >\n        <Overview sideNavBarWidth={sideNavBarWidth} passMountInfo={setClassMounted}  selectedCourse={selectedCourse}/>\n      </Route>\n\n      <Route exact path='/class/detail' >\n        <Detail sideNavBarWidth={sideNavBarWidth} passMountInfo={setClassMounted}  selectedCourse={selectedCourse}/>\n      </Route>\n\n      <Route exact path='/class/specifics' >\n        <Specifics sideNavBarWidth={sideNavBarWidth} passMountInfo={setClassMounted}  selectedCourse={selectedCourse}/>\n      </Route>\n      \n    \n\n    </Switch>\t  \n  \n   */}\n\n    </div>\n  );\n\n\n\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}