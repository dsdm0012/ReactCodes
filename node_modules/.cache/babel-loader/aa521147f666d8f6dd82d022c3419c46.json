{"ast":null,"code":"import axiosInstance from '../axios';\nimport { Logout } from './Logout';\nexport const getuser = ({\n  setData\n}) => {\n  axiosInstance.get().then(res => {\n    setData(data => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const putuser = ({\n  data,\n  formData\n}) => {\n  axiosInstance.put('', {\n    \"email\": data.email,\n    \"username\": data.username,\n    \"firstname\": formData.firstname,\n    \"lastname\": formData.lastname,\n    \"gender\": formData.gender,\n    \"role\": \"student\",\n    \"position\": formData.position,\n    \"dateofbirth\": formData.dateofbirth\n  }).then(res => {}).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getticket = ({\n  ticketId,\n  setData\n}) => {\n  axiosInstance.get(`tickets/${ticketId}/`).then(res => {\n    setData(data => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getalltickets = ({\n  setData\n}) => {\n  axiosInstance.get(`tickets/`).then(res => {\n    setData(data => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getuserbyId = ({\n  userId,\n  setUserData\n}) => {\n  axiosInstance.get(`/${userId}/`).then(res => {\n    setUserData(userData => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n\n    if (error.response.status === 404) {\n      console.log(\"here is the error\");\n    }\n  });\n};\nexport const getticketscategory = ({\n  setTicketType\n}) => {\n  axiosInstance.get(`tickets/category/`).then(res => {\n    setTicketType(data => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getcategorybyId = ({\n  ticketCategory,\n  setCatData\n}) => {\n  axiosInstance.get(`tickets/category/${ticketCategory}/`).then(res => {\n    setCatData(data => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const createticket = ({\n  formData,\n  data\n}) => {\n  axiosInstance.post(`tickets/`, {\n    \"title\": formData.title,\n    \"author\": data.id,\n    \"category\": formData.category,\n    \"excerpt\": formData.keywords,\n    \"content\": formData.description,\n    \"status\": \"closed\",\n    \"pstatus\": \"draft\",\n    \"priority\": formData.priority,\n    \"resolution\": \"unresolved\"\n  }).then(res => {}).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const postcomment = ({\n  ticketId,\n  userId,\n  comment\n}) => {\n  axiosInstance.post(`tickets/comments/`, {\n    \"ticketId\": ticketId,\n    \"commenter\": userId,\n    \"commenttext\": comment\n  }).then(res => {}).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getcomments = ({\n  setCommentObj,\n  ticketId\n}) => {\n  axiosInstance.get(`tickets/comments/${ticketId}/`).then(res => {\n    setCommentObj(commentObj => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getallusers = ({\n  setUsersData\n}) => {\n  axiosInstance.get(`/allusers/`).then(res => {\n    setUsersData(userData => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const postchatcomment = ({\n  groupId,\n  userId,\n  comment\n}) => {\n  axiosInstance.post(`chat/comments/`, {\n    \"groupId\": groupId,\n    \"commenter\": userId,\n    \"commenttext\": comment\n  }).then(res => {}).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getchatcomments = ({\n  setChatCommentObj,\n  groupId\n}) => {\n  axiosInstance.get(`chat/comments/${groupId}/`).then(res => {\n    setChatCommentObj(commentObj => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const createchatgroup = ({\n  groupname,\n  groupMembers\n}) => {\n  axiosInstance.post(`chat/groups/`, {\n    \"name\": groupname,\n    \"groupusers\": groupMembers\n  }).then(res => {}).catch(error => {\n    if (error.response.status === 400) {\n      alert(\"User is already added. Refresh the page and try again.\");\n    }\n\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getchatgroups = ({\n  getChatGroups\n}) => {\n  axiosInstance.get(`chat/groups/`).then(res => {\n    getChatGroups(chatGroups => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const createcourse = ({\n  formData,\n  data\n}) => {\n  axiosInstance.post(`course/names/`, {\n    \"teacher\": data.id,\n    \"courseShortName\": \"Quantum Mechanics-I\",\n    \"courseFullName\": \"QM\",\n    \"courseGlobalCode\": \"321212\",\n    \"courseLocalCode\": formData.courseLocalCode,\n    \"courseStatus\": \"ongoing\",\n    \"courseStartDate\": \"2022-02-08\",\n    \"courseEndDate\": \"2022-02-08\",\n    \"designedFor\": formData.classname,\n    \"educationboard\": formData.educationboard,\n    \"subject\": formData.subject,\n    \"abouttheCourse\": \"yet\",\n    \"instituteName\": \"IIT Bhubaneswar\",\n    \"instituteCity\": \"BBSR\",\n    \"instituteCountry\": \"India\",\n    \"enrolledstudents\": [2],\n    \"enrolementrequests\": [2]\n  }).then(res => {}).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getclassrank = ({\n  setClassRank\n}) => {\n  axiosInstance.get(`course/coursecategories/`).then(res => {\n    setClassRank(data => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getclassobjectbyId = ({\n  classId,\n  setClassObject\n}) => {\n  axiosInstance.get(`course/class/${classId}/`).then(res => {\n    setClassObject(data => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getsubjectsfromclassandboard = ({\n  classId,\n  boardId,\n  setSubjectsObject\n}) => {\n  axiosInstance.get(`course/subjects/${classId}/${boardId}`).then(res => {\n    setSubjectsObject(data => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};","map":{"version":3,"sources":["/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/CommonApps/AllAPICalls.js"],"names":["axiosInstance","Logout","getuser","setData","get","then","res","data","catch","error","response","status","putuser","formData","put","email","username","firstname","lastname","gender","position","dateofbirth","getticket","ticketId","getalltickets","getuserbyId","userId","setUserData","userData","console","log","getticketscategory","setTicketType","getcategorybyId","ticketCategory","setCatData","createticket","post","title","id","category","keywords","description","priority","postcomment","comment","getcomments","setCommentObj","commentObj","getallusers","setUsersData","postchatcomment","groupId","getchatcomments","setChatCommentObj","createchatgroup","groupname","groupMembers","alert","getchatgroups","getChatGroups","chatGroups","createcourse","courseLocalCode","classname","educationboard","subject","getclassrank","setClassRank","getclassobjectbyId","classId","setClassObject","getsubjectsfromclassandboard","boardId","setSubjectsObject"],"mappings":"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","sourcesContent":["import axiosInstance from '../axios';\nimport {Logout} from './Logout';\n\n\nexport const getuser =({setData})=>{\n  \n\n\n    axiosInstance.get()\n                  .then((res) => {\n                        setData(data=>res.data);\n                   })\n                  .catch((error)=>{\n                      if(error.response.status===401){\n\t\t\t Logout();     \n                      }\n\n                   });\n\n}\n\n\n\nexport const putuser =({data, formData})=>{\n\n\n      axiosInstance.put('',{\n        \"email\":data.email,\n        \"username\":data.username,\n        \"firstname\": formData.firstname,\n        \"lastname\": formData.lastname,\n        \"gender\": formData.gender,\n        \"role\": \"student\",\n        \"position\":formData.position,\n        \"dateofbirth\": formData.dateofbirth,\n\n\n                        })\n                        .then((res) => {\n\n                          })\n\n                        .catch((error)=>{\n                             if(error.response.status===401){\n\t\t              Logout();\t\t     \n                            }\n\n                        });\n\n\n\n}\n\n\nexport const getticket =({ticketId, setData})=>{\n\n\n       axiosInstance.get(`tickets/${ticketId}/`).then((res) => {\n                        setData(data=>res.data);\n                })\n               .catch((error)=>{\n                     if(error.response.status===401){\n\t\t      Logout();\t     \n\n                      }\n\n\n                });\n\n\n\n\n}\n\n\nexport const getalltickets = ({setData})=>{\n\n\n   axiosInstance.get(`tickets/`).then((res) => {\n                        setData(data=>res.data);\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n\t\t     Logout();\t     \n\n                      }\n\n\n                });\n\n\n}\n\n\nexport const getuserbyId = ({userId, setUserData})=>{\n\n   axiosInstance.get(`/${userId}/`).then((res) => {\n                        setUserData(userData=>res.data);\n                })\n\t        .catch((error)=>{\n                     if(error.response.status===401){\n\t\t      Logout();\t     \n\n                      }\n\n                     if (error.response.status===404){console.log(\"here is the error\");}\n\n\n\n                });\n\n}\n\n\n\n\nexport const getticketscategory = ({setTicketType})=>{\n\n\n   axiosInstance.get(`tickets/category/`).then((res) => {\n                        setTicketType(data=>res.data);\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                     Logout();\n\n                      }\n\n\n                });\n\n\n}\n\n\nexport const getcategorybyId = ({ticketCategory, setCatData})=>{\n\n\n   axiosInstance.get(`tickets/category/${ticketCategory}/`).then((res) => {\n                        setCatData(data=>res.data);\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                     Logout();\n\n                      }\n\n\n                });\n\n\n}\n\n\n\nexport const createticket = ({formData,data})=>{\n\n     axiosInstance\n        .post(`tickets/`,{\n\n    \"title\": formData.title,\n    \"author\": data.id,\n    \"category\": formData.category,\n    \"excerpt\": formData.keywords,\n    \"content\": formData.description,\n    \"status\": \"closed\",\n    \"pstatus\": \"draft\",\n    \"priority\": formData.priority,\n    \"resolution\": \"unresolved\",\n\n\n                        })\n                        .then((res) => {\n                })\n         .catch((error)=>{\n                     if(error.response.status===401){\n                     Logout();\n\n                      }\n\n\n                });\n\n}\n\nexport const postcomment = ({ticketId, userId, comment})=>{\n\n\n  axiosInstance\n        .post(`tickets/comments/`,{           \n        \"ticketId\": ticketId,\n        \"commenter\": userId,\n        \"commenttext\": comment,\n\n                        })\n                        .then((res) => {\n                })\n         .catch((error)=>{\n                     if(error.response.status===401){\n                     Logout();\n\n                      }\n\n\n                });\n\n}\n\n\n\n\n\nexport const getcomments = ({setCommentObj,ticketId})=>{\n\n     axiosInstance.get(`tickets/comments/${ticketId}/`).then((res) => {\n                        setCommentObj(commentObj=>res.data);\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                     Logout();\n\n                      }\n\n\n                });\n\n}\n\n\n\nexport const getallusers = ({ setUsersData})=>{\n\n   axiosInstance.get(`/allusers/`).then((res) => {\n                        setUsersData(userData=>res.data);\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                      Logout();\n\n                      }\n\n\n                });\n\n}\n\n\n\n\nexport const postchatcomment = ({groupId, userId, comment})=>{\n\n\n  axiosInstance\n        .post(`chat/comments/`,{\n        \"groupId\": groupId,\n        \"commenter\": userId,\n        \"commenttext\": comment,\n\n                        })\n                        .then((res) => {\n                })\n         .catch((error)=>{\n                     if(error.response.status===401){\n                     Logout();\n\n                      }\n\n\n                });\n\n}\n\n\n\nexport const getchatcomments = ({setChatCommentObj,groupId})=>{\n\n     axiosInstance.get(`chat/comments/${groupId}/`).then((res) => {\n                        setChatCommentObj(commentObj=>res.data);\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                     Logout();\n\n                      }\n\n\n                });\n\n}\n\n\n\n\n\n\nexport const createchatgroup = ({groupname,groupMembers})=>{\n\n\n  axiosInstance\n        .post(`chat/groups/`,\n\n               {\n                  \"name\": groupname,\n\t\t   \"groupusers\": groupMembers,    \n               }\n\n\n\n\t           )\n                        .then((res) => {\n                })\n         .catch((error)=>{\n                    if(error.response.status===400){alert(\"User is already added. Refresh the page and try again.\");}\n\n                     if(error.response.status===401){\n                     Logout();\n\n                      }\n\n\n                });\n\n}\n\n\n\n\nexport const getchatgroups = ({getChatGroups})=>{\n\n\n    axiosInstance.get(`chat/groups/`)\n\n\n                        .then((res) => {\n\n                    getChatGroups(chatGroups=>res.data);\n\n                })\n         .catch((error)=>{\n\n                     if(error.response.status===401){\n                     Logout();\n\n                      }\n\n\n                });\n\n}\n\n\n\n\n\n\nexport const createcourse = ({formData,data})=>{\n\n     axiosInstance\n        .post(`course/names/`,{\n\n\n        \"teacher\": data.id,\n        \"courseShortName\": \"Quantum Mechanics-I\",\n        \"courseFullName\": \"QM\",\n        \"courseGlobalCode\": \"321212\",\n        \"courseLocalCode\": formData.courseLocalCode,\n        \"courseStatus\": \"ongoing\",\n        \"courseStartDate\": \"2022-02-08\",\n        \"courseEndDate\": \"2022-02-08\",\n        \"designedFor\": formData.classname,\n\t\"educationboard\": formData.educationboard,\t\n        \"subject\": formData.subject,\n        \"abouttheCourse\": \"yet\",\n        \"instituteName\": \"IIT Bhubaneswar\",\n        \"instituteCity\": \"BBSR\",\n        \"instituteCountry\": \"India\",\n        \"enrolledstudents\": [\n            2\n        ],\n        \"enrolementrequests\": [\n            2\n        ]\n\n\n\n\n                        })\n                        .then((res) => {\n                })\n         .catch((error)=>{\n                     if(error.response.status===401){\n                     Logout();\n\n                      }\n\n\n                });\n\n}\n\n\n\nexport const getclassrank = ({setClassRank})=>{\n\n\n   axiosInstance.get(`course/coursecategories/`).then((res) => {\n                        setClassRank(data=>res.data);\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                     Logout();\n\n                      }\n\n\n                });\n\n\n}\n\n\n\nexport const getclassobjectbyId = ({classId, setClassObject})=>{\n\n   axiosInstance.get(`course/class/${classId}/`).then((res) => {\n                        setClassObject(data=>res.data);\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                     Logout();\n\n                      }\n                });\n}\n\n\n\n\nexport const getsubjectsfromclassandboard = ({classId, boardId ,setSubjectsObject}) =>{\n\n\naxiosInstance.get(`course/subjects/${classId}/${boardId}`).then((res) => {\n                        setSubjectsObject(data=>res.data);\n\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                     Logout();\n\n                      }\n                });\n\n\n\n\n\n\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}