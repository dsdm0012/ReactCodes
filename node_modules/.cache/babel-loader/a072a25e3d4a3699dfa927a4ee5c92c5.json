{"ast":null,"code":"var _jsxFileName = \"/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/VideoPlayer/AgoraVideo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport classes from './AgoraVideo.module.css';\nimport AgoraRTC from 'agora-rtc-sdk-ng';\nimport useAgora from './hooks/useAgora';\nimport MediaPlayer from './components/MediaPlayer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = AgoraRTC.createClient({\n  codec: 'h264',\n  mode: 'rtc'\n});\n\nconst AgoraVideo = () => {\n  _s();\n\n  const [appid, setAppid] = useState('4661d9bf245f4ed19e45c3747944d6be');\n  const [token, setToken] = useState('0064661d9bf245f4ed19e45c3747944d6beIABw+/eCjfWGjOOMwae88O8Jqsg0nDzN+fr9gzsZMJPd3RELSA0AAAAAEACDxJolH5q0YgEAAQAfmrRi');\n  const [channel, setChannel] = useState('livestream1');\n  const {\n    localAudioTrack,\n    localVideoTrack,\n    leave,\n    join,\n    joinState,\n    remoteUsers\n  } = useAgora(client);\n  const initialFormData = Object.freeze({\n    username: null\n  });\n  const [formData, updateFormData] = useState(initialFormData);\n\n  const handleChange = e => {\n    updateFormData({ ...formData,\n      [e.target.name]: e.target.value.trim()\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault(); //console.log(\"print: \", formData.username)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"call\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"call-form\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"join\",\n          type: \"button\",\n          className: \"btn btn-primary btn-sm\",\n          disabled: joinState,\n          onClick: () => {\n            join(appid, channel, token);\n          },\n          children: \"Join\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"leave\",\n          type: \"button\",\n          className: \"btn btn-primary btn-sm\",\n          disabled: !joinState,\n          onClick: () => {\n            leave();\n          },\n          children: \"Leave\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"player-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"local-player-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"local-player-text\",\n          children: [localVideoTrack && `localTrack`, joinState && localVideoTrack ? `(${client.uid})` : '']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(MediaPlayer, {\n          videoTrack: localVideoTrack,\n          audioTrack: undefined\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 10\n      }, this), remoteUsers.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"remote-player-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"remote-player-text\",\n          children: `remoteVideo(${user.uid})`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(MediaPlayer, {\n          videoTrack: user.videoTrack,\n          audioTrack: user.audioTrack\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, user.uid, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 36\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AgoraVideo, \"j38Mdokk5yxIeLce7GuiA66GO2k=\", false, function () {\n  return [useAgora];\n});\n\n_c = AgoraVideo;\nexport default AgoraVideo;\n\nvar _c;\n\n$RefreshReg$(_c, \"AgoraVideo\");","map":{"version":3,"names":["React","useState","classes","AgoraRTC","useAgora","MediaPlayer","client","createClient","codec","mode","AgoraVideo","appid","setAppid","token","setToken","channel","setChannel","localAudioTrack","localVideoTrack","leave","join","joinState","remoteUsers","initialFormData","Object","freeze","username","formData","updateFormData","handleChange","e","target","name","value","trim","handleSubmit","preventDefault","uid","undefined","map","user","videoTrack","audioTrack"],"sources":["/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/VideoPlayer/AgoraVideo.js"],"sourcesContent":["import React,{useState} from 'react';\nimport classes from './AgoraVideo.module.css';\nimport AgoraRTC from 'agora-rtc-sdk-ng';\nimport useAgora from './hooks/useAgora';\nimport MediaPlayer from './components/MediaPlayer';\n\nconst client = AgoraRTC.createClient({ codec: 'h264', mode: 'rtc' });\n\nconst AgoraVideo=()=>{\n\n  const [ appid, setAppid ] = useState('4661d9bf245f4ed19e45c3747944d6be');\n  const [ token, setToken ] = useState('0064661d9bf245f4ed19e45c3747944d6beIABw+/eCjfWGjOOMwae88O8Jqsg0nDzN+fr9gzsZMJPd3RELSA0AAAAAEACDxJolH5q0YgEAAQAfmrRi');\n  const [ channel, setChannel ] = useState('livestream1');\n\n\n  const {\n    localAudioTrack, localVideoTrack, leave, join, joinState, remoteUsers\n  } = useAgora(client);\t\n\n\n\n\n\n   const initialFormData = Object.freeze({\n\n        username: null,\n\n        });\n\n   const [formData, updateFormData] = useState(initialFormData);\n\n   const handleChange = (e) => {\n\n        updateFormData({\n                        ...formData,\n                        [e.target.name]: e.target.value.trim(),\n                });\n        };\n\n\n  const handleSubmit=(e)=>{\n  e.preventDefault();\n\n  //console.log(\"print: \", formData.username)\n\n  }\n\n\n\n\n\n\nreturn (\n\n    <div className='call'>\n\n      <form className='call-form'>\n        <div className='button-group'>\n          <button id='join' type='button' className='btn btn-primary btn-sm' disabled={joinState} onClick={() => {join(appid, channel, token)}}>Join</button>\n          <button id='leave' type='button' className='btn btn-primary btn-sm' disabled={!joinState} onClick={() => {leave()}}>Leave</button>\n        </div>\n      </form>\n\n\n\n      <div className='player-container'>\n\n         <div className='local-player-wrapper'>\n           <p className='local-player-text'>{localVideoTrack && `localTrack`}{joinState && localVideoTrack ? `(${client.uid})` : ''}</p>\n           <MediaPlayer videoTrack={localVideoTrack} audioTrack={undefined}></MediaPlayer>\n         </div>\n\n\n         {remoteUsers.map(user => (<div className='remote-player-wrapper' key={user.uid}>\n            <p className='remote-player-text'>{`remoteVideo(${user.uid})`}</p>\n            <MediaPlayer videoTrack={user.videoTrack} audioTrack={user.audioTrack}></MediaPlayer>\n          </div>))}\n\n\n      </div>\n\n\n\n    </div>\t\n\n\n\n);\n\n}\n\n\nexport default AgoraVideo;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}