{"ast":null,"code":"var _jsxFileName = \"/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/MainApps/Chat/ChatWindow/ChatWindowNew.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport classes from \"./ChatWindow.module.css\";\nimport ChatUserInfoTopBar from \"./ChatUserInfoTopBar\";\nimport ChatScreen from \"./ChatScreen\"; //import ChatInput from \"./ChatInput\";\n\nimport { w3cwebsocket as W3CWebSocket } from 'websocket'; //import { Picker } from \"emoji-mart\";\n\nimport \"emoji-mart/css/emoji-mart.css\"; //import Login from '../../../../CommonApps/Login';\n//import axiosInstance from '../../../../axios';\n\nimport { MdSend } from 'react-icons/md';\nimport { postchatcomment, getchatcomments, getchatgroupbyId } from '../../../CommonApps/AllAPICalls';\nimport { ImAttachment } from 'react-icons/im';\nimport { BsEmojiSmile } from 'react-icons/bs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Connect() {\n  let client;\n  let messageListeners = [];\n  let isConnected = false;\n  let componentMounted = false; //let reconnectOnClose = true;\n\n  let stateChangeListeners = [];\n\n  function mountInfo(value) {\n    componentMounted = value;\n  }\n\n  function on(fn) {\n    messageListeners.push(fn);\n  }\n\n  function off(fn) {\n    messageListeners = messageListeners.filter(l => l !== fn);\n  }\n\n  function onStateChange(fn) {\n    stateChangeListeners.push(fn);\n    return () => {\n      stateChangeListeners = stateChangeListeners.filter(l => l !== fn);\n    };\n  }\n\n  function start() {\n    client = new W3CWebSocket('wss://td7ru13iq4.execute-api.ca-central-1.amazonaws.com/production');\n\n    client.onclose = () => {\n      isConnected = false;\n      stateChangeListeners.forEach(fn => fn(false));\n\n      if (componentMounted) {\n        setTimeout(start, 2000);\n      }\n    };\n\n    client.onopen = () => {\n      isConnected = true;\n      stateChangeListeners.forEach(fn => fn(true));\n      client.send(JSON.stringify({\n        \"action\": \"sendPublic\",\n        \"message\": \"Okay \" + \"1\" + \" \" + \"43\",\n        \"senderUserId\": '1',\n        \"receiverUserIds\": [],\n        \"chatGroupId\": '43'\n      }));\n    };\n\n    client.onmessage = event => {\n      const dataFromServer = JSON.parse(event.data);\n      messageListeners.forEach(fn => fn(dataFromServer.message));\n    };\n  }\n\n  start();\n  return {\n    on,\n    off,\n    onStateChange,\n    mountInfo,\n    componentMounted: () => componentMounted,\n    getClient: () => client,\n    isConnected: () => isConnected,\n    close: () => client.close()\n  };\n}\n\n_c = Connect;\nconst client = Connect();\n\nfunction useMessages() {\n  _s();\n\n  const [messages, setMessages] = useState(['']);\n  useEffect(() => {\n    function handleMessage(message) {\n      setMessages([...messages, message]);\n    }\n\n    client.on(handleMessage);\n    return () => {\n      client.off(handleMessage);\n    };\n  }, [messages, setMessages]);\n  return messages;\n}\n\n_s(useMessages, \"r89NeTPJIQ79kkdpfOCrTLYulmw=\");\n\nconst ChatWindow = props => {\n  _s2();\n\n  //let clickedUserId=props.group.groupuserObjects[0].id !== props.userData.id? props.group.groupuserObjects[0] : props.group.groupuserObjects[1];\n  const mountedRef = useRef(true);\n  let value = true;\n  client.mountInfo(value); //this is commented out on April 5th 2022. Check if hat function works\n  //const [isConnected, setIsConnected] = useState(client.isConnected());\n\n  let isConnected = client.isConnected();\n  console.log('isConnected: ', isConnected);\n  const [commentObj, setChatCommentObj] = useState(null);\n  const [message, setMessage] = useState('');\n  const messages = useMessages();\n  let lastMessage = messages.at(-1).split(\" \");\n  const commentGroupId = Number(lastMessage[lastMessage.length - 1]); //const commentUserId = Number(lastMessage[lastMessage.length - 2]);\n\n  const clickedGroupIdT = props.clickedGroupId; //const [localMessageSize, setlocalMessageSize]= useState(0);\n\n  const [pageNum, setPageNum] = useState(1);\n\n  const loadUpHandler = () => {\n    if (commentObj !== null && commentObj.next !== null) {\n      setPageNum(pageNum => pageNum + 1);\n    }\n  };\n\n  const loadDownHandler = () => {\n    if (commentObj !== null && commentObj.previous !== null) {\n      setPageNum(pageNum => pageNum - 1);\n    }\n  };\n\n  let displayMessage = [];\n\n  if (commentGroupId === clickedGroupIdT) {\n    displayMessage = messages;\n  }\n\n  const handleChange = e => {\n    setMessage(msg => e.target.value);\n  };\n\n  useEffect(() => {\n    return () => {\n      mountedRef.current = false;\n      client.mountInfo(false); // client.close();\n    };\n  }, [isConnected]);\n  const [chatGroup, getChatGroupById] = useState(null);\n  useEffect(() => {\n    const groupId = props.clickedGroupId;\n    let pageno = pageNum;\n    getchatcomments({\n      setChatCommentObj,\n      groupId,\n      pageno\n    });\n    getchatgroupbyId({\n      groupId,\n      getChatGroupById\n    });\n  }, [props.clickedGroupId, props.userData.id, pageNum]);\n  console.log(\"chatGroup: \", chatGroup); //{\"action\":\"sendPublic\",\"message\":\"jjjj\"}\n  //type: \"message\",\n  //message: message+\" \"+props.userData.id+\" \"+props.clickedGroupId,\n\n  function sendMessage(e) {\n    e.preventDefault();\n\n    if (message !== \"\") {\n      client.getClient().send(JSON.stringify({\n        \"action\": \"sendPublic\",\n        \"message\": message + \" \" + props.userData.id + \" \" + props.clickedGroupId,\n        \"senderUserId\": props.userData.id,\n        \"receiverUserIds\": [],\n        \"chatGroupId\": props.clickedGroupId\n      }));\n      const comment = message;\n      const userId = props.userData.id;\n      const groupId = props.clickedGroupId;\n      postchatcomment({\n        groupId,\n        userId,\n        comment\n      });\n    }\n\n    setMessage('');\n  } //console.log(\"displayMessage \", displayMessage);\n  //console.log(\"commentObj: \", commentObj);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.chatWindow,\n    children: [clickedGroupIdT === Number(0) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.noGroupSelectDiv,\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Please select a chat to continue\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 80\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 37\n    }, this), clickedGroupIdT !== Number(0) && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ChatUserInfoTopBar, {\n        chatGroup: chatGroup,\n        userData: props.userData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ChatScreen, {\n        messages: displayMessage,\n        commentObj: commentObj !== null ? commentObj.results : [],\n        currentUser: props.userData.id,\n        loadUpHandler: loadUpHandler,\n        loadDownHandler: loadDownHandler,\n        chatGroup: chatGroup\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.chatInput,\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.addCommentForm,\n          onSubmit: sendMessage,\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: classes.uploadButton,\n            children: [\" \", /*#__PURE__*/_jsxDEV(BsEmojiSmile, {\n              className: classes.uploadIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 68\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 12\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: classes.uploadButton,\n            children: [\" \", /*#__PURE__*/_jsxDEV(ImAttachment, {\n              className: classes.uploadIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 75\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.chatInput,\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              className: classes.inputTextBox,\n              value: message,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: classes.submit_button,\n            children: [/*#__PURE__*/_jsxDEV(\"b\", {\n              children: [/*#__PURE__*/_jsxDEV(MdSend, {\n                className: classes.sendButtonIcon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 80\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 77\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 18\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 282,\n    columnNumber: 1\n  }, this);\n};\n\n_s2(ChatWindow, \"x/1zhOp2dasidsYCQzV8fHCEFPs=\", false, function () {\n  return [useMessages];\n});\n\n_c2 = ChatWindow;\nexport default ChatWindow;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Connect\");\n$RefreshReg$(_c2, \"ChatWindow\");","map":{"version":3,"names":["React","useState","useEffect","useRef","classes","ChatUserInfoTopBar","ChatScreen","w3cwebsocket","W3CWebSocket","MdSend","postchatcomment","getchatcomments","getchatgroupbyId","ImAttachment","BsEmojiSmile","Connect","client","messageListeners","isConnected","componentMounted","stateChangeListeners","mountInfo","value","on","fn","push","off","filter","l","onStateChange","start","onclose","forEach","setTimeout","onopen","send","JSON","stringify","onmessage","event","dataFromServer","parse","data","message","getClient","close","useMessages","messages","setMessages","handleMessage","ChatWindow","props","mountedRef","console","log","commentObj","setChatCommentObj","setMessage","lastMessage","at","split","commentGroupId","Number","length","clickedGroupIdT","clickedGroupId","pageNum","setPageNum","loadUpHandler","next","loadDownHandler","previous","displayMessage","handleChange","e","msg","target","current","chatGroup","getChatGroupById","groupId","pageno","userData","id","sendMessage","preventDefault","comment","userId","chatWindow","noGroupSelectDiv","results","chatInput","addCommentForm","uploadButton","uploadIcon","inputTextBox","submit_button","sendButtonIcon"],"sources":["/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/MainApps/Chat/ChatWindow/ChatWindowNew.js"],"sourcesContent":["import React,{useState,useEffect,useRef} from \"react\";\nimport classes from \"./ChatWindow.module.css\"\nimport ChatUserInfoTopBar from \"./ChatUserInfoTopBar\";\nimport ChatScreen from \"./ChatScreen\";\n//import ChatInput from \"./ChatInput\";\nimport {w3cwebsocket as W3CWebSocket } from 'websocket';\n//import { Picker } from \"emoji-mart\";\nimport \"emoji-mart/css/emoji-mart.css\";\n//import Login from '../../../../CommonApps/Login';\n//import axiosInstance from '../../../../axios';\nimport {MdSend} from 'react-icons/md';\nimport {postchatcomment,getchatcomments, getchatgroupbyId} from '../../../CommonApps/AllAPICalls';\nimport {ImAttachment} from 'react-icons/im';\nimport {BsEmojiSmile} from 'react-icons/bs';\n\n\nfunction Connect (){\n\nlet client;\nlet messageListeners = [];\nlet isConnected = false;\nlet componentMounted = false;\n\n//let reconnectOnClose = true;\nlet stateChangeListeners = [];\n\n\nfunction mountInfo(value){\n\n  componentMounted = value;\n}\n\n\n\nfunction on(fn) {\n    messageListeners.push(fn);\n  }\n\n function off(fn) {\n    messageListeners = messageListeners.filter(l => l !== fn);\n  }\n\nfunction onStateChange(fn) {\n    stateChangeListeners.push(fn);\n    return () => {\n      stateChangeListeners = stateChangeListeners.filter(l => l !== fn);\n    };\n  }\n\n\n\n\n\n\n\n\nfunction start () {\n \n\n    client = new W3CWebSocket('wss://td7ru13iq4.execute-api.ca-central-1.amazonaws.com/production');\n\n\n\n   client.onclose = () => {\n     isConnected=false;\n     stateChangeListeners.forEach(fn => fn(false));\t   \n     if(componentMounted){\t   \n       setTimeout(start, 2000);\n     }\n   }\n\n   client.onopen=()=>{\n     isConnected=true;\n     stateChangeListeners.forEach(fn => fn(true));\t \n    \n     client.send(JSON.stringify({\n            \"action\":\"sendPublic\",\n            \"message\": \"Okay \"+\"1\"+\" \"+\"43\",\n            \"senderUserId\": '1',\n            \"receiverUserIds\":[],\n            \"chatGroupId\":'43'\n    }))\n\n\n\n\n\n\n\n   }\n\n   client.onmessage = (event)=>{\n    const dataFromServer = JSON.parse(event.data);\t\n    messageListeners.forEach(fn => fn(dataFromServer.message));\n   }\n\n\n}\n\nstart();\n\n\n\n\n\n\n\nreturn {\n    on,\n    off,\n    onStateChange,\n    mountInfo,\n    componentMounted: ()=>componentMounted,\t\n    getClient: () => client,\n    isConnected: () => isConnected,\n    close: () => client.close(),\n   }\n}\n\nconst client = Connect();\n\n\n\nfunction useMessages() {\n  const [messages, setMessages] = useState(['']);\n\n  useEffect(() => {\n    function handleMessage(message) {\n      setMessages([...messages, message]);\n    }\n      client.on(handleMessage);\n     return () => {\n\t     client.off(handleMessage);\n             }\n  }, [messages, setMessages]);\n\n  return messages;\n}\n\n\n\n\n\n\n\nconst ChatWindow = (props) =>{\n\n\n\n    //let clickedUserId=props.group.groupuserObjects[0].id !== props.userData.id? props.group.groupuserObjects[0] : props.group.groupuserObjects[1];\n\n    const mountedRef = useRef(true);\n    let value=true;\n    client.mountInfo(value);\n    //this is commented out on April 5th 2022. Check if hat function works\n    //const [isConnected, setIsConnected] = useState(client.isConnected());\n  \n    let isConnected = client.isConnected();\n\n    console.log('isConnected: ', isConnected);\t\n\n    const [commentObj,setChatCommentObj]=useState(null);\n\n    const [message, setMessage] = useState('');\n   \n    const messages = useMessages();  \n\n    let lastMessage = messages.at(-1).split(\" \");\t\n\n    const commentGroupId = Number(lastMessage[lastMessage.length - 1]);\t\n\n    //const commentUserId = Number(lastMessage[lastMessage.length - 2]);\n   \t\n    const clickedGroupIdT= props.clickedGroupId;\n\n    //const [localMessageSize, setlocalMessageSize]= useState(0);\n\n    const [pageNum, setPageNum]= useState(1);\n\n    const loadUpHandler=()=>{\n\n      if(commentObj !==null && commentObj.next !==null){\n        setPageNum(pageNum=>pageNum + 1);\n       }\t   \n    }\n\n\n    const loadDownHandler=()=>{\n\n      if(commentObj !==null && commentObj.previous !==null){\n          setPageNum(pageNum=>pageNum - 1);\n        }\n\n    }\n\n\n\n\n\n\n   let displayMessage=[];\n  \n   if( commentGroupId === clickedGroupIdT ){\n      \n        displayMessage=messages;\t  \n\n     }\t\n\n   const handleChange = (e) => {\n      setMessage(msg=>e.target.value);\n\n\n   };\n\n   useEffect(()=>{\n     \n\n\n      return ()=>{\n         mountedRef.current = false;\n\t client.mountInfo(false);    \n        // client.close();\n       }\n     },[isConnected]);\n\n\n    const [chatGroup, getChatGroupById] = useState(null);\n\n\n   useEffect(()=>{\n     const groupId=props.clickedGroupId;\n     let pageno=pageNum;\n     getchatcomments({setChatCommentObj, groupId,pageno});\n     getchatgroupbyId({groupId, getChatGroupById});\n\n   },[props.clickedGroupId, props.userData.id,pageNum ]);\n\n\n\n    console.log(\"chatGroup: \", chatGroup);\n\n\n    //{\"action\":\"sendPublic\",\"message\":\"jjjj\"}\n    //type: \"message\",\n    //message: message+\" \"+props.userData.id+\" \"+props.clickedGroupId,\n\n   function sendMessage(e) {\n    e.preventDefault();\n    if(message !== \"\"){\t   \n    client.getClient().send(JSON.stringify({\n\t    \"action\":\"sendPublic\",\n\t    \"message\": message+\" \"+props.userData.id+\" \"+props.clickedGroupId,\n\t    \"senderUserId\":props.userData.id,\n\t    \"receiverUserIds\":[],\n\t    \"chatGroupId\":props.clickedGroupId,\n    }))\n\n     const comment = message;\n     const userId = props.userData.id;\n\n     const groupId=props.clickedGroupId;\n     postchatcomment({groupId,userId,comment});\n\n    }\n    \t    \n    setMessage('');\n   }\n\n\n   //console.log(\"displayMessage \", displayMessage);\n\n\n   //console.log(\"commentObj: \", commentObj);\n\n\n\nreturn(\n\n\n\n\n<div className={classes.chatWindow}>\n\n\n\n  {clickedGroupIdT === Number(0) && <div className={classes.noGroupSelectDiv}> <b>Please select a chat to continue</b> </div>}\n\n\n\n { clickedGroupIdT !== Number(0) &&  <>\n\n      <ChatUserInfoTopBar chatGroup={chatGroup}\n\t                  userData={props.userData}\n\t\t          />\n\n      <ChatScreen messages={displayMessage}  \n\t          commentObj={commentObj !==null ? commentObj.results: []} \n\t          currentUser={props.userData.id}\n\t\t  loadUpHandler={loadUpHandler}\n\t          loadDownHandler={loadDownHandler}\n\t          chatGroup={chatGroup}\n\t\t  />\n\t\n    <div className={classes.chatInput}>\n\n        <form className={classes.addCommentForm} onSubmit={sendMessage}>\n\t\t  \n\t          <button type=\"button\" className={classes.uploadButton}> <BsEmojiSmile className={classes.uploadIcon}/></button>\n\n                  <button type=\"button\" className={classes.uploadButton}> <ImAttachment className={classes.uploadIcon}/></button>\n\n                  <div className={classes.chatInput} >\n\n                      <input className={classes.inputTextBox} value={message} onChange={handleChange} />\n\n\n                  </div>\n\n                 \n                 <button type=\"submit\"  className= {classes.submit_button} ><b><MdSend className={classes.sendButtonIcon}/> </b> </button>\n                  \n       </form>\n\n\n    </div>\n\n</>\n\n }\n\t\n</div>\n\n\n \n\n\n);\n\n}\n\nexport default ChatWindow;\n"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,EAAiCC,MAAjC,QAA8C,OAA9C;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,UAAP,MAAuB,cAAvB,C,CACA;;AACA,SAAQC,YAAY,IAAIC,YAAxB,QAA4C,WAA5C,C,CACA;;AACA,OAAO,+BAAP,C,CACA;AACA;;AACA,SAAQC,MAAR,QAAqB,gBAArB;AACA,SAAQC,eAAR,EAAwBC,eAAxB,EAAyCC,gBAAzC,QAAgE,iCAAhE;AACA,SAAQC,YAAR,QAA2B,gBAA3B;AACA,SAAQC,YAAR,QAA2B,gBAA3B;;;;AAGA,SAASC,OAAT,GAAmB;EAEnB,IAAIC,MAAJ;EACA,IAAIC,gBAAgB,GAAG,EAAvB;EACA,IAAIC,WAAW,GAAG,KAAlB;EACA,IAAIC,gBAAgB,GAAG,KAAvB,CALmB,CAOnB;;EACA,IAAIC,oBAAoB,GAAG,EAA3B;;EAGA,SAASC,SAAT,CAAmBC,KAAnB,EAAyB;IAEvBH,gBAAgB,GAAGG,KAAnB;EACD;;EAID,SAASC,EAAT,CAAYC,EAAZ,EAAgB;IACZP,gBAAgB,CAACQ,IAAjB,CAAsBD,EAAtB;EACD;;EAEF,SAASE,GAAT,CAAaF,EAAb,EAAiB;IACdP,gBAAgB,GAAGA,gBAAgB,CAACU,MAAjB,CAAwBC,CAAC,IAAIA,CAAC,KAAKJ,EAAnC,CAAnB;EACD;;EAEH,SAASK,aAAT,CAAuBL,EAAvB,EAA2B;IACvBJ,oBAAoB,CAACK,IAArB,CAA0BD,EAA1B;IACA,OAAO,MAAM;MACXJ,oBAAoB,GAAGA,oBAAoB,CAACO,MAArB,CAA4BC,CAAC,IAAIA,CAAC,KAAKJ,EAAvC,CAAvB;IACD,CAFD;EAGD;;EASH,SAASM,KAAT,GAAkB;IAGdd,MAAM,GAAG,IAAIR,YAAJ,CAAiB,oEAAjB,CAAT;;IAIDQ,MAAM,CAACe,OAAP,GAAiB,MAAM;MACrBb,WAAW,GAAC,KAAZ;MACAE,oBAAoB,CAACY,OAArB,CAA6BR,EAAE,IAAIA,EAAE,CAAC,KAAD,CAArC;;MACA,IAAGL,gBAAH,EAAoB;QAClBc,UAAU,CAACH,KAAD,EAAQ,IAAR,CAAV;MACD;IACF,CAND;;IAQAd,MAAM,CAACkB,MAAP,GAAc,MAAI;MAChBhB,WAAW,GAAC,IAAZ;MACAE,oBAAoB,CAACY,OAArB,CAA6BR,EAAE,IAAIA,EAAE,CAAC,IAAD,CAArC;MAEAR,MAAM,CAACmB,IAAP,CAAYC,IAAI,CAACC,SAAL,CAAe;QACpB,UAAS,YADW;QAEpB,WAAW,UAAQ,GAAR,GAAY,GAAZ,GAAgB,IAFP;QAGpB,gBAAgB,GAHI;QAIpB,mBAAkB,EAJE;QAKpB,eAAc;MALM,CAAf,CAAZ;IAcD,CAlBD;;IAoBArB,MAAM,CAACsB,SAAP,GAAoBC,KAAD,IAAS;MAC3B,MAAMC,cAAc,GAAGJ,IAAI,CAACK,KAAL,CAAWF,KAAK,CAACG,IAAjB,CAAvB;MACAzB,gBAAgB,CAACe,OAAjB,CAAyBR,EAAE,IAAIA,EAAE,CAACgB,cAAc,CAACG,OAAhB,CAAjC;IACA,CAHD;EAMF;;EAEDb,KAAK;EAQL,OAAO;IACHP,EADG;IAEHG,GAFG;IAGHG,aAHG;IAIHR,SAJG;IAKHF,gBAAgB,EAAE,MAAIA,gBALnB;IAMHyB,SAAS,EAAE,MAAM5B,MANd;IAOHE,WAAW,EAAE,MAAMA,WAPhB;IAQH2B,KAAK,EAAE,MAAM7B,MAAM,CAAC6B,KAAP;EARV,CAAP;AAUC;;KArGQ9B,O;AAuGT,MAAMC,MAAM,GAAGD,OAAO,EAAtB;;AAIA,SAAS+B,WAAT,GAAuB;EAAA;;EACrB,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0B/C,QAAQ,CAAC,CAAC,EAAD,CAAD,CAAxC;EAEAC,SAAS,CAAC,MAAM;IACd,SAAS+C,aAAT,CAAuBN,OAAvB,EAAgC;MAC9BK,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcJ,OAAd,CAAD,CAAX;IACD;;IACC3B,MAAM,CAACO,EAAP,CAAU0B,aAAV;IACD,OAAO,MAAM;MACZjC,MAAM,CAACU,GAAP,CAAWuB,aAAX;IACQ,CAFT;EAGF,CARQ,EAQN,CAACF,QAAD,EAAWC,WAAX,CARM,CAAT;EAUA,OAAOD,QAAP;AACD;;GAdQD,W;;AAsBT,MAAMI,UAAU,GAAIC,KAAD,IAAU;EAAA;;EAIzB;EAEA,MAAMC,UAAU,GAAGjD,MAAM,CAAC,IAAD,CAAzB;EACA,IAAImB,KAAK,GAAC,IAAV;EACAN,MAAM,CAACK,SAAP,CAAiBC,KAAjB,EARyB,CASzB;EACA;;EAEA,IAAIJ,WAAW,GAAGF,MAAM,CAACE,WAAP,EAAlB;EAEAmC,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BpC,WAA7B;EAEA,MAAM,CAACqC,UAAD,EAAYC,iBAAZ,IAA+BvD,QAAQ,CAAC,IAAD,CAA7C;EAEA,MAAM,CAAC0C,OAAD,EAAUc,UAAV,IAAwBxD,QAAQ,CAAC,EAAD,CAAtC;EAEA,MAAM8C,QAAQ,GAAGD,WAAW,EAA5B;EAEA,IAAIY,WAAW,GAAGX,QAAQ,CAACY,EAAT,CAAY,CAAC,CAAb,EAAgBC,KAAhB,CAAsB,GAAtB,CAAlB;EAEA,MAAMC,cAAc,GAAGC,MAAM,CAACJ,WAAW,CAACA,WAAW,CAACK,MAAZ,GAAqB,CAAtB,CAAZ,CAA7B,CAxByB,CA0BzB;;EAEA,MAAMC,eAAe,GAAEb,KAAK,CAACc,cAA7B,CA5ByB,CA8BzB;;EAEA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAuBlE,QAAQ,CAAC,CAAD,CAArC;;EAEA,MAAMmE,aAAa,GAAC,MAAI;IAEtB,IAAGb,UAAU,KAAI,IAAd,IAAsBA,UAAU,CAACc,IAAX,KAAmB,IAA5C,EAAiD;MAC/CF,UAAU,CAACD,OAAO,IAAEA,OAAO,GAAG,CAApB,CAAV;IACA;EACH,CALD;;EAQA,MAAMI,eAAe,GAAC,MAAI;IAExB,IAAGf,UAAU,KAAI,IAAd,IAAsBA,UAAU,CAACgB,QAAX,KAAuB,IAAhD,EAAqD;MACjDJ,UAAU,CAACD,OAAO,IAAEA,OAAO,GAAG,CAApB,CAAV;IACD;EAEJ,CAND;;EAaD,IAAIM,cAAc,GAAC,EAAnB;;EAEA,IAAIX,cAAc,KAAKG,eAAvB,EAAwC;IAEnCQ,cAAc,GAACzB,QAAf;EAEF;;EAEH,MAAM0B,YAAY,GAAIC,CAAD,IAAO;IACzBjB,UAAU,CAACkB,GAAG,IAAED,CAAC,CAACE,MAAF,CAAStD,KAAf,CAAV;EAGF,CAJD;;EAMApB,SAAS,CAAC,MAAI;IAIX,OAAO,MAAI;MACRkD,UAAU,CAACyB,OAAX,GAAqB,KAArB;MACP7D,MAAM,CAACK,SAAP,CAAiB,KAAjB,EAFe,CAGT;IACA,CAJF;EAKA,CATM,EASL,CAACH,WAAD,CATK,CAAT;EAYC,MAAM,CAAC4D,SAAD,EAAYC,gBAAZ,IAAgC9E,QAAQ,CAAC,IAAD,CAA9C;EAGDC,SAAS,CAAC,MAAI;IACZ,MAAM8E,OAAO,GAAC7B,KAAK,CAACc,cAApB;IACA,IAAIgB,MAAM,GAACf,OAAX;IACAvD,eAAe,CAAC;MAAC6C,iBAAD;MAAoBwB,OAApB;MAA4BC;IAA5B,CAAD,CAAf;IACArE,gBAAgB,CAAC;MAACoE,OAAD;MAAUD;IAAV,CAAD,CAAhB;EAED,CANQ,EAMP,CAAC5B,KAAK,CAACc,cAAP,EAAuBd,KAAK,CAAC+B,QAAN,CAAeC,EAAtC,EAAyCjB,OAAzC,CANO,CAAT;EAUCb,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BwB,SAA3B,EA9FyB,CAiGzB;EACA;EACA;;EAED,SAASM,WAAT,CAAqBV,CAArB,EAAwB;IACvBA,CAAC,CAACW,cAAF;;IACA,IAAG1C,OAAO,KAAK,EAAf,EAAkB;MAClB3B,MAAM,CAAC4B,SAAP,GAAmBT,IAAnB,CAAwBC,IAAI,CAACC,SAAL,CAAe;QACtC,UAAS,YAD6B;QAEtC,WAAWM,OAAO,GAAC,GAAR,GAAYQ,KAAK,CAAC+B,QAAN,CAAeC,EAA3B,GAA8B,GAA9B,GAAkChC,KAAK,CAACc,cAFb;QAGtC,gBAAed,KAAK,CAAC+B,QAAN,CAAeC,EAHQ;QAItC,mBAAkB,EAJoB;QAKtC,eAAchC,KAAK,CAACc;MALkB,CAAf,CAAxB;MAQC,MAAMqB,OAAO,GAAG3C,OAAhB;MACA,MAAM4C,MAAM,GAAGpC,KAAK,CAAC+B,QAAN,CAAeC,EAA9B;MAEA,MAAMH,OAAO,GAAC7B,KAAK,CAACc,cAApB;MACAvD,eAAe,CAAC;QAACsE,OAAD;QAASO,MAAT;QAAgBD;MAAhB,CAAD,CAAf;IAEA;;IAED7B,UAAU,CAAC,EAAD,CAAV;EACA,CAzHyB,CA4H1B;EAGA;;;EAIH,oBAKA;IAAK,SAAS,EAAErD,OAAO,CAACoF,UAAxB;IAAA,WAIGxB,eAAe,KAAKF,MAAM,CAAC,CAAD,CAA1B,iBAAiC;MAAK,SAAS,EAAE1D,OAAO,CAACqF,gBAAxB;MAAA,6BAA2C;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA3C;IAAA;MAAA;MAAA;MAAA;IAAA,QAJpC,EAQGzB,eAAe,KAAKF,MAAM,CAAC,CAAD,CAA1B,iBAAkC;MAAA,wBAE/B,QAAC,kBAAD;QAAoB,SAAS,EAAEgB,SAA/B;QACa,QAAQ,EAAE3B,KAAK,CAAC+B;MAD7B;QAAA;QAAA;QAAA;MAAA,QAF+B,eAM/B,QAAC,UAAD;QAAY,QAAQ,EAAEV,cAAtB;QACK,UAAU,EAAEjB,UAAU,KAAI,IAAd,GAAqBA,UAAU,CAACmC,OAAhC,GAAyC,EAD1D;QAEK,WAAW,EAAEvC,KAAK,CAAC+B,QAAN,CAAeC,EAFjC;QAGF,aAAa,EAAEf,aAHb;QAIK,eAAe,EAAEE,eAJtB;QAKK,SAAS,EAAEQ;MALhB;QAAA;QAAA;QAAA;MAAA,QAN+B,eAcjC;QAAK,SAAS,EAAE1E,OAAO,CAACuF,SAAxB;QAAA,uBAEI;UAAM,SAAS,EAAEvF,OAAO,CAACwF,cAAzB;UAAyC,QAAQ,EAAER,WAAnD;UAAA,wBAEG;YAAQ,IAAI,EAAC,QAAb;YAAsB,SAAS,EAAEhF,OAAO,CAACyF,YAAzC;YAAA,6BAAwD,QAAC,YAAD;cAAc,SAAS,EAAEzF,OAAO,CAAC0F;YAAjC;cAAA;cAAA;cAAA;YAAA,QAAxD;UAAA;YAAA;YAAA;YAAA;UAAA,QAFH,eAIU;YAAQ,IAAI,EAAC,QAAb;YAAsB,SAAS,EAAE1F,OAAO,CAACyF,YAAzC;YAAA,6BAAwD,QAAC,YAAD;cAAc,SAAS,EAAEzF,OAAO,CAAC0F;YAAjC;cAAA;cAAA;cAAA;YAAA,QAAxD;UAAA;YAAA;YAAA;YAAA;UAAA,QAJV,eAMU;YAAK,SAAS,EAAE1F,OAAO,CAACuF,SAAxB;YAAA,uBAEI;cAAO,SAAS,EAAEvF,OAAO,CAAC2F,YAA1B;cAAwC,KAAK,EAAEpD,OAA/C;cAAwD,QAAQ,EAAE8B;YAAlE;cAAA;cAAA;cAAA;YAAA;UAFJ;YAAA;YAAA;YAAA;UAAA,QANV,eAcS;YAAQ,IAAI,EAAC,QAAb;YAAuB,SAAS,EAAGrE,OAAO,CAAC4F,aAA3C;YAAA,wBAA2D;cAAA,wBAAG,QAAC,MAAD;gBAAQ,SAAS,EAAE5F,OAAO,CAAC6F;cAA3B;gBAAA;gBAAA;gBAAA;cAAA,QAAH;YAAA;cAAA;cAAA;cAAA;YAAA,QAA3D;UAAA;YAAA;YAAA;YAAA;UAAA,QAdT;QAAA;UAAA;UAAA;UAAA;QAAA;MAFJ;QAAA;QAAA;QAAA;MAAA,QAdiC;IAAA,gBARrC;EAAA;IAAA;IAAA;IAAA;EAAA,QALA;AA8DC,CAjMD;;IAAM/C,U;UAoBeJ,W;;;MApBfI,U;AAmMN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}