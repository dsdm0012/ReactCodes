{"ast":null,"code":"import _toConsumableArray from\"/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect,useRef}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Participant=function Participant(_ref){var participant=_ref.participant;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),videoTracks=_useState2[0],setVideoTracks=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),audioTracks=_useState4[0],setAudioTracks=_useState4[1];var videoRef=useRef();var audioRef=useRef();var trackpubsToTracks=function trackpubsToTracks(trackMap){return Array.from(trackMap.values()).map(function(publication){return publication.track;}).filter(function(track){return track!==null;});};useEffect(function(){setVideoTracks(trackpubsToTracks(participant.videoTracks));setAudioTracks(trackpubsToTracks(participant.audioTracks));var trackSubscribed=function trackSubscribed(track){if(track.kind===\"video\"){setVideoTracks(function(videoTracks){return[].concat(_toConsumableArray(videoTracks),[track]);});}else if(track.kind===\"audio\"){setAudioTracks(function(audioTracks){return[].concat(_toConsumableArray(audioTracks),[track]);});}};var trackUnsubscribed=function trackUnsubscribed(track){if(track.kind===\"video\"){setVideoTracks(function(videoTracks){return videoTracks.filter(function(v){return v!==track;});});}else if(track.kind===\"audio\"){setAudioTracks(function(audioTracks){return audioTracks.filter(function(a){return a!==track;});});}};participant.on(\"trackSubscribed\",trackSubscribed);participant.on(\"trackUnsubscribed\",trackUnsubscribed);return function(){setVideoTracks([]);setAudioTracks([]);participant.removeAllListeners();};},[participant]);//reload to browser if video setting changes of the participant\nuseEffect(function(){var videoTrack=videoTracks[0];if(videoTrack){videoTrack.attach(videoRef.current);return function(){videoTrack.detach();};}},[videoTracks]);//reload to browser if audio setting changes of the participant\nuseEffect(function(){var audioTrack=audioTracks[0];if(audioTrack){audioTrack.attach(audioRef.current);return function(){audioTrack.detach();};}},[audioTracks]);console.log(\"Participant: \",participant.sid);console.log(\"audioTracks.length: \",audioTracks.length);console.log(\"videoTracks.lengh: \",videoTracks.length);console.log(\"videoRef: \",videoRef);var turnOffVideoHandler=function turnOffVideoHandler(){setVideoTracks([]);};var turnOnVideoHandler=function turnOnVideoHandler(){setVideoTracks(trackpubsToTracks(participant.videoTracks));};var turnOffAudioHandler=function turnOffAudioHandler(){setAudioTracks([]);};var turnOnAudioHandler=function turnOnAudioHandler(){setAudioTracks(trackpubsToTracks(participant.audioTracks));};return/*#__PURE__*/_jsxs(\"div\",{className:\"participant\",children:[/*#__PURE__*/_jsx(\"h3\",{children:participant.identity}),/*#__PURE__*/_jsx(\"video\",{ref:videoRef,autoPlay:true}),/*#__PURE__*/_jsx(\"audio\",{ref:audioRef,autoPlay:true,muted:false}),videoTracks.length>0&&/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:turnOffVideoHandler,children:\" video turn off\"}),videoTracks.length===0&&/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:turnOnVideoHandler,children:\" video turn on \"}),audioTracks.length>0&&/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:turnOffAudioHandler,children:\" audio turn off\"}),audioTracks.length===0&&/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:turnOnAudioHandler,children:\" audio turn on \"})]});};export default Participant;","map":{"version":3,"sources":["/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/VideoPlayer/TwilioVideo/Participant.js"],"names":["React","useState","useEffect","useRef","Participant","participant","videoTracks","setVideoTracks","audioTracks","setAudioTracks","videoRef","audioRef","trackpubsToTracks","trackMap","Array","from","values","map","publication","track","filter","trackSubscribed","kind","trackUnsubscribed","v","a","on","removeAllListeners","videoTrack","attach","current","detach","audioTrack","console","log","sid","length","turnOffVideoHandler","turnOnVideoHandler","turnOffAudioHandler","turnOnAudioHandler","identity"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\n\nconst Participant = ({ participant }) => {\n  const [videoTracks, setVideoTracks] = useState([]);\n  const [audioTracks, setAudioTracks] = useState([]);\n\n\n  const videoRef = useRef();\n  const audioRef = useRef();\n\n  const trackpubsToTracks = (trackMap) =>\n    Array.from(trackMap.values())\n      .map((publication) => publication.track)\n      .filter((track) => track !== null);\n\n  useEffect(() => {\n    setVideoTracks(trackpubsToTracks(participant.videoTracks));\n    setAudioTracks(trackpubsToTracks(participant.audioTracks));\n   \n    const trackSubscribed = (track) => {\n      if (track.kind === \"video\") {\n        setVideoTracks((videoTracks) => [...videoTracks, track]);\n      } else if (track.kind === \"audio\") {\n        setAudioTracks((audioTracks) => [...audioTracks, track]);\n      }\n    };\n\n    const trackUnsubscribed = (track) => {\n      if (track.kind === \"video\") {\n        setVideoTracks((videoTracks) => videoTracks.filter((v) => v !== track));\n      } else if (track.kind === \"audio\") {\n        setAudioTracks((audioTracks) => audioTracks.filter((a) => a !== track));\n      }\n    };\n\n    participant.on(\"trackSubscribed\", trackSubscribed);\n    participant.on(\"trackUnsubscribed\", trackUnsubscribed);\n    \n  \n\n\n\n    return () => {\n      setVideoTracks([]);\n      setAudioTracks([]);\n      participant.removeAllListeners();\n    };\n  }, [participant]);\n\n\n\n  //reload to browser if video setting changes of the participant\n  useEffect(() => {\n    const videoTrack = videoTracks[0];\n    if (videoTrack) {\n      videoTrack.attach(videoRef.current);\n      return () => {\n        videoTrack.detach();\n      };\n    }\n  }, [videoTracks]);\n\n\n\n  //reload to browser if audio setting changes of the participant\n  useEffect(() => {\n    const audioTrack = audioTracks[0];\n    if (audioTrack) {\n      audioTrack.attach(audioRef.current);\n      return () => {\n        audioTrack.detach();\n      };\n    }\n  }, [audioTracks]);\n\n\n\n    console.log(\"Participant: \",participant.sid )\n    console.log(\"audioTracks.length: \",audioTracks.length)\n    console.log(\"videoTracks.lengh: \", videoTracks.length)\n    console.log(\"videoRef: \", videoRef);\n\n\n   const turnOffVideoHandler=()=>{\n    setVideoTracks([]);\n   }\n\n\n   const turnOnVideoHandler=()=>{\n    setVideoTracks(trackpubsToTracks(participant.videoTracks));\n   }\n\n   const turnOffAudioHandler=()=>{\n    setAudioTracks([]);\n   }\n\n\n   const turnOnAudioHandler=()=>{\n    setAudioTracks(trackpubsToTracks(participant.audioTracks));\n   }\n\n\n\n\n\n\n\n\n\n\n  return (\n    <div className=\"participant\">\n      <h3>{participant.identity}</h3>\n      <video ref={videoRef} autoPlay={true}  />\n      <audio ref={audioRef} autoPlay={true} muted={false} />\n\t   \n\t  { videoTracks.length > 0 && <button type='button' onClick={turnOffVideoHandler}> video turn off</button>}\t \n          { videoTracks.length===0 && <button type='button' onClick={turnOnVideoHandler}> video turn on </button>}\n\n\t  { audioTracks.length > 0 && <button type='button' onClick={turnOffAudioHandler}> audio turn off</button>}\n          { audioTracks.length ===0 && <button type='button' onClick={turnOnAudioHandler}> audio turn on </button>}\n\n\n\n    </div>\n  );\n};\n\nexport default Participant;\n"]},"metadata":{},"sourceType":"module"}