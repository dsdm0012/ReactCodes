{"ast":null,"code":"var _jsxFileName = \"/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/MainApps/Dashboard/General/Notices/NoticeBox.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport classes from './NoticeBox.module.css';\nimport { BsCheckCircle } from 'react-icons/bs';\nimport { deletenoticebyId, removenoticebyId } from '../../../../CommonApps/AllAPICalls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NoticeBox = props => {\n  _s();\n\n  const [bkgColor, setBkgColor] = useState('white');\n  useEffect(() => {\n    props.read && setBkgColor(bkgColor => '#F0F0F0');\n  }, [props.read]);\n\n  const noticeCreationTime = ({\n    datetime\n  }) => {\n    let date = datetime.split(\"T\").at(0);\n    let time_ = datetime.split(\"T\").at(1);\n    let timehour = datetime.split(\"T\").at(1).split(\":\").at(0);\n    let timemin = datetime.split(\"T\").at(1).split(\":\").at(1);\n    let timesec = datetime.split(\"T\").at(1).split(\":\").at(2);\n    let totalTime = timehour + \":\" + timemin + \":\" + timesec;\n    let timeFormat = date + \" \" + totalTime + \" \" + \"UTC\";\n    console.log(\"datetime: \", timeFormat);\n    let DatetimeLocalFull = new Date(timeFormat);\n    let DatetimeLocalFullStr = String(DatetimeLocalFull);\n    console.log(\"DatetimeLocalFullStr: \", DatetimeLocalFullStr);\n    let dayStr = DatetimeLocalFullStr.split(\" \").at(0);\n    let dateStr = DatetimeLocalFullStr.split(\" \").at(2);\n    let month = DatetimeLocalFullStr.split(\" \").at(1);\n    let year = DatetimeLocalFullStr.split(\" \").at(3);\n    let fullTimeLocal = DatetimeLocalFullStr.split(\" \").at(4);\n    let fullTimeLocalStr = String(fullTimeLocal);\n    let localTimeHour = fullTimeLocalStr.split(\":\").at(0);\n    let localTimeMin = fullTimeLocalStr.split(\":\").at(1);\n    let ampm;\n\n    if (localTimeHour < 12) {\n      ampm = \"am\";\n    }\n\n    if (localTimeHour > 12) {\n      localTimeHour = localTimeHour - 12;\n      ampm = \"pm\";\n    }\n\n    let time = String(localTimeHour) + \":\" + String(localTimeMin) + String(ampm) + \", \" + String(dateStr) + \" \" + String(month) + \" \" + String(year);\n    return time;\n  };\n\n  let datetime = props.Notice.creationTime;\n\n  const deleteNoticeHandler = () => {\n    let noticeId = props.Notice.id;\n    deletenoticebyId({\n      noticeId,\n      props\n    });\n  };\n\n  const removeNoticeHandler = () => {\n    let noticeId = props.Notice.id;\n    console.log(\"remove handler\");\n    removenoticebyId({\n      noticeId,\n      props\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.noticeBox,\n    style: {\n      backgroundColor: bkgColor\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.topSection,\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        className: classes.noticeID,\n        children: [\"Notice ID: EDR-\", props.Notice.id]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 2\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: classes.creationTime,\n        children: [\" Created at: \", noticeCreationTime({\n          datetime\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 2\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.midSection,\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\"  \", props.Notice.noticeTitle, \"   \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 44\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: props.Notice.noticeText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 85\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.buttomSection,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.noticeBoxButtonView,\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"detail view\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 50\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 1\n      }, this), props.read && /*#__PURE__*/_jsxDEV(BsCheckCircle, {\n        className: classes.noticeReadIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), !props.read && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.noticeBoxButtonRead,\n        onClick: props.markAsRead,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"mark as read\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 3\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 18\n      }, this), props.userData !== null && Number(props.userData.id) === Number(props.Notice.creater) && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.noticeBoxButtonHide,\n        onClick: deleteNoticeHandler,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 2\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 4\n      }, this), props.userData !== null && Number(props.userData.id) !== Number(props.Notice.creater) && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.noticeBoxButtonHide,\n        onClick: removeNoticeHandler,\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          children: \"remove\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 1\n  }, this);\n};\n\n_s(NoticeBox, \"cSajXzBOTFjKM3JENcMBEZyTfYo=\");\n\n_c = NoticeBox;\nexport default NoticeBox;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoticeBox\");","map":{"version":3,"sources":["/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/MainApps/Dashboard/General/Notices/NoticeBox.js"],"names":["React","useState","useEffect","classes","BsCheckCircle","deletenoticebyId","removenoticebyId","NoticeBox","props","bkgColor","setBkgColor","read","noticeCreationTime","datetime","date","split","at","time_","timehour","timemin","timesec","totalTime","timeFormat","console","log","DatetimeLocalFull","Date","DatetimeLocalFullStr","String","dayStr","dateStr","month","year","fullTimeLocal","fullTimeLocalStr","localTimeHour","localTimeMin","ampm","time","Notice","creationTime","deleteNoticeHandler","noticeId","id","removeNoticeHandler","noticeBox","backgroundColor","topSection","noticeID","midSection","noticeTitle","noticeText","buttomSection","noticeBoxButtonView","noticeReadIcon","noticeBoxButtonRead","markAsRead","userData","Number","creater","noticeBoxButtonHide"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport classes from './NoticeBox.module.css';\nimport {BsCheckCircle} from 'react-icons/bs';\n\n\nimport {deletenoticebyId, removenoticebyId} from '../../../../CommonApps/AllAPICalls';\n\n\n\n\nconst NoticeBox =(props)=>{\n\n\n\nconst [bkgColor, setBkgColor] = useState('white');\n\n\n\n\nuseEffect(()=>{\n\n\tprops.read && setBkgColor(bkgColor=>'#F0F0F0');\n\n},[props.read]);\t\n\n\n    const noticeCreationTime=({datetime})=>{\n\n\n     let date= datetime.split(\"T\").at(0);\n     let time_ = datetime.split(\"T\").at(1);\n\n\n     let timehour=datetime.split(\"T\").at(1).split(\":\").at(0);\n     let timemin=datetime.split(\"T\").at(1).split(\":\").at(1);\n     let timesec=datetime.split(\"T\").at(1).split(\":\").at(2);\n\n     let totalTime=timehour+\":\"+timemin+\":\"+timesec;\n\n     let timeFormat =  date+\" \"+totalTime+\" \"+\"UTC\";\n\n     console.log(\"datetime: \", timeFormat);\n\n     let DatetimeLocalFull = new Date(timeFormat);\n\n\n     let DatetimeLocalFullStr= String(DatetimeLocalFull);\n     console.log(\"DatetimeLocalFullStr: \",DatetimeLocalFullStr);\n\n     let dayStr=DatetimeLocalFullStr.split(\" \").at(0);\n     let dateStr=DatetimeLocalFullStr.split(\" \").at(2);\n     let month= DatetimeLocalFullStr.split(\" \").at(1);\n     let year = DatetimeLocalFullStr.split(\" \").at(3);\t    \n\n     let fullTimeLocal = DatetimeLocalFullStr.split(\" \").at(4);\n\n     let fullTimeLocalStr = String(fullTimeLocal);\n\n     let localTimeHour = fullTimeLocalStr.split(\":\").at(0);\n     let localTimeMin = fullTimeLocalStr.split(\":\").at(1);\n\n\n\n     let ampm;\n     if(localTimeHour < 12){\n      ampm=\"am\";\n     }\n     if(localTimeHour > 12){\n       localTimeHour=localTimeHour-12;\n       ampm=\"pm\"\n     }\n\n     let time=String(localTimeHour)+\":\"+String(localTimeMin)+String(ampm)+\", \"+String(dateStr)+\" \"+String(month)+\" \"+String(year);\n\n     return time;\n\n   }\n\n\n   let datetime= props.Notice.creationTime;\n\n\n\n   const deleteNoticeHandler=()=>{\n\n     let noticeId=props.Notice.id;\t   \n     deletenoticebyId({noticeId,props});\n\n\n   }\n\n\n   const removeNoticeHandler=()=>{\n     let noticeId=props.Notice.id;\n     console.log(\"remove handler\")\t   \n     removenoticebyId({noticeId, props});\n   }\t\n\n\n\n\n\n\n\n\n\n\n\n\nreturn (\n\n<div className={classes.noticeBox} style={{backgroundColor:bkgColor}}>\n\n\n<div className={classes.topSection}> \n\t<i className={classes.noticeID}>Notice ID: EDR-{props.Notice.id}</i>  \n\t<i className={classes.creationTime}> Created at: {noticeCreationTime({datetime})}</i>  \n\n</div>\n\n\n<div className={classes.midSection}> <div> <h2>  {props.Notice.noticeTitle}   </h2> <p>{props.Notice.noticeText}</p></div></div>\n\n<div className={classes.buttomSection}> \n\n<button className={classes.noticeBoxButtonView}> <i>detail view</i></button>\n\n\n{props.read &&  <BsCheckCircle className={classes.noticeReadIcon}/>}\t\n\n\n\t{!props.read && <button className={classes.noticeBoxButtonRead} onClick={props.markAsRead}> \n\n \t<i>mark as read</i>\n\n        </button>}\n\n   { props.userData !==null && Number(props.userData.id) === Number(props.Notice.creater) &&\n   <button className={classes.noticeBoxButtonHide} onClick={deleteNoticeHandler}> \n\t<i>delete</i>\n   </button>\n   }\n\n   { props.userData !==null && Number(props.userData.id) !== Number(props.Notice.creater) &&\n   <button className={classes.noticeBoxButtonHide} onClick={removeNoticeHandler}> \n        <i>remove</i>\n   </button>\n   }\n\n\n\n\n</div>\t\n\n\n\n\n</div>\n\n);\n\n}\n\n\nexport default NoticeBox;\n"]},"metadata":{},"sourceType":"module"}