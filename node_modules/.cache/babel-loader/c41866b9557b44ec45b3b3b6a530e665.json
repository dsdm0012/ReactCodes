{"ast":null,"code":"import React from 'react';\nimport { w3cwebsocket as W3CWebSocket } from 'websocket';\n\nconst CentralSocketConnection = () => {\n  //let client;\n  //if (window.location.host === 'localhost:3000'){ \n  let client = new W3CWebSocket('ws://127.0.0.1:8000/ws/notification/all/'); //    }\n\n  let isConnected = false; //client.onopen=()=>{\n  //  isConnected = true;\n  //  console.log('isConnected dashboard: ', isConnected);\t  \n  //}\n  //console.log('isConnected dashboard: ', isConnected);\n\n  return client;\n};\n\n_c = CentralSocketConnection;\nexport default CentralSocketConnection;\n\nvar _c;\n\n$RefreshReg$(_c, \"CentralSocketConnection\");","map":{"version":3,"names":["React","w3cwebsocket","W3CWebSocket","CentralSocketConnection","client","isConnected"],"sources":["/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/CentralSocketConnection.js"],"sourcesContent":["import React from 'react';\n\nimport {w3cwebsocket as W3CWebSocket } from 'websocket';\n\n\n\n\nconst CentralSocketConnection = () =>{\n\n  //let client;\n  //if (window.location.host === 'localhost:3000'){ \n  let  client = new W3CWebSocket('ws://127.0.0.1:8000/ws/notification/all/');\n  //    }\n\n\n  let isConnected=false;\n\n  //client.onopen=()=>{\n  //  isConnected = true;\n  //  console.log('isConnected dashboard: ', isConnected);\t  \n  //}\n  //console.log('isConnected dashboard: ', isConnected);\n\n\n\n\n\n\n\nreturn (client)\n\n\n}\n\nexport default CentralSocketConnection;\n\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAAQC,YAAY,IAAIC,YAAxB,QAA4C,WAA5C;;AAKA,MAAMC,uBAAuB,GAAG,MAAK;EAEnC;EACA;EACA,IAAKC,MAAM,GAAG,IAAIF,YAAJ,CAAiB,0CAAjB,CAAd,CAJmC,CAKnC;;EAGA,IAAIG,WAAW,GAAC,KAAhB,CARmC,CAUnC;EACA;EACA;EACA;EACA;;EAQF,OAAQD,MAAR;AAGC,CAzBD;;KAAMD,uB;AA2BN,eAAeA,uBAAf"},"metadata":{},"sourceType":"module"}