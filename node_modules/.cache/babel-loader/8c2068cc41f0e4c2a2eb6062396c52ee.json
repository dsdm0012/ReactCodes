{"ast":null,"code":"import axiosInstance from '../axios';\nimport { Logout } from './Logout';\nexport const getuser = ({\n  setData\n}) => {\n  axiosInstance.get().then(res => {\n    setData(data => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const putuser = ({\n  data,\n  formData\n}) => {\n  axiosInstance.put('', {\n    \"email\": data.email,\n    \"username\": data.username,\n    \"firstname\": formData.firstname,\n    \"lastname\": formData.lastname,\n    \"gender\": formData.gender,\n    \"role\": \"student\",\n    \"position\": formData.position,\n    \"dateofbirth\": formData.dateofbirth\n  }).then(res => {}).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getticket = ({\n  ticketId,\n  setData\n}) => {\n  axiosInstance.get(`tickets/${ticketId}/`).then(res => {\n    setData(data => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getalltickets = ({\n  setData\n}) => {\n  axiosInstance.get(`tickets/`).then(res => {\n    setData(data => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getuserbyId = ({\n  userId,\n  setUserData\n}) => {\n  axiosInstance.get(`/${userId}/`).then(res => {\n    setUserData(userData => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n\n    if (error.response.status === 404) {\n      console.log(\"here is the error\");\n    }\n  });\n};\nexport const getticketscategory = ({\n  setTicketType\n}) => {\n  axiosInstance.get(`tickets/category/`).then(res => {\n    setTicketType(data => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getcategorybyId = ({\n  ticketCategory,\n  setCatData\n}) => {\n  axiosInstance.get(`tickets/category/${ticketCategory}/`).then(res => {\n    setCatData(data => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const createticket = ({\n  formData,\n  data\n}) => {\n  axiosInstance.post(`tickets/`, {\n    \"title\": formData.title,\n    \"author\": data.id,\n    \"category\": formData.category,\n    \"excerpt\": formData.keywords,\n    \"content\": formData.description,\n    \"status\": \"closed\",\n    \"pstatus\": \"draft\",\n    \"priority\": formData.priority,\n    \"resolution\": \"unresolved\"\n  }).then(res => {}).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const postcomment = ({\n  ticketId,\n  userId,\n  comment\n}) => {\n  axiosInstance.post(`tickets/comments/`, {\n    \"ticketId\": ticketId,\n    \"commenter\": userId,\n    \"commenttext\": comment\n  }).then(res => {}).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getcomments = ({\n  setCommentObj,\n  ticketId\n}) => {\n  axiosInstance.get(`tickets/comments/${ticketId}/`).then(res => {\n    setCommentObj(commentObj => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getallusers = ({\n  setUsersData\n}) => {\n  axiosInstance.get(`/allusers/`).then(res => {\n    setUsersData(userData => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getfewusers = ({\n  num,\n  getFewUsers\n}) => {\n  axiosInstance.get(`/fewusers/${num}`).then(res => {\n    getFewUsers(fewUsers => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n}; //api/usersearch/?search=b\n\nexport const usersearchgeneral = ({\n  pageno,\n  searchString,\n  getSearchedUsers\n}) => {\n  axiosInstance.get(`/usersearch/?page=${pageno}&search=${searchString}`).then(res => {\n    getSearchedUsers(searchedUsers => res.data);\n    console.log(\"res.data: \", res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getpersonalgeneralchatgroups = ({\n  getChatGroups\n}) => {\n  axiosInstance.get(`getgeneralchatgroups/`).then(res => {\n    getChatGroups(chatGroups => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const postchatcomment = ({\n  groupId,\n  userId,\n  comment\n}) => {\n  axiosInstance.post(`chat/comments/`, {\n    \"groupId\": groupId,\n    \"commenter\": userId,\n    \"commenttext\": comment\n  }).then(res => {}).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getchatcomments = ({\n  setChatCommentObj,\n  groupId,\n  pageno\n}) => {\n  axiosInstance.get(`chat/comments/${groupId}/?page=${pageno}`).then(res => {\n    setChatCommentObj(commentObj => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getgroupchatcomments = ({\n  setChatCommentObj,\n  groupId\n}) => {\n  axiosInstance.get(`chat/comments/${groupId}/`).then(res => {\n    setChatCommentObj(commentObj => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const createchatgroup = ({\n  groupname,\n  groupMembers\n}) => {\n  axiosInstance.post(`chat/groups/`, {\n    \"name\": groupname,\n    \"displayname\": groupname,\n    \"groupuserObjects\": groupMembers,\n    \"groupType\": \"oneoone\"\n  }).then(res => {}).catch(error => {\n    if (error.response.status === 400) {\n      alert(\"User is already added. Refresh the page and try again.\");\n    }\n\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const checkifuseradded = ({\n  userId,\n  setUserExists,\n  createOneOOneGroup\n}) => {\n  axiosInstance.get(`checkifuserisadded/${userId}/`).then(res => {\n    setUserExists(userExists => res.data);\n    console.log(\"userExist: \", res.data.exists);\n\n    if (!res.data.exists) {\n      createOneOOneGroup({\n        userId\n      });\n      console.log(\"Used added\");\n    } else {\n      console.log(\"User exists...\");\n    }\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getchatgroups = ({\n  getChatGroups\n}) => {\n  axiosInstance.get(`chat/groups/`).then(res => {\n    getChatGroups(chatGroups => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\n/*\nexport const getgeneralchatgroups = ({getChatGroups})=>{\n\n\n    axiosInstance.get(`chat/groups/`)\n\n\n                        .then((res) => {\n\n                    getChatGroups(chatGroups=>res.data);\n\n                })\n         .catch((error)=>{\n\n                     if(error.response.status===401){\n                     Logout();\n\n                      }\n\n\n                });\n\n}\n*/\n\nexport const createcourse = ({\n  formData,\n  data\n}) => {\n  axiosInstance.post(`course/create/`, {\n    \"teacher\": data.id,\n    \"courseShortName\": formData.courseShortName,\n    \"courseFullName\": formData.courseFullName,\n    \"courseLocalCode\": formData.courseLocalCode,\n    \"courseStartDate\": formData.courseStartDate,\n    \"courseEndDate\": formData.courseEndDate,\n    \"designedFor\": formData.classname,\n    \"educationboard\": formData.educationboard,\n    \"subject\": formData.subject,\n    \"abouttheCourse\": formData.abouttheCourse,\n    \"instituteName\": formData.instituteName,\n    \"instituteCity\": \"BBSR\",\n    \"instituteCountry\": \"India\"\n  }).then(res => {}).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getclassrank = ({\n  setClassRank\n}) => {\n  axiosInstance.get(`course/coursecategories/`).then(res => {\n    setClassRank(data => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getclassobjectbyId = ({\n  classId,\n  setClassObject\n}) => {\n  axiosInstance.get(`course/class/${classId}/`).then(res => {\n    setClassObject(data => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getmeetingobjectbyId = ({\n  meetingId,\n  setMeetingObject\n}) => {\n  axiosInstance.get(`meeting/object/${meetingId}/`).then(res => {\n    setMeetingObject(data => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getsubjectsfromclassandboard = ({\n  classId,\n  boardId,\n  setSubjectsObject\n}) => {\n  axiosInstance.get(`course/subjects/${classId}/${boardId}`).then(res => {\n    setSubjectsObject(data => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getteachercourses = ({\n  teacherId,\n  setTeacherCourses\n}) => {\n  axiosInstance.get(`course/names/${teacherId}`).then(res => {\n    setTeacherCourses(courseData => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getcoursesbyglobalCode = ({\n  globalCode,\n  getCourseData\n}) => {\n  axiosInstance.get(`course/code/${globalCode}/`).then(res => {\n    getCourseData(courseData => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getcoursesbyCourseId = ({\n  courseId,\n  getCourseData\n}) => {\n  axiosInstance.get(`course/object/${courseId}/`).then(res => {\n    getCourseData(courseData => [res.data]);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getcoursesbyCourseIdArray = ({\n  courseId,\n  getDashboardCourses\n}) => {\n  axiosInstance.get(`course/object/${courseId}/`).then(res => {\n    getDashboardCourses(dashboardCourses => [...dashboardCourses, res.data]);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const Appenn = ({\n  courseId,\n  allCourses\n}) => {\n  axiosInstance.get(`course/object/${courseId}/`).then(() => allCourses.push({\n    \"bibhu\": 'hello baby'\n  }));\n};\n_c = Appenn;\nexport const getcoursesbyCourseIdSimpleArray = ({\n  courseId,\n  getCourses\n}) => {\n  axiosInstance.get(`course/object/${courseId}/`).then(res => {\n    getCourses(courses => [...courses, res.data]);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getcoursesbyglobalCodeArray = ({\n  globalCode,\n  getCourseData\n}) => {\n  axiosInstance.get(`course/code/${globalCode}/`).then(res => {\n    let newArray = res.data;\n    getCourseData(courseData => [...courseData, ...newArray]);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const putcourseuser = ({\n  data\n}) => {\n  axiosInstance.put('', {\n    \"email\": data.email,\n    \"username\": data.username,\n    \"firstname\": data.firstname,\n    \"lastname\": data.lastname,\n    \"gender\": data.gender,\n    \"role\": data.userype,\n    \"position\": data.position,\n    \"dateofbirth\": data.dateofbirth,\n    \"dashboardcourses\": data.dashboardcourses\n  }).then(res => {}).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const putdashboardcourses = ({\n  data\n}) => {\n  axiosInstance.put('dashboardcourses/', {\n    \"dashboardcourses\": data.dashboardcourses\n  }).then(res => {}).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const deletedashboardcourses = ({\n  dashboardcourses\n}) => {\n  axiosInstance.put('dashboardcourses/', {\n    \"dashboardcourses\": dashboardcourses\n  }).then(res => {}).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const putcourseenrollrequest = ({\n  courseId,\n  enrollmentcourseId\n}) => {\n  axiosInstance.put(`course/enrollrequest/${courseId}/`, {\n    \"enrolementrequests\": enrollmentcourseId\n  }).then(res => {}).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const putcourseenroll = ({\n  courseId,\n  enrolledstudents\n}) => {\n  axiosInstance.put(`course/enroll/${courseId}/`, {\n    \"enrolledstudents\": enrolledstudents\n  }).then(res => {\n    console.log(\"hello\", enrolledstudents);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const createnotice = ({\n  data,\n  formData,\n  selectedCourseIds\n}) => {\n  axiosInstance.post(`noticeboard/all/`, {\n    \"creater\": data.id,\n    \"noticeTitle\": formData.noticeTitle,\n    \"noticeText\": formData.noticeText,\n    \"postCourses\": selectedCourseIds,\n    \"noticefile\": null\n  }).then(res => {}).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getnotice = ({\n  getNoticeData\n}) => {\n  axiosInstance.get(`noticeboard/all/`).then(res => {\n    getNoticeData(noticeData => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getnoticebyId = ({\n  noticeid,\n  getNoticeData\n}) => {\n  axiosInstance.get(`noticeboard/all/${noticeid}`).then(res => {\n    let newNotice = res.data;\n    getNoticeData(courseData => [...courseData, newNotice]);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getdashboardnotice = ({\n  getDashboardNotice\n}) => {\n  axiosInstance.get(`dashboardnotices/`).then(res => {\n    console.log(\"res.data notice:\", res.data);\n    getDashboardNotice(dashboardNotice => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getenrolledstudents = ({\n  courseId,\n  getEnrolledData\n}) => {\n  axiosInstance.get(`course/enroll/${courseId}/`).then(res => {\n    getEnrolledData(enrolledData => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getsyllabusfromId = ({\n  syllabusId,\n  getSyllabusData\n}) => {\n  axiosInstance.get(`syllabus/names/${syllabusId}/`).then(res => {\n    getSyllabusData(syllabusData => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getchapterfromId = ({\n  chapterId,\n  getChapterData\n}) => {\n  axiosInstance.get(`syllabus/chapter/${chapterId}/`).then(res => {\n    getChapterData(chapterData => [...chapterData, res.data]);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getsectionfromId = ({\n  sectionId,\n  getSectionData\n}) => {\n  axiosInstance.get(`syllabus/section/${sectionId}/`).then(res => {\n    getSectionData(sectionData => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const gettopicfromId = ({\n  topicId,\n  getTopicData\n}) => {\n  axiosInstance.get(`syllabus/topic/${topicId}/`).then(res => {\n    getTopicData(topicData => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const putsectiondata = ({\n  sectionid,\n  topicData\n}) => {\n  axiosInstance.put(`syllabus/section/${sectionid}/`, {\n    \"id\": sectionid,\n    \"name\": \"Section-2\",\n    \"topics\": topicData\n  }).then(res => {\n    console.log(\"hhhhh---\", topicData);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const createnewsection = ({\n  sectionPostData\n}) => {\n  axiosInstance.post(`syllabus/section/`, {\n    \"name\": sectionPostData.name,\n    \"topics\": [],\n    \"chapterid\": sectionPostData.chapterid,\n    \"sectionnum\": 1\n  }).then(res => {\n    console.log(\"section added\");\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const deletesectiondata = ({\n  sectionid\n}) => {\n  axiosInstance.delete(`syllabus/section/${sectionid}/`, {}).then(res => {\n    console.log(\"deleted---\");\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const createnewchapter = ({\n  formData\n}) => {\n  axiosInstance.post(`syllabus/chapter/`, {\n    \"name\": formData.chapterTitle,\n    \"sections\": [],\n    \"chapternum\": formData.chapterNumber,\n    \"syllabusid\": formData.syllabusId\n  }).then(res => {\n    console.log(\"chapter added\", formData.syllabusId);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getchapternumbers = ({\n  setChapterNumbers\n}) => {\n  axiosInstance.get(`syllabus/chapternumber/`).then(res => {\n    setChapterNumbers(chapterNumbers => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const createnewclass = ({\n  formDataSingleClass\n}) => {\n  axiosInstance.post(`class/all/`, {\n    \"courseId\": formDataSingleClass.courseId,\n    \"serialNo\": formDataSingleClass.serialNo,\n    \"classStatus\": formDataSingleClass.classStatus,\n    \"classdate\": formDataSingleClass.classdate,\n    \"classtime\": formDataSingleClass.classtime,\n    \"duration\": formDataSingleClass.duration,\n    \"meetingLink\": formDataSingleClass.meetingLink,\n    \"roomNo\": formDataSingleClass.roomNo,\n    \"chapter\": formDataSingleClass.chapter,\n    \"topics\": formDataSingleClass.topics\n  }).then(res => {\n    console.log(\"class added\");\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const createmulticlass = ({\n  formDataMultiClass,\n  setCreating\n}) => {\n  axiosInstance.post(`class/multicreate/`, {\n    \"courseId\": formDataMultiClass.courseId,\n    \"serialNo\": formDataMultiClass.serialNo,\n    \"classStatus\": formDataMultiClass.classStatus,\n    \"classdate\": \"2022-03-31\",\n    \"classtime\": formDataMultiClass.classtime,\n    \"duration\": formDataMultiClass.duration,\n    \"meetingLink\": formDataMultiClass.meetingLink,\n    \"roomNo\": formDataMultiClass.roomNo,\n    \"chapter\": formDataMultiClass.chapter,\n    \"topics\": formDataMultiClass.topics,\n    \"startdate\": formDataMultiClass.classDateStart,\n    \"enddate\": formDataMultiClass.classDateEnd,\n    \"checkedMon\": formDataMultiClass.checkedMon,\n    \"mondaytime\": \"classtimeMonday\" in formDataMultiClass ? formDataMultiClass.classtimeMonday : \"00:00:00\",\n    \"mondayduration\": \"selecteddurationMon\" in formDataMultiClass ? formDataMultiClass.selecteddurationMon : 0,\n    \"checkedTues\": formDataMultiClass.checkedTues,\n    \"tuesdaytime\": \"classtimeTuesday\" in formDataMultiClass ? formDataMultiClass.classtimeTuesday : \"00:00:00\",\n    \"tuesdayduration\": \"selecteddurationTues\" in formDataMultiClass ? formDataMultiClass.selecteddurationTues : 0,\n    \"checkedWed\": formDataMultiClass.checkedWed,\n    \"wednesdaytime\": \"classtimeWednesday\" in formDataMultiClass ? formDataMultiClass.classtimeWednesday : \"00:00:00\",\n    \"wednesdayduration\": \"selecteddurationWed\" in formDataMultiClass ? formDataMultiClass.selecteddurationWed : 0,\n    \"checkedThurs\": formDataMultiClass.checkedThurs,\n    \"thursdaytime\": \"classtimeThursday\" in formDataMultiClass ? formDataMultiClass.classtimeThursday : \"00:00:00\",\n    \"thursdayduration\": \"selecteddurationThurs\" in formDataMultiClass ? formDataMultiClass.selecteddurationThurs : 0,\n    \"checkedFri\": formDataMultiClass.checkedFri,\n    \"fridaytime\": \"classtimeFriday\" in formDataMultiClass ? formDataMultiClass.classtimeFriday : \"00:00:00\",\n    \"fridayduration\": \"selecteddurationFri\" in formDataMultiClass ? formDataMultiClass.selecteddurationFri : 0,\n    \"checkedSat\": formDataMultiClass.checkedSat,\n    \"saturdaytime\": \"classtimeSaturday\" in formDataMultiClass ? formDataMultiClass.classtimeSaturday : \"00:00:00\",\n    \"saturdayduration\": \"selecteddurationSat\" in formDataMultiClass ? formDataMultiClass.selecteddurationSat : 0,\n    \"checkedSun\": formDataMultiClass.checkedSun,\n    \"sundaytime\": \"classtimeSunday\" in formDataMultiClass ? formDataMultiClass.classtimeSunday : \"00:00:00\",\n    \"sundayduration\": \"selecteddurationSun\" in formDataMultiClass ? formDataMultiClass.selecteddurationSun : 0\n  }).then(res => {\n    setCreating(creating => false);\n    console.log(\"class added\");\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const createnewmeeting = ({\n  formDataSingleClass\n}) => {\n  axiosInstance.post(`meeting/all/`, {\n    \"name\": formDataSingleClass.name,\n    \"courseId\": formDataSingleClass.courseId,\n    \"serialNo\": formDataSingleClass.serialNo,\n    \"meetingStatus\": formDataSingleClass.meetingStatus,\n    \"meetingdate\": formDataSingleClass.meetingdate,\n    \"meetingtime\": formDataSingleClass.meetingtime,\n    \"duration\": formDataSingleClass.duration,\n    \"meetingLink\": formDataSingleClass.meetingLink,\n    \"roomNo\": formDataSingleClass.roomNo,\n    \"chapter\": formDataSingleClass.chapter,\n    \"topics\": formDataSingleClass.topics,\n    \"creater\": formDataSingleClass.creater\n  }).then(res => {\n    console.log(\"meeting added\");\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const createnewmeetingpersonal = ({\n  formDataSingleClass\n}) => {\n  axiosInstance.post(`meeting/allpersonal/`, {\n    \"name\": formDataSingleClass.name,\n    \"courseId\": formDataSingleClass.courseId,\n    \"serialNo\": formDataSingleClass.serialNo,\n    \"meetingStatus\": formDataSingleClass.meetingStatus,\n    \"meetingdate\": formDataSingleClass.meetingdate,\n    \"meetingtime\": formDataSingleClass.meetingtime,\n    \"duration\": formDataSingleClass.duration,\n    \"meetingLink\": formDataSingleClass.meetingLink,\n    \"roomNo\": formDataSingleClass.roomNo,\n    \"chapter\": formDataSingleClass.chapter,\n    \"topics\": formDataSingleClass.topics,\n    \"creater\": formDataSingleClass.creater\n  }).then(res => {\n    console.log(\"meeting added\");\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const createmultimeeting = ({\n  formDataMultiClass,\n  setCreating\n}) => {\n  axiosInstance.post(`meeting/multicreate/`, {\n    \"courseId\": formDataMultiClass.courseId,\n    \"serialNo\": formDataMultiClass.serialNo,\n    \"meetingStatus\": formDataMultiClass.meetingStatus,\n    \"meetingdate\": \"2022-03-31\",\n    \"meetingtime\": formDataMultiClass.meetingtime,\n    \"duration\": formDataMultiClass.duration,\n    \"meetingLink\": formDataMultiClass.meetingLink,\n    \"roomNo\": formDataMultiClass.roomNo,\n    \"chapter\": formDataMultiClass.chapter,\n    \"topics\": formDataMultiClass.topics,\n    \"creater\": formDataMultiClass.creater,\n    \"startdate\": formDataMultiClass.classDateStart,\n    \"enddate\": formDataMultiClass.classDateEnd,\n    \"checkedMon\": formDataMultiClass.checkedMon,\n    \"mondaytime\": \"classtimeMonday\" in formDataMultiClass ? formDataMultiClass.classtimeMonday : \"00:00:00\",\n    \"mondayduration\": \"selecteddurationMon\" in formDataMultiClass ? formDataMultiClass.selecteddurationMon : 0,\n    \"checkedTues\": formDataMultiClass.checkedTues,\n    \"tuesdaytime\": \"classtimeTuesday\" in formDataMultiClass ? formDataMultiClass.classtimeTuesday : \"00:00:00\",\n    \"tuesdayduration\": \"selecteddurationTues\" in formDataMultiClass ? formDataMultiClass.selecteddurationTues : 0,\n    \"checkedWed\": formDataMultiClass.checkedWed,\n    \"wednesdaytime\": \"classtimeWednesday\" in formDataMultiClass ? formDataMultiClass.classtimeWednesday : \"00:00:00\",\n    \"wednesdayduration\": \"selecteddurationWed\" in formDataMultiClass ? formDataMultiClass.selecteddurationWed : 0,\n    \"checkedThurs\": formDataMultiClass.checkedThurs,\n    \"thursdaytime\": \"classtimeThursday\" in formDataMultiClass ? formDataMultiClass.classtimeThursday : \"00:00:00\",\n    \"thursdayduration\": \"selecteddurationThurs\" in formDataMultiClass ? formDataMultiClass.selecteddurationThurs : 0,\n    \"checkedFri\": formDataMultiClass.checkedFri,\n    \"fridaytime\": \"classtimeFriday\" in formDataMultiClass ? formDataMultiClass.classtimeFriday : \"00:00:00\",\n    \"fridayduration\": \"selecteddurationFri\" in formDataMultiClass ? formDataMultiClass.selecteddurationFri : 0,\n    \"checkedSat\": formDataMultiClass.checkedSat,\n    \"saturdaytime\": \"classtimeSaturday\" in formDataMultiClass ? formDataMultiClass.classtimeSaturday : \"00:00:00\",\n    \"saturdayduration\": \"selecteddurationSat\" in formDataMultiClass ? formDataMultiClass.selecteddurationSat : 0,\n    \"checkedSun\": formDataMultiClass.checkedSun,\n    \"sundaytime\": \"classtimeSunday\" in formDataMultiClass ? formDataMultiClass.classtimeSunday : \"00:00:00\",\n    \"sundayduration\": \"selecteddurationSun\" in formDataMultiClass ? formDataMultiClass.selecteddurationSun : 0\n  }).then(res => {\n    setCreating(creating => false);\n    console.log(\"multiple classes added\");\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n}; //formDataMultiClass.courseId\n\nexport const createmultimeetingpersonal = ({\n  formDataMultiClass,\n  setCreating\n}) => {\n  axiosInstance.post(`meeting/multicreatepersonal/`, {\n    \"courseId\": 5,\n    \"serialNo\": formDataMultiClass.serialNo,\n    \"meetingStatus\": formDataMultiClass.meetingStatus,\n    \"meetingdate\": \"2022-03-31\",\n    \"meetingtime\": formDataMultiClass.meetingtime,\n    \"duration\": formDataMultiClass.duration,\n    \"meetingLink\": formDataMultiClass.meetingLink,\n    \"roomNo\": formDataMultiClass.roomNo,\n    \"chapter\": formDataMultiClass.chapter,\n    \"topics\": formDataMultiClass.topics,\n    \"creater\": formDataMultiClass.creater,\n    \"startdate\": formDataMultiClass.classDateStart,\n    \"enddate\": formDataMultiClass.classDateEnd,\n    \"checkedMon\": formDataMultiClass.checkedMon,\n    \"mondaytime\": \"classtimeMonday\" in formDataMultiClass ? formDataMultiClass.classtimeMonday : \"00:00:00\",\n    \"mondayduration\": \"selecteddurationMon\" in formDataMultiClass ? formDataMultiClass.selecteddurationMon : 0,\n    \"checkedTues\": formDataMultiClass.checkedTues,\n    \"tuesdaytime\": \"classtimeTuesday\" in formDataMultiClass ? formDataMultiClass.classtimeTuesday : \"00:00:00\",\n    \"tuesdayduration\": \"selecteddurationTues\" in formDataMultiClass ? formDataMultiClass.selecteddurationTues : 0,\n    \"checkedWed\": formDataMultiClass.checkedWed,\n    \"wednesdaytime\": \"classtimeWednesday\" in formDataMultiClass ? formDataMultiClass.classtimeWednesday : \"00:00:00\",\n    \"wednesdayduration\": \"selecteddurationWed\" in formDataMultiClass ? formDataMultiClass.selecteddurationWed : 0,\n    \"checkedThurs\": formDataMultiClass.checkedThurs,\n    \"thursdaytime\": \"classtimeThursday\" in formDataMultiClass ? formDataMultiClass.classtimeThursday : \"00:00:00\",\n    \"thursdayduration\": \"selecteddurationThurs\" in formDataMultiClass ? formDataMultiClass.selecteddurationThurs : 0,\n    \"checkedFri\": formDataMultiClass.checkedFri,\n    \"fridaytime\": \"classtimeFriday\" in formDataMultiClass ? formDataMultiClass.classtimeFriday : \"00:00:00\",\n    \"fridayduration\": \"selecteddurationFri\" in formDataMultiClass ? formDataMultiClass.selecteddurationFri : 0,\n    \"checkedSat\": formDataMultiClass.checkedSat,\n    \"saturdaytime\": \"classtimeSaturday\" in formDataMultiClass ? formDataMultiClass.classtimeSaturday : \"00:00:00\",\n    \"saturdayduration\": \"selecteddurationSat\" in formDataMultiClass ? formDataMultiClass.selecteddurationSat : 0,\n    \"checkedSun\": formDataMultiClass.checkedSun,\n    \"sundaytime\": \"classtimeSunday\" in formDataMultiClass ? formDataMultiClass.classtimeSunday : \"00:00:00\",\n    \"sundayduration\": \"selecteddurationSun\" in formDataMultiClass ? formDataMultiClass.selecteddurationSun : 0\n  }).then(res => {\n    setCreating(creating => false);\n    console.log(\"multiple classes added\");\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const putmeetinginfo = ({\n  meetingid,\n  formData,\n  props\n}) => {\n  axiosInstance.put(`meeting/editmeeting/${meetingid}`, {\n    \"name\": formData.name,\n    \"about\": formData.about,\n    \"meetingStatus\": formData.meetingStatus,\n    \"meetingdate\": formData.meetingdate,\n    \"meetingtime\": formData.meetingtime,\n    \"duration\": formData.duration,\n    \"meetingLink\": formData.meetingLink\n  }).then(res => {\n    props.onPress();\n    console.log(\"meeting info edited\", formData);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const createnewbook = ({\n  imageformData\n}) => {\n  axiosInstance.post(`book/objects/`, imageformData).then(res => {\n    console.log(res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const uploadprofieimage = ({\n  imageformData,\n  setImageUploaded,\n  props,\n  cancelHandler\n}) => {\n  axiosInstance.put(`profileimageupload/`, imageformData).then(res => {\n    props.rerender();\n    setImageUploaded(imageUploaded => \"uploaded\");\n    cancelHandler(); //setTimeout(res, 5000)\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const uploadofficeid = ({\n  imageformData\n}) => {\n  axiosInstance.put(`officeidupload/`, imageformData).then(res => {\n    console.log(res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const uploadgovtid1 = ({\n  imageformData\n}) => {\n  axiosInstance.put(`govtid1upload/`, imageformData).then(res => {\n    console.log(res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const uploadgovtid2 = ({\n  imageformData\n}) => {\n  axiosInstance.put(`govtid2upload/`, imageformData).then(res => {\n    console.log(res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const uploaddobcert = ({\n  imageformData\n}) => {\n  axiosInstance.put(`dobcertupload/`, imageformData).then(res => {\n    console.log(res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getbooks = ({\n  setData\n}) => {\n  axiosInstance.get().then(res => {\n    setData(data => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getnoticeIddash = ({\n  noticeId\n}) => {\n  axiosInstance.get(`noticeids/`).then(res => {\n    console.log(\"noticeIds---\", res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const putnoticeIddash = ({\n  noticeId\n}) => {\n  axiosInstance.put(`noticeids/`, {\n    \"readnoticeId\": noticeId\n  }).then(res => {}).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const changepassword = ({\n  formData,\n  setLoginState\n}) => {\n  axiosInstance.put(`setotpaspswd/${formData.username}/`, {\n    \"username\": formData.username\n  }).then(res => {\n    setLoginState(loginState => \"OTPsent\");\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const putuserprofile = ({\n  data,\n  formData\n}) => {\n  axiosInstance.put('userprofilegetput/', {\n    \"email\": formData.email,\n    \"username\": data.username,\n    \"usertitle\": formData.usertitle,\n    \"firstname\": formData.firstname,\n    \"lastname\": formData.lastname,\n    \"gender\": formData.gender,\n    //\"role\": \"student\",\n    \"position\": formData.position,\n    //\"dateofbirth\": formData.dateofbirth,\n    \"institute\": formData.institute,\n    \"city\": formData.city,\n    \"state\": formData.state,\n    \"country\": formData.country\n  }).then(res => {\n    console.log(\"formData\", formData);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const putuserprofileadvanced = ({\n  data,\n  formData\n}) => {\n  axiosInstance.put('userprofilegetput/', {\n    \"email\": formData.email,\n    \"username\": data.username,\n    \"usertitle\": formData.usertitle,\n    \"firstname\": formData.firstname,\n    \"lastname\": formData.lastname,\n    \"gender\": formData.gender,\n    //\"role\": \"student\",\n    \"position\": formData.position,\n    \"dateofbirth\": formData.dateofbirth,\n    \"institute\": formData.institute,\n    \"city\": formData.city,\n    \"state\": formData.state,\n    \"country\": formData.country\n  }).then(res => {\n    console.log(\"formData\", formData);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const deletemeeting = ({\n  meetingid\n}) => {\n  axiosInstance.delete(`meeting/object/${meetingid}/`, {}).then(res => {\n    console.log(\" meeting deleted---\");\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const createnewpresentation = ({\n  formData\n}) => {\n  axiosInstance.post(`meeting/createpresentation/`, {\n    \"talktitle\": formData.talktitle,\n    \"talktime\": formData.talktime,\n    \"duration\": formData.duration,\n    \"speaker\": formData.speaker,\n    \"outspeaker\": null,\n    \"meetingid\": formData.meetingId\n  }).then(res => {\n    console.log(\"talk created\");\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getusersfromnames = ({\n  namestring,\n  getSearchUsers\n}) => {\n  axiosInstance.get(`searchusersstr/${namestring}/`).then(res => {\n    getSearchUsers(searchUsers => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const uploadtalk = ({\n  imageformData,\n  props\n}) => {\n  axiosInstance.post(`meeting/uploadtalk/`, imageformData).then(res => {\n    props.onPress();\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const deletepresentation = ({\n  talkId\n}) => {\n  axiosInstance.delete(`meeting/presentation/delete/${talkId}`, {}).then(res => {\n    console.log(\" presentation deleted---\");\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n}; //presentation/put/\n\nexport const putpresentation = ({\n  talkId,\n  formData\n}) => {\n  axiosInstance.put(`/meeting/presentation/put/${talkId}`, {\n    \"talktitle\": formData.talktitle,\n    \"talktime\": formData.talktime,\n    \"duration\": formData.duration\n  }).then(res => {\n    console.log(\"put ppt: \", res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const putaddcontact = ({\n  contactId\n}) => {\n  axiosInstance.put(`addcontact/`, {\n    \"contactId\": contactId\n  }).then(res => {\n    console.log(\"contact added: \", res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const createedudegree = ({\n  formData,\n  data\n}) => {\n  axiosInstance.post(`edudegreecreate/`, {\n    \"userId\": data.id,\n    \"institute\": formData.institute,\n    \"degreename\": formData.degreename,\n    \"startDate\": formData.startData,\n    \"endDate\": formData.endDate\n  }).then(res => {}).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getdegreenames = ({\n  getDegreeNames\n}) => {\n  axiosInstance.get(`degreenames/`).then(res => {\n    getDegreeNames(degreeNames => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getinstitutenames = ({\n  getInstituteNames\n}) => {\n  axiosInstance.get(`institutenames/`).then(res => {\n    getInstituteNames(degreeNames => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const deleteedudegree = ({\n  edudegreeid\n}) => {\n  axiosInstance.delete(`edudegreedelete/${edudegreeid}/`, {}).then(res => {\n    console.log(\" edu degree deleted---\");\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const createaddress = ({\n  formData\n}) => {\n  axiosInstance.post(`addnewaddress/`, {\n    \"userId\": formData.userId,\n    \"careof\": formData.careof,\n    \"houseno\": formData.houseno,\n    \"streetno\": formData.streetno,\n    \"district\": formData.district,\n    \"pincode\": formData.pincode,\n    \"city\": formData.city,\n    \"state\": formData.state,\n    \"country\": formData.country,\n    \"addressType\": formData.addressType\n  }).then(res => {}).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const createachievement = ({\n  formData\n}) => {\n  axiosInstance.post(`createachievement/`, {\n    \"name\": formData.name,\n    \"description\": formData.description,\n    \"startDate\": formData.startDate,\n    \"endDate\": formData.endDate,\n    \"userId\": formData.userId\n  }).then(res => {}).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const createaccountwithmobileno = ({\n  formData,\n  setLoading\n}) => {\n  axiosInstance.post(`createaccountwithphonenum/`, {\n    \"username\": formData.username,\n    \"usertype\": formData.usertype\n  }).then(res => {\n    setLoading(loading => \"created\");\n  }).catch(error => {\n    console.log(\"error\", error);\n\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const checkuserexist = ({\n  setUserExists,\n  username\n}) => {\n  axiosInstance.get(`getuserfromusername/${username}`).then(res => {\n    setUserExists(userExists => res.data.message);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\nexport const getgeneralmeetings = ({\n  getGeneralMeetings\n}) => {\n  axiosInstance.get(`generalmeetings/`).then(res => {\n    getGeneralMeetings(generalMeetings => res.data);\n  }).catch(error => {\n    if (error.response.status === 401) {\n      Logout();\n    }\n  });\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Appenn\");","map":{"version":3,"sources":["/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/CommonApps/AllAPICalls.js"],"names":["axiosInstance","Logout","getuser","setData","get","then","res","data","catch","error","response","status","putuser","formData","put","email","username","firstname","lastname","gender","position","dateofbirth","getticket","ticketId","getalltickets","getuserbyId","userId","setUserData","userData","console","log","getticketscategory","setTicketType","getcategorybyId","ticketCategory","setCatData","createticket","post","title","id","category","keywords","description","priority","postcomment","comment","getcomments","setCommentObj","commentObj","getallusers","setUsersData","getfewusers","num","getFewUsers","fewUsers","usersearchgeneral","pageno","searchString","getSearchedUsers","searchedUsers","getpersonalgeneralchatgroups","getChatGroups","chatGroups","postchatcomment","groupId","getchatcomments","setChatCommentObj","getgroupchatcomments","createchatgroup","groupname","groupMembers","alert","checkifuseradded","setUserExists","createOneOOneGroup","userExists","exists","getchatgroups","createcourse","courseShortName","courseFullName","courseLocalCode","courseStartDate","courseEndDate","classname","educationboard","subject","abouttheCourse","instituteName","getclassrank","setClassRank","getclassobjectbyId","classId","setClassObject","getmeetingobjectbyId","meetingId","setMeetingObject","getsubjectsfromclassandboard","boardId","setSubjectsObject","getteachercourses","teacherId","setTeacherCourses","courseData","getcoursesbyglobalCode","globalCode","getCourseData","getcoursesbyCourseId","courseId","getcoursesbyCourseIdArray","getDashboardCourses","dashboardCourses","Appenn","allCourses","push","getcoursesbyCourseIdSimpleArray","getCourses","courses","getcoursesbyglobalCodeArray","newArray","putcourseuser","userype","dashboardcourses","putdashboardcourses","deletedashboardcourses","putcourseenrollrequest","enrollmentcourseId","putcourseenroll","enrolledstudents","createnotice","selectedCourseIds","noticeTitle","noticeText","getnotice","getNoticeData","noticeData","getnoticebyId","noticeid","newNotice","getdashboardnotice","getDashboardNotice","dashboardNotice","getenrolledstudents","getEnrolledData","enrolledData","getsyllabusfromId","syllabusId","getSyllabusData","syllabusData","getchapterfromId","chapterId","getChapterData","chapterData","getsectionfromId","sectionId","getSectionData","sectionData","gettopicfromId","topicId","getTopicData","topicData","putsectiondata","sectionid","createnewsection","sectionPostData","name","chapterid","deletesectiondata","delete","createnewchapter","chapterTitle","chapterNumber","getchapternumbers","setChapterNumbers","chapterNumbers","createnewclass","formDataSingleClass","serialNo","classStatus","classdate","classtime","duration","meetingLink","roomNo","chapter","topics","createmulticlass","formDataMultiClass","setCreating","classDateStart","classDateEnd","checkedMon","classtimeMonday","selecteddurationMon","checkedTues","classtimeTuesday","selecteddurationTues","checkedWed","classtimeWednesday","selecteddurationWed","checkedThurs","classtimeThursday","selecteddurationThurs","checkedFri","classtimeFriday","selecteddurationFri","checkedSat","classtimeSaturday","selecteddurationSat","checkedSun","classtimeSunday","selecteddurationSun","creating","createnewmeeting","meetingStatus","meetingdate","meetingtime","creater","createnewmeetingpersonal","createmultimeeting","createmultimeetingpersonal","putmeetinginfo","meetingid","props","about","onPress","createnewbook","imageformData","uploadprofieimage","setImageUploaded","cancelHandler","rerender","imageUploaded","uploadofficeid","uploadgovtid1","uploadgovtid2","uploaddobcert","getbooks","getnoticeIddash","noticeId","putnoticeIddash","changepassword","setLoginState","loginState","putuserprofile","usertitle","institute","city","state","country","putuserprofileadvanced","deletemeeting","createnewpresentation","talktitle","talktime","speaker","getusersfromnames","namestring","getSearchUsers","searchUsers","uploadtalk","deletepresentation","talkId","putpresentation","putaddcontact","contactId","createedudegree","degreename","startData","endDate","getdegreenames","getDegreeNames","degreeNames","getinstitutenames","getInstituteNames","deleteedudegree","edudegreeid","createaddress","careof","houseno","streetno","district","pincode","addressType","createachievement","startDate","createaccountwithmobileno","setLoading","usertype","loading","checkuserexist","message","getgeneralmeetings","getGeneralMeetings","generalMeetings"],"mappings":"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","sourcesContent":["import axiosInstance from '../axios';\nimport {Logout} from './Logout';\n\n\nexport const getuser =({setData})=>{\n  \n\n\n    axiosInstance.get()\n                  .then((res) => {\n                        setData(data=>res.data);\n                   })\n                  .catch((error)=>{\n                      if(error.response.status===401){\n\t\t\t Logout();     \n                      }\n\n                   });\n\n}\n\n\n\nexport const putuser =({data, formData})=>{\n\n\n        axiosInstance.put('',{\n        \"email\":data.email,\n        \"username\":data.username,\n        \"firstname\": formData.firstname,\n        \"lastname\": formData.lastname,\n        \"gender\": formData.gender,\n        \"role\": \"student\",\n        \"position\":formData.position,\n        \"dateofbirth\": formData.dateofbirth,\n\n\n                        })\n                        .then((res) => {\n\n                          })\n\n                        .catch((error)=>{\n                             if(error.response.status===401){\n\t\t              Logout();\t\t     \n                            }\n\n                        });\n\n\n\n}\n\n\nexport const getticket =({ticketId, setData})=>{\n\n\n       axiosInstance.get(`tickets/${ticketId}/`).then((res) => {\n                        setData(data=>res.data);\n                })\n               .catch((error)=>{\n                     if(error.response.status===401){\n\t\t      Logout();\t     \n\n                      }\n\n\n                });\n\n\n\n\n}\n\n\nexport const getalltickets = ({setData})=>{\n\n\n   axiosInstance.get(`tickets/`).then((res) => {\n                        setData(data=>res.data);\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n\t\t     Logout();\t     \n\n                      }\n\n\n                });\n\n\n}\n\n\nexport const getuserbyId = ({userId, setUserData})=>{\n\n   axiosInstance.get(`/${userId}/`).then((res) => {\n                        setUserData(userData=>res.data);\n                })\n\t        .catch((error)=>{\n                     if(error.response.status===401){\n\t\t      Logout();\t     \n\n                      }\n\n                     if (error.response.status===404){console.log(\"here is the error\");}\n\n\n\n                });\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport const getticketscategory = ({setTicketType})=>{\n\n\n   axiosInstance.get(`tickets/category/`).then((res) => {\n                        setTicketType(data=>res.data);\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                     Logout();\n\n                      }\n\n\n                });\n\n\n}\n\n\nexport const getcategorybyId = ({ticketCategory, setCatData})=>{\n\n\n   axiosInstance.get(`tickets/category/${ticketCategory}/`).then((res) => {\n                        setCatData(data=>res.data);\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                     Logout();\n\n                      }\n\n\n                });\n\n\n}\n\n\n\nexport const createticket = ({formData,data})=>{\n\n     axiosInstance\n        .post(`tickets/`,{\n\n    \"title\": formData.title,\n    \"author\": data.id,\n    \"category\": formData.category,\n    \"excerpt\": formData.keywords,\n    \"content\": formData.description,\n    \"status\": \"closed\",\n    \"pstatus\": \"draft\",\n    \"priority\": formData.priority,\n    \"resolution\": \"unresolved\",\n\n\n                        })\n                        .then((res) => {\n                })\n         .catch((error)=>{\n                     if(error.response.status===401){\n                     Logout();\n\n                      }\n\n\n                });\n\n}\n\nexport const postcomment = ({ticketId, userId, comment})=>{\n\n\n  axiosInstance\n        .post(`tickets/comments/`,{           \n        \"ticketId\": ticketId,\n        \"commenter\": userId,\n        \"commenttext\": comment,\n\n                        })\n                        .then((res) => {\n                })\n         .catch((error)=>{\n                     if(error.response.status===401){\n                     Logout();\n\n                      }\n\n\n                });\n\n}\n\n\n\n\n\nexport const getcomments = ({setCommentObj,ticketId})=>{\n\n     axiosInstance.get(`tickets/comments/${ticketId}/`).then((res) => {\n                        setCommentObj(commentObj=>res.data);\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                     Logout();\n\n                      }\n\n\n                });\n\n}\n\n\n\nexport const getallusers = ({ setUsersData})=>{\n\n   axiosInstance.get(`/allusers/`).then((res) => {\n                        setUsersData(userData=>res.data);\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                      Logout();\n\n                      }\n\n\n                });\n\n}\n\n\n\nexport const getfewusers = ({num, getFewUsers})=>{\n\n\n\n       axiosInstance.get(`/fewusers/${num}`).then((res) => {\n                        getFewUsers(fewUsers=>res.data);\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                      Logout();\n\n                      }\n\n\n                });\n\n\n}\n\n//api/usersearch/?search=b\n\nexport const usersearchgeneral = ({pageno, searchString, getSearchedUsers})=>{\n\n axiosInstance.get(`/usersearch/?page=${pageno}&search=${searchString}`).then((res) => {\n                        getSearchedUsers(searchedUsers=>res.data);\n\t                console.log(\"res.data: \", res.data);\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                      Logout();\n\n                      }\n\n\n                });\n\n}\n\n\nexport const getpersonalgeneralchatgroups = ({ getChatGroups})=>{\n\n axiosInstance.get(`getgeneralchatgroups/`).then((res) => {\n                     \n                   getChatGroups(chatGroups=>res.data);\n\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                      Logout();\n\n                      }\n\n\n                });\n\n}\n\n\n\n\n\n\nexport const postchatcomment = ({groupId, userId, comment})=>{\n\n\n  axiosInstance\n        .post(`chat/comments/`,{\n        \"groupId\": groupId,\n        \"commenter\": userId,\n        \"commenttext\": comment,\n\n                        })\n                        .then((res) => {\n                })\n         .catch((error)=>{\n                     if(error.response.status===401){\n                     Logout();\n\n                      }\n\n\n                });\n\n}\n\n\n\nexport const getchatcomments = ({setChatCommentObj,groupId, pageno})=>{\n\n     axiosInstance.get(`chat/comments/${groupId}/?page=${pageno}`).then((res) => {\n                        setChatCommentObj(commentObj=>res.data);\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                     Logout();\n\n                      }\n\n\n                });\n\n}\n\n\n\n\n\nexport const getgroupchatcomments = ({setChatCommentObj,groupId})=>{\n\n\n      axiosInstance.get(`chat/comments/${groupId}/`).then((res) => {\n                        setChatCommentObj(commentObj=>res.data);\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                     Logout();\n\n                      }\n\n\n                });\n\n}\n\n\n\n\n\nexport const createchatgroup = ({groupname,groupMembers})=>{\n\n\n  axiosInstance\n        .post(`chat/groups/`,\n\n\n           {\n             \"name\": groupname,\n             \"displayname\": groupname,\n             \"groupuserObjects\": groupMembers,\n             \"groupType\": \"oneoone\"\n           }\n\n\n\t           )\n                        .then((res) => {\n                })\n         .catch((error)=>{\n                    if(error.response.status===400){alert(\"User is already added. Refresh the page and try again.\");}\n\n                     if(error.response.status===401){\n                     Logout();\n\n                      }\n\n\n                });\n\n}\n\n\n\n\nexport const checkifuseradded = ({userId, setUserExists, createOneOOneGroup})=>{\n\n     axiosInstance.get(`checkifuserisadded/${userId}/`).then((res) => {\n                        setUserExists(userExists=>res.data);\n\t                console.log(\"userExist: \", res.data.exists);\n                        if( !res.data.exists){\n                          createOneOOneGroup({userId});\n\t\t\t  console.log(\"Used added\");\n\t\t\t}else{\n\t           \n\t              console.log(\"User exists...\");\n                           }\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                     Logout();\n\n                      }\n\n\n                });\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport const getchatgroups = ({getChatGroups})=>{\n\n\n    axiosInstance.get(`chat/groups/`)\n\n\n                        .then((res) => {\n\n                    getChatGroups(chatGroups=>res.data);\n\n                })\n         .catch((error)=>{\n\n                     if(error.response.status===401){\n                     Logout();\n\n                      }\n\n\n                });\n\n}\n\n\n\n\n/*\nexport const getgeneralchatgroups = ({getChatGroups})=>{\n\n\n    axiosInstance.get(`chat/groups/`)\n\n\n                        .then((res) => {\n\n                    getChatGroups(chatGroups=>res.data);\n\n                })\n         .catch((error)=>{\n\n                     if(error.response.status===401){\n                     Logout();\n\n                      }\n\n\n                });\n\n}\n*/\n\n\n\n\n\n\n\n\nexport const createcourse = ({formData,data})=>{\n\n     axiosInstance\n        .post(`course/create/`,{\n\n\n        \"teacher\": data.id,\n        \"courseShortName\": formData.courseShortName,\n        \"courseFullName\": formData.courseFullName,\n        \"courseLocalCode\": formData.courseLocalCode,\n        \"courseStartDate\": formData.courseStartDate,\n        \"courseEndDate\": formData.courseEndDate,\n        \"designedFor\": formData.classname,\n\t\"educationboard\": formData.educationboard,\t\n        \"subject\": formData.subject,\n        \"abouttheCourse\": formData.abouttheCourse,\n        \"instituteName\": formData.instituteName,\n        \"instituteCity\": \"BBSR\",\n        \"instituteCountry\": \"India\",\n        \n\n                        })\n                        .then((res) => {\n                })\n         .catch((error)=>{\n                     if(error.response.status===401){\n                     Logout();\n\n                      }\n\n\n                });\n\n}\n\n\n\nexport const getclassrank = ({setClassRank})=>{\n\n\n   axiosInstance.get(`course/coursecategories/`).then((res) => {\n                        setClassRank(data=>res.data);\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                     Logout();\n\n                      }\n\n\n                });\n\n\n}\n\n\n\nexport const getclassobjectbyId = ({classId, setClassObject})=>{\n\n   axiosInstance.get(`course/class/${classId}/`).then((res) => {\n                        setClassObject(data=>res.data);\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                     Logout();\n\n                      }\n                });\n}\n\n\n\nexport const getmeetingobjectbyId = ({meetingId, setMeetingObject})=>{\n\n   axiosInstance.get(`meeting/object/${meetingId}/`).then((res) => {\n                        setMeetingObject(data=>res.data);\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                     Logout();\n\n                      }\n                });\n}\n\n\n\n\n\nexport const getsubjectsfromclassandboard = ({classId, boardId ,setSubjectsObject}) =>{\n\n\naxiosInstance.get(`course/subjects/${classId}/${boardId}`).then((res) => {\n                        setSubjectsObject(data=>res.data);\n\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                     Logout();\n\n                      }\n                });\n\n\n\n\n\n\n\n}\n\n\n\n\n\nexport const getteachercourses = ({ teacherId, setTeacherCourses})=>{\n\n   axiosInstance.get(`course/names/${teacherId}`).then((res) => {\n                        setTeacherCourses(courseData=>res.data);\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                      Logout();\n\n                      }\n\n\n                });\n\n}\n\n\n\n\nexport const getcoursesbyglobalCode = ({ globalCode, getCourseData})=>{\n\n   axiosInstance.get(`course/code/${globalCode}/`).then((res) => {\n                        getCourseData(courseData=>res.data);\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                      Logout();\n\n                      }\n\n\n                });\n\n}\n\n\n\n\nexport const getcoursesbyCourseId = ({ courseId, getCourseData})=>{\n\n   axiosInstance.get(`course/object/${courseId}/`).then((res) => {\n                        getCourseData(courseData=>[res.data]);\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                      Logout();\n\n                      }\n\n\n                });\n\n}\n\n\n\n\n\nexport const getcoursesbyCourseIdArray = ({ courseId, getDashboardCourses})=>{\n\n   axiosInstance.get(`course/object/${courseId}/`).then((res) => {\n                        getDashboardCourses(dashboardCourses=>[...dashboardCourses,res.data]);\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                      Logout();\n\n                      }\n\n\n                });\n\n}\n\n\n\n\n\nexport const Appenn=({courseId, allCourses})=>{\n\n  axiosInstance.get(`course/object/${courseId}/`).then(()=>(\n    allCourses.push({\"bibhu\": 'hello baby'})\n    )\n  );\n\n }\n\n\n\n\n\n\n\n\nexport const getcoursesbyCourseIdSimpleArray = ({ courseId, getCourses})=>{\n\n   axiosInstance.get(`course/object/${courseId}/`).then((res) => {\n\t              getCourses(courses=>[...courses,res.data]);         \n\n                    }).catch((error)=>{\n                     if(error.response.status===401){\n                      Logout();\n\n                      }\n\n\n                });\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport const getcoursesbyglobalCodeArray = ({ globalCode, getCourseData})=>{\n\n   axiosInstance.get(`course/code/${globalCode}/`).then((res) => {\n               let newArray=res.data;\n               getCourseData(courseData => [...courseData, ...newArray]);\n\n\n\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                      Logout();\n\n                      }\n\n\n                });\n\n\n}\n\n\n\n\nexport const putcourseuser =({data})=>{\n\n\n        axiosInstance.put('',{\n        \"email\":data.email,\n        \"username\":data.username,\n        \"firstname\": data.firstname,\n        \"lastname\": data.lastname,\n        \"gender\": data.gender,\n        \"role\": data.userype,\n        \"position\":data.position,\n        \"dateofbirth\": data.dateofbirth,\n\t\"dashboardcourses\":data.dashboardcourses,\t\n\n\n                        })\n                        .then((res) => {\n\n\n                          })\n\n                        .catch((error)=>{\n                             if(error.response.status===401){\n                              Logout();\n                            }\n\n                        });\n}\n\n\n\n\n\n\n\nexport const putdashboardcourses =({data})=>{\n\n\n        axiosInstance.put('dashboardcourses/',{\n        \"dashboardcourses\":data.dashboardcourses,\n\n\n                        })\n                        .then((res) => {\n\n\n                          })\n\n                        .catch((error)=>{\n                             if(error.response.status===401){\n                              Logout();\n                            }\n\n                        });\n}\n\n\n\n\n\n\nexport const deletedashboardcourses =({dashboardcourses})=>{\n\n\n        axiosInstance.put('dashboardcourses/',{\n        \"dashboardcourses\":dashboardcourses,\n\n\n                        })\n                        .then((res) => {\n\n\n                          })\n\n                        .catch((error)=>{\n                             if(error.response.status===401){\n                              Logout();\n                            }\n\n                        });\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport const putcourseenrollrequest =({courseId, enrollmentcourseId})=>{\n\n\n        axiosInstance.put(`course/enrollrequest/${courseId}/`,{\n        \"enrolementrequests\":enrollmentcourseId,\n\n\t})\n                        .then((res) => {\n\n\n                          })\n\n                        .catch((error)=>{\n                             if(error.response.status===401){\n                              Logout();\n                            }\n\n                        });\n\n\n\n}\n\n\nexport const putcourseenroll =({courseId, enrolledstudents})=>{\n\n\n        axiosInstance.put(`course/enroll/${courseId}/`,{\n        \"enrolledstudents\":enrolledstudents,\n\n        })\n                        .then((res) => {\n                          console.log(\"hello\", enrolledstudents);               \n\n                          })\n\n                        .catch((error)=>{\n                             if(error.response.status===401){\n                              Logout();\n                            }\n\n                        });\n\n\n\n}\n\n\n\n\n\n\nexport const createnotice = ({data, formData, selectedCourseIds})=>{\n\n     axiosInstance\n        .post(`noticeboard/all/`,{\n\n\n\t\t\"creater\": data.id,\n                \"noticeTitle\": formData.noticeTitle,\n                \"noticeText\": formData.noticeText,\n                \"postCourses\": selectedCourseIds,\n                \"noticefile\": null\n\n\n\n\n\n\n\n\n\n\t      })\n                        .then((res) => {\n                })\n         .catch((error)=>{\n                     if(error.response.status===401){\n                     Logout();\n\n                      }\n\n\n                });\n\n}\n\n\n\n\n\n\n\n\nexport const getnotice = ({getNoticeData})=>{\n\n   axiosInstance.get(`noticeboard/all/`).then((res) => {\n               \n\t     getNoticeData(noticeData => res.data);\n\n\n\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                      Logout();\n\n                      }\n\n\n                });\n\n}\n\n\n\n\n\n\n\n\n\n\n\nexport const getnoticebyId = ({noticeid, getNoticeData})=>{\n\n   axiosInstance.get(`noticeboard/all/${noticeid}`).then((res) => {\n\n               let newNotice=res.data;\n               getNoticeData(courseData => [...courseData, newNotice]);\n\n\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                      Logout();\n\n                      }\n\n\n                });\n\n}\n\n\n\n\n\nexport const getdashboardnotice = ({ getDashboardNotice })=>{\n\n   axiosInstance.get(`dashboardnotices/`).then((res) => {\n\n\t       console.log(\"res.data notice:\", res.data)\n               getDashboardNotice(dashboardNotice => res.data);\n\n\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                      Logout();\n\n                      }\n\n\n                });\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport const getenrolledstudents = ({courseId, getEnrolledData})=>{\n\n   axiosInstance.get(`course/enroll/${courseId}/`).then((res) => {\n\n             getEnrolledData(enrolledData => res.data);\n\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                      Logout();\n\n                      }\n\n\n                });\n\n}\n\n\n\n\n\nexport const getsyllabusfromId = ({syllabusId, getSyllabusData})=>{\n\n\naxiosInstance.get(`syllabus/names/${syllabusId}/`).then((res) => {\n\n             getSyllabusData(syllabusData => res.data);\n\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                      Logout();\n\n                      }\n\n\n                });\t\t\n\n}\n\n\n\n\n\n\n\nexport const getchapterfromId = ({chapterId, getChapterData})=>{\n\n\naxiosInstance.get(`syllabus/chapter/${chapterId}/`).then((res) => {\n\n             getChapterData(chapterData => [...chapterData, res.data]);\n\n\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                      Logout();\n\n                      }\n\n\n                });\n\n}\n\n\n\n\n\n\n\nexport const getsectionfromId = ({sectionId, getSectionData})=>{\n\n\naxiosInstance.get(`syllabus/section/${sectionId}/`).then((res) => {\n\n             getSectionData(sectionData => res.data);\n\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                      Logout();\n\n                      }\n\n                });\n\n}\n\n\n\nexport const gettopicfromId = ({topicId, getTopicData})=>{\n\n\naxiosInstance.get(`syllabus/topic/${topicId}/`).then((res) => {\n\n             getTopicData(topicData => res.data);\n\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                      Logout();\n\n                      }\n                });\n\n}\n\n\n\n\n\n\n\n\nexport const putsectiondata =({sectionid, topicData})=>{\n\n\n        axiosInstance.put(`syllabus/section/${sectionid}/`,{\n       \n          \"id\": sectionid,\n          \"name\": \"Section-2\",\n          \"topics\": topicData,\n\n\n                        })\n                        .then((res) => {\n                        console.log(\"hhhhh---\",topicData);\n\n                          })\n\n                        .catch((error)=>{\n                             if(error.response.status===401){\n                              Logout();\n                            }\n\n                        });\n\n\n}\n\n\nexport const createnewsection =({ sectionPostData })=>{\n\n\n        axiosInstance.post(`syllabus/section/`,{\n\n         \n          \"name\": sectionPostData.name,\n          \"topics\": [],\n\t  \"chapterid\":sectionPostData.chapterid,\n\t  \"sectionnum\":1\n\n\n                        })\n                        .then((res) => {\n                        \n\t\t\t\tconsole.log(\"section added\");\n\n                          })\n\n                        .catch((error)=>{\n                             if(error.response.status===401){\n                              Logout();\n                            }\n\n                        });\n\n\n}\n\n\n\n\n\n\n\n\nexport const deletesectiondata =({sectionid })=>{\n\n\n        axiosInstance.delete(`syllabus/section/${sectionid}/`,{\n\n\n                        })\n                        .then((res) => {\n                        console.log(\"deleted---\");\n\n                          })\n\n                        .catch((error)=>{\n                             if(error.response.status===401){\n                              Logout();\n                            }\n\n                        });\n\n\n}\n\n\n\nexport const createnewchapter =({ formData })=>{\n\n\n        axiosInstance.post(`syllabus/chapter/`,{\n\n            \n              \"name\": formData.chapterTitle,\n              \"sections\": [],\n              \"chapternum\": formData.chapterNumber,\n\t       \"syllabusid\":formData.syllabusId\t\n            \n\n\n                        })\n                        .then((res) => {\n\n                                console.log(\"chapter added\", formData.syllabusId);\n\n                          })\n\n                        .catch((error)=>{\n                             if(error.response.status===401){\n                              Logout();\n                            }\n\n                        });\n\n}\n\n\n\n\nexport const getchapternumbers = ({setChapterNumbers})=>{\n\n\naxiosInstance.get(`syllabus/chapternumber/`).then((res) => {\n\n             setChapterNumbers(chapterNumbers => res.data);\n\n                })\n                .catch((error)=>{\n                     if(error.response.status===401){\n                      Logout();\n\n                      }\n                });\n\n}\n\n\n\n\nexport const createnewclass =({ formDataSingleClass })=>{\n\n\n        axiosInstance.post(`class/all/`,{\n\n        \"courseId\": formDataSingleClass.courseId,\n        \"serialNo\": formDataSingleClass.serialNo,\n        \"classStatus\": formDataSingleClass.classStatus,\n        \"classdate\": formDataSingleClass.classdate,\n        \"classtime\": formDataSingleClass.classtime,\n        \"duration\": formDataSingleClass.duration,\n        \"meetingLink\": formDataSingleClass.meetingLink,\n        \"roomNo\": formDataSingleClass.roomNo,\n        \"chapter\": formDataSingleClass.chapter,\n        \"topics\": formDataSingleClass.topics\n\n                        })\n                        .then((res) => {\n\n                                console.log(\"class added\");\n\n                          })\n\n                        .catch((error)=>{\n                             if(error.response.status===401){\n                              Logout();\n                            }\n\n                        });\n\n}\n\n\n\n\nexport const createmulticlass =({ formDataMultiClass,setCreating })=>{\n\n\n        axiosInstance.post(`class/multicreate/`,{\n\n        \"courseId\": formDataMultiClass.courseId,\n        \"serialNo\": formDataMultiClass.serialNo,\n        \"classStatus\": formDataMultiClass.classStatus,\n        \"classdate\": \"2022-03-31\",\n        \"classtime\": formDataMultiClass.classtime,\n        \"duration\": formDataMultiClass.duration,\n        \"meetingLink\": formDataMultiClass.meetingLink,\n        \"roomNo\": formDataMultiClass.roomNo,\n        \"chapter\": formDataMultiClass.chapter,\n        \"topics\": formDataMultiClass.topics,\t\n\n\t\"startdate\": formDataMultiClass.classDateStart,\n        \"enddate\": formDataMultiClass.classDateEnd,\n\n\t\"checkedMon\": formDataMultiClass.checkedMon,\t\n        \"mondaytime\": (\"classtimeMonday\" in formDataMultiClass)? formDataMultiClass.classtimeMonday: \"00:00:00\", \n        \"mondayduration\": (\"selecteddurationMon\" in formDataMultiClass)? formDataMultiClass.selecteddurationMon: 0,\n\n        \"checkedTues\": formDataMultiClass.checkedTues,\n        \"tuesdaytime\": (\"classtimeTuesday\" in formDataMultiClass)? formDataMultiClass.classtimeTuesday: \"00:00:00\",\n        \"tuesdayduration\": (\"selecteddurationTues\" in formDataMultiClass)? formDataMultiClass.selecteddurationTues: 0, \n\n        \"checkedWed\": formDataMultiClass.checkedWed,\n        \"wednesdaytime\": (\"classtimeWednesday\" in formDataMultiClass)? formDataMultiClass.classtimeWednesday: \"00:00:00\",\n        \"wednesdayduration\": (\"selecteddurationWed\" in formDataMultiClass)? formDataMultiClass.selecteddurationWed: 0,\n\n\n\n        \"checkedThurs\": formDataMultiClass.checkedThurs,\n        \"thursdaytime\": (\"classtimeThursday\" in formDataMultiClass)? formDataMultiClass.classtimeThursday: \"00:00:00\",\n        \"thursdayduration\": (\"selecteddurationThurs\" in formDataMultiClass)? formDataMultiClass.selecteddurationThurs: 0,\n\n\t\"checkedFri\": formDataMultiClass.checkedFri,\n        \"fridaytime\": (\"classtimeFriday\" in formDataMultiClass)? formDataMultiClass.classtimeFriday: \"00:00:00\",\n        \"fridayduration\": (\"selecteddurationFri\" in formDataMultiClass)? formDataMultiClass.selecteddurationFri: 0,\t\n\n        \"checkedSat\": formDataMultiClass.checkedSat,\n        \"saturdaytime\": (\"classtimeSaturday\" in formDataMultiClass)? formDataMultiClass.classtimeSaturday: \"00:00:00\",\n        \"saturdayduration\": (\"selecteddurationSat\" in formDataMultiClass)? formDataMultiClass.selecteddurationSat: 0,\n\n        \"checkedSun\": formDataMultiClass.checkedSun,\n        \"sundaytime\": (\"classtimeSunday\" in formDataMultiClass)? formDataMultiClass.classtimeSunday: \"00:00:00\",\n        \"sundayduration\": (\"selecteddurationSun\" in formDataMultiClass)? formDataMultiClass.selecteddurationSun: 0,\n\n\n\n\n\n                        })\n                        .then((res) => {\n                                setCreating(creating=>false);\n                                console.log(\"class added\");\n\n                          })\n\n                        .catch((error)=>{\n                             if(error.response.status===401){\n                              Logout();\n                            }\n\n                        });\n\n}\n\n\n\n\n\nexport const createnewmeeting =({ formDataSingleClass })=>{\n\n\n        axiosInstance.post(`meeting/all/`,{\n\n        \"name\": formDataSingleClass.name,\t\t\n        \"courseId\": formDataSingleClass.courseId,\n        \"serialNo\": formDataSingleClass.serialNo,\n        \"meetingStatus\": formDataSingleClass.meetingStatus,\n        \"meetingdate\": formDataSingleClass.meetingdate,\n        \"meetingtime\": formDataSingleClass.meetingtime,\n        \"duration\": formDataSingleClass.duration,\n        \"meetingLink\": formDataSingleClass.meetingLink,\n        \"roomNo\": formDataSingleClass.roomNo,\n        \"chapter\": formDataSingleClass.chapter,\n        \"topics\": formDataSingleClass.topics,\n\t\"creater\": formDataSingleClass.creater\t\n\n                        })\n                        .then((res) => {\n\n                                console.log(\"meeting added\");\n\n                          })\n\n                        .catch((error)=>{\n                             if(error.response.status===401){\n                              Logout();\n                            }\n\n                        });\n\n}\n\n\n\nexport const createnewmeetingpersonal =({ formDataSingleClass })=>{\n\n\n        axiosInstance.post(`meeting/allpersonal/`,{\n\n        \"name\": formDataSingleClass.name,\n        \"courseId\": formDataSingleClass.courseId,\n        \"serialNo\": formDataSingleClass.serialNo,\n        \"meetingStatus\": formDataSingleClass.meetingStatus,\n        \"meetingdate\": formDataSingleClass.meetingdate,\n        \"meetingtime\": formDataSingleClass.meetingtime,\n        \"duration\": formDataSingleClass.duration,\n        \"meetingLink\": formDataSingleClass.meetingLink,\n        \"roomNo\": formDataSingleClass.roomNo,\n        \"chapter\": formDataSingleClass.chapter,\n        \"topics\": formDataSingleClass.topics,\n        \"creater\": formDataSingleClass.creater\n\n                        })\n                        .then((res) => {\n\n                                console.log(\"meeting added\");\n\n                          })\n\n                        .catch((error)=>{\n                             if(error.response.status===401){\n                              Logout();\n                            }\n\n                        });\n\n}\n\n\n\n\n\n\n\n\n\n\n\nexport const createmultimeeting =({ formDataMultiClass,setCreating })=>{\n\n\n        axiosInstance.post(`meeting/multicreate/`,{\n\n        \"courseId\": formDataMultiClass.courseId,\n        \"serialNo\": formDataMultiClass.serialNo,\n        \"meetingStatus\": formDataMultiClass.meetingStatus,\n        \"meetingdate\": \"2022-03-31\",\n        \"meetingtime\": formDataMultiClass.meetingtime,\n        \"duration\": formDataMultiClass.duration,\n        \"meetingLink\": formDataMultiClass.meetingLink,\n        \"roomNo\": formDataMultiClass.roomNo,\n        \"chapter\": formDataMultiClass.chapter,\n        \"topics\": formDataMultiClass.topics,\n        \"creater\": formDataMultiClass.creater,\n\n        \"startdate\": formDataMultiClass.classDateStart,\n        \"enddate\": formDataMultiClass.classDateEnd,\n\n        \"checkedMon\": formDataMultiClass.checkedMon,\n        \"mondaytime\": (\"classtimeMonday\" in formDataMultiClass)? formDataMultiClass.classtimeMonday: \"00:00:00\",\n        \"mondayduration\": (\"selecteddurationMon\" in formDataMultiClass)? formDataMultiClass.selecteddurationMon: 0,\n\n        \"checkedTues\": formDataMultiClass.checkedTues,\n        \"tuesdaytime\": (\"classtimeTuesday\" in formDataMultiClass)? formDataMultiClass.classtimeTuesday: \"00:00:00\",\n        \"tuesdayduration\": (\"selecteddurationTues\" in formDataMultiClass)? formDataMultiClass.selecteddurationTues: 0,\n\n        \"checkedWed\": formDataMultiClass.checkedWed,\n        \"wednesdaytime\": (\"classtimeWednesday\" in formDataMultiClass)? formDataMultiClass.classtimeWednesday: \"00:00:00\",\n        \"wednesdayduration\": (\"selecteddurationWed\" in formDataMultiClass)? formDataMultiClass.selecteddurationWed: 0,\n\n\n\n        \"checkedThurs\": formDataMultiClass.checkedThurs,\n        \"thursdaytime\": (\"classtimeThursday\" in formDataMultiClass)? formDataMultiClass.classtimeThursday: \"00:00:00\",\n        \"thursdayduration\": (\"selecteddurationThurs\" in formDataMultiClass)? formDataMultiClass.selecteddurationThurs: 0,\n\n        \"checkedFri\": formDataMultiClass.checkedFri,\n        \"fridaytime\": (\"classtimeFriday\" in formDataMultiClass)? formDataMultiClass.classtimeFriday: \"00:00:00\",\n        \"fridayduration\": (\"selecteddurationFri\" in formDataMultiClass)? formDataMultiClass.selecteddurationFri: 0,\n\n        \"checkedSat\": formDataMultiClass.checkedSat,\n        \"saturdaytime\": (\"classtimeSaturday\" in formDataMultiClass)? formDataMultiClass.classtimeSaturday: \"00:00:00\",\n        \"saturdayduration\": (\"selecteddurationSat\" in formDataMultiClass)? formDataMultiClass.selecteddurationSat: 0,\n\n        \"checkedSun\": formDataMultiClass.checkedSun,\n        \"sundaytime\": (\"classtimeSunday\" in formDataMultiClass)? formDataMultiClass.classtimeSunday: \"00:00:00\",\n        \"sundayduration\": (\"selecteddurationSun\" in formDataMultiClass)? formDataMultiClass.selecteddurationSun: 0,\n\n\n                        })\n                        .then((res) => {\n                                setCreating(creating=>false);\n                                console.log(\"multiple classes added\");\n\n                          })\n\n                        .catch((error)=>{\n                             if(error.response.status===401){\n                              Logout();\n                            }\n\n                        });\n\n}\n\n\n\n//formDataMultiClass.courseId\nexport const createmultimeetingpersonal =({ formDataMultiClass,setCreating })=>{\n\n\n        axiosInstance.post(`meeting/multicreatepersonal/`,{\n\n        \"courseId\": 5,\n        \"serialNo\": formDataMultiClass.serialNo,\n        \"meetingStatus\": formDataMultiClass.meetingStatus,\n        \"meetingdate\": \"2022-03-31\",\n        \"meetingtime\": formDataMultiClass.meetingtime,\n        \"duration\": formDataMultiClass.duration,\n        \"meetingLink\": formDataMultiClass.meetingLink,\n        \"roomNo\": formDataMultiClass.roomNo,\n        \"chapter\": formDataMultiClass.chapter,\n        \"topics\": formDataMultiClass.topics,\n        \"creater\": formDataMultiClass.creater,\n\n        \"startdate\": formDataMultiClass.classDateStart,\n        \"enddate\": formDataMultiClass.classDateEnd,\n\n        \"checkedMon\": formDataMultiClass.checkedMon,\n        \"mondaytime\": (\"classtimeMonday\" in formDataMultiClass)? formDataMultiClass.classtimeMonday: \"00:00:00\",\n        \"mondayduration\": (\"selecteddurationMon\" in formDataMultiClass)? formDataMultiClass.selecteddurationMon: 0,\n\n        \"checkedTues\": formDataMultiClass.checkedTues,\n        \"tuesdaytime\": (\"classtimeTuesday\" in formDataMultiClass)? formDataMultiClass.classtimeTuesday: \"00:00:00\",\n        \"tuesdayduration\": (\"selecteddurationTues\" in formDataMultiClass)? formDataMultiClass.selecteddurationTues: 0,\n\n        \"checkedWed\": formDataMultiClass.checkedWed,\n        \"wednesdaytime\": (\"classtimeWednesday\" in formDataMultiClass)? formDataMultiClass.classtimeWednesday: \"00:00:00\",\n        \"wednesdayduration\": (\"selecteddurationWed\" in formDataMultiClass)? formDataMultiClass.selecteddurationWed: 0,\n\n\n\n        \"checkedThurs\": formDataMultiClass.checkedThurs,\n        \"thursdaytime\": (\"classtimeThursday\" in formDataMultiClass)? formDataMultiClass.classtimeThursday: \"00:00:00\",\n        \"thursdayduration\": (\"selecteddurationThurs\" in formDataMultiClass)? formDataMultiClass.selecteddurationThurs: 0,\n\n        \"checkedFri\": formDataMultiClass.checkedFri,\n        \"fridaytime\": (\"classtimeFriday\" in formDataMultiClass)? formDataMultiClass.classtimeFriday: \"00:00:00\",\n        \"fridayduration\": (\"selecteddurationFri\" in formDataMultiClass)? formDataMultiClass.selecteddurationFri: 0,\n\n        \"checkedSat\": formDataMultiClass.checkedSat,\n        \"saturdaytime\": (\"classtimeSaturday\" in formDataMultiClass)? formDataMultiClass.classtimeSaturday: \"00:00:00\",\n        \"saturdayduration\": (\"selecteddurationSat\" in formDataMultiClass)? formDataMultiClass.selecteddurationSat: 0,\n\n        \"checkedSun\": formDataMultiClass.checkedSun,\n        \"sundaytime\": (\"classtimeSunday\" in formDataMultiClass)? formDataMultiClass.classtimeSunday: \"00:00:00\",\n        \"sundayduration\": (\"selecteddurationSun\" in formDataMultiClass)? formDataMultiClass.selecteddurationSun: 0,\n\n\n                        })\n                        .then((res) => {\n                                setCreating(creating=>false);\n                                console.log(\"multiple classes added\");\n\n                          })\n\n                        .catch((error)=>{\n                             if(error.response.status===401){\n                              Logout();\n                            }\n\n                        });\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport const putmeetinginfo =({meetingid, formData, props})=>{\n\n\n        axiosInstance.put(`meeting/editmeeting/${meetingid}`,{\n\n        \n        \n        \"name\": formData.name,\n        \"about\": formData.about,\n        \"meetingStatus\": formData.meetingStatus,\n        \"meetingdate\": formData.meetingdate,\n        \"meetingtime\": formData.meetingtime,\n        \"duration\": formData.duration,\n        \"meetingLink\": formData.meetingLink\n   \n\n                        })\n                        .then((res) => {\n                        props.onPress();\n                        console.log(\"meeting info edited\", formData);\n\n\n                          })\n\n                        .catch((error)=>{\n                             if(error.response.status===401){\n                              Logout();\n                            }\n\n                        });\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nexport const createnewbook =({ imageformData })=>{\n\n\naxiosInstance.post(`book/objects/`,imageformData ).then((res)=>{console.log(res.data)})\n\t\t.catch((error)=>{\n                             if(error.response.status===401){\n                              Logout();\n                            }\n\n                        });\n\n\n\n\n}\n\n\n\n\n\nexport const uploadprofieimage =({ imageformData, setImageUploaded, props, cancelHandler })=>{\n\n\naxiosInstance.put(`profileimageupload/`,imageformData ).then((res)=>{\n\t            props.rerender();\n\t            setImageUploaded(imageUploaded=>\"uploaded\");\n\t            cancelHandler(); \n\t            //setTimeout(res, 5000)\n                })\n                .catch((error)=>{\n                             if(error.response.status===401){\n                              Logout();\n                            }\n\n                        });\n\n}\t\n\n\n\nexport const uploadofficeid =({ imageformData })=>{\n\n\naxiosInstance.put(`officeidupload/`,imageformData ).then((res)=>{console.log(res.data)})\n                .catch((error)=>{\n                             if(error.response.status===401){\n                              Logout();\n                            }\n\n                        });\n\n}\n\n\n\nexport const uploadgovtid1 =({ imageformData })=>{\n\n\naxiosInstance.put(`govtid1upload/`,imageformData ).then((res)=>{console.log(res.data)})\n                .catch((error)=>{\n                             if(error.response.status===401){\n                              Logout();\n                            }\n\n                        });\n\n}\n\n\n\nexport const uploadgovtid2 =({ imageformData })=>{\n\n\naxiosInstance.put(`govtid2upload/`,imageformData ).then((res)=>{console.log(res.data)})\n                .catch((error)=>{\n                             if(error.response.status===401){\n                              Logout();\n                            }\n\n                        });\n\n}\n\n\n\nexport const uploaddobcert =({ imageformData })=>{\n\n\naxiosInstance.put(`dobcertupload/`,imageformData ).then((res)=>{console.log(res.data)})\n                .catch((error)=>{\n                             if(error.response.status===401){\n                              Logout();\n                            }\n\n                        });\n\n}\n\n\n\n\n\n\n\n\n\n\n\n\nexport const getbooks =({setData})=>{\n\n\n\n    axiosInstance.get()\n                  .then((res) => {\n                        setData(data=>res.data);\n                   })\n                  .catch((error)=>{\n                      if(error.response.status===401){\n                         Logout();\n                      }\n\n                   });\n\n}\n\n\n\n\n\n\nexport const getnoticeIddash =({noticeId})=>{\n\n\n        axiosInstance.get(`noticeids/`).then((res) => {\n                        console.log(\"noticeIds---\",res.data);\n\n                          })\n\n                        .catch((error)=>{\n                             if(error.response.status===401){\n                              Logout();\n                            }\n\n                        });\n\n\n}\n\n\nexport const putnoticeIddash =({noticeId})=>{\n\n\n        axiosInstance.put(`noticeids/`,{\n        \n\t\"readnoticeId\":noticeId\t\n\n\n                        })\n                        .then((res) => {\n\n                          })\n\n                        .catch((error)=>{\n                             if(error.response.status===401){\n                              Logout();\n                            }\n\n                        });\n                         \n\n}\n\n\n\n\nexport const changepassword =({formData, setLoginState})=>{\n\n\n        axiosInstance.put(`setotpaspswd/${formData.username}/`,{\n        \"username\":formData.username,\n\n\n                        })\n                        .then((res) => {\n\n                         setLoginState(loginState=>\"OTPsent\");\n\n                          })\n\n                        .catch((error)=>{\n                             if(error.response.status===401){\n                              Logout();\n                            }\n\n                        });\n\n\n\n}\n\n\n\n\n\n\n\n\nexport const putuserprofile =({data, formData})=>{\n\n\n        axiosInstance.put('userprofilegetput/',{\n        \"email\":formData.email,\n        \"username\":data.username,\n\t\"usertitle\":formData.usertitle,\t\n        \"firstname\": formData.firstname,\n        \"lastname\": formData.lastname,\n\t\"gender\": formData.gender,\n        //\"role\": \"student\",\n        \"position\":formData.position,\n        //\"dateofbirth\": formData.dateofbirth,\n         \"institute\": formData.institute,\n         \"city\": formData.city,\n         \"state\":formData.state,\n\t \"country\": formData.country,\t\n\n                        })\n                        .then((res) => {\n\n                        console.log(\"formData\", formData);\n\n\n                          })\n\n                        .catch((error)=>{\n                             if(error.response.status===401){\n                              Logout();\n                            }\n\n                        });\n\n}\n\n\n\n\n\n\nexport const putuserprofileadvanced =({data, formData})=>{\n\n\n        axiosInstance.put('userprofilegetput/',{\n        \"email\":formData.email,\n        \"username\":data.username,\n        \"usertitle\":formData.usertitle,\n        \"firstname\": formData.firstname,\n        \"lastname\": formData.lastname,\n        \"gender\": formData.gender,\n        //\"role\": \"student\",\n        \"position\":formData.position,\n        \"dateofbirth\": formData.dateofbirth,\n        \"institute\": formData.institute,\n        \"city\": formData.city,\n        \"state\":formData.state,\n        \"country\": formData.country,\n\n                        })\n                        .then((res) => {\n\n                        console.log(\"formData\", formData);\n\n\n                          })\n\n                        .catch((error)=>{\n                             if(error.response.status===401){\n                              Logout();\n                            }\n\n                        });\n\n}\n\n\n\n\n\n\nexport const deletemeeting =({meetingid })=>{\n\n\n        axiosInstance.delete(`meeting/object/${meetingid}/`,{\n\n\n                        })\n                        .then((res) => {\n                        console.log(\" meeting deleted---\");\n\n                          })\n\n                        .catch((error)=>{\n                             if(error.response.status===401){\n                              Logout();\n                            }\n\n                        });\n\n\n}\n\n\n\n\n\nexport const createnewpresentation =({ formData })=>{\n\n\n        axiosInstance.post(`meeting/createpresentation/`,{\n             \n             \"talktitle\": formData.talktitle,\n             \"talktime\": formData.talktime,\n             \"duration\": formData.duration,\n             \"speaker\": formData.speaker,\n             \"outspeaker\": null,\n             \"meetingid\":formData.meetingId             \n\n                        })\n                        .then((res) => {\n\n                                console.log(\"talk created\");\n\n                          })\n\n                        .catch((error)=>{\n                             if(error.response.status===401){\n                              Logout();\n                            }\n\n                        });\n\n}\n\n\n\n\nexport const getusersfromnames =({namestring, getSearchUsers})=>{\n\n\n        axiosInstance.get(`searchusersstr/${namestring}/`).then((res) => {\n\n\n                       getSearchUsers(searchUsers=>res.data);\n\n                          })\n\n                        .catch((error)=>{\n                             if(error.response.status===401){\n                              Logout();\n                            }\n\n                        });\n\n\n}\n\n\nexport const uploadtalk =({ imageformData,props })=>{\n\n\naxiosInstance.post(`meeting/uploadtalk/`,imageformData ).then((res)=>{\n\t              props.onPress();\n                  })\n                .catch((error)=>{\n                             if(error.response.status===401){\n                              Logout();\n                            }\n\n                        });\n\n}\n\n\n\n\nexport const deletepresentation =({talkId })=>{\n\n\n        axiosInstance.delete(`meeting/presentation/delete/${talkId}`,{\n\n\n                        })\n                        .then((res) => {\n                        console.log(\" presentation deleted---\");\n\n                          })\n\n                        .catch((error)=>{\n                             if(error.response.status===401){\n                              Logout();\n                            }\n\n                        });\n\n\n}\n\n\n//presentation/put/\n\n\n\n\nexport const putpresentation =({talkId, formData})=>{\n\n\n        axiosInstance.put(`/meeting/presentation/put/${talkId}`,{\n\t\t\n        \"talktitle\":formData.talktitle,\n        \"talktime\":formData.talktime,\n        \"duration\": formData.duration\t\t\n\n\n                        })\n                        .then((res) => {\n\n\t\t\t\tconsole.log(\"put ppt: \", res.data)\n                          })\n\n                        .catch((error)=>{\n                             if(error.response.status===401){\n                              Logout();\n                            }\n\n                        });\n\n}\n\nexport const putaddcontact= ({contactId})=>{\n\naxiosInstance.put(`addcontact/`,{\n\n        \"contactId\":contactId,\n\n\n                        })\n                        .then((res) => {\n\n                                console.log(\"contact added: \", res.data)\n                          })\n\n                        .catch((error)=>{\n                             if(error.response.status===401){\n                              Logout();\n                            }\n\n                        });\n\n}\n\n\n\n\n\nexport const createedudegree = ({formData,data})=>{\n\n     axiosInstance\n        .post(`edudegreecreate/`,{\n\n        \"userId\": data.id,\n        \"institute\": formData.institute,\n        \"degreename\": formData.degreename,\n        \"startDate\": formData.startData,\n        \"endDate\": formData.endDate\n\n                        })\n                        .then((res) => {\n                })\n         .catch((error)=>{\n                     if(error.response.status===401){\n                     Logout();\n\n                      }\n\n                });\n\n}\n\n\n\n\n\n\nexport const getdegreenames =({ getDegreeNames})=>{\n\n\n        axiosInstance.get(`degreenames/`).then((res) => {\n\n\n                       getDegreeNames(degreeNames=>res.data);\n\n                          })\n\n                        .catch((error)=>{\n                             if(error.response.status===401){\n                              Logout();\n                            }\n\n                        });\n\n\n}\n\n\n\n\n\nexport const getinstitutenames =({ getInstituteNames})=>{\n\n\n        axiosInstance.get(`institutenames/`).then((res) => {\n\n                       getInstituteNames(degreeNames=>res.data);\n\n                          })\n\n                        .catch((error)=>{\n                             if(error.response.status===401){\n                              Logout();\n                            }\n\n                        });\n\n\n}\n\n\n\n\nexport const deleteedudegree =({edudegreeid })=>{\n\n\n        axiosInstance.delete(`edudegreedelete/${edudegreeid}/`,{\n\n\n                        })\n                        .then((res) => {\n                        console.log(\" edu degree deleted---\");\n\n                          })\n\n                        .catch((error)=>{\n                             if(error.response.status===401){\n                              Logout();\n                            }\n\n                        });\n\n\n}\n\n\n\n\n\n\nexport const createaddress = ({formData})=>{\n\n     axiosInstance\n        .post(`addnewaddress/`,{\n\n               \"userId\": formData.userId,\n               \"careof\": formData.careof,\n               \"houseno\": formData.houseno,\n               \"streetno\": formData.streetno,\n               \"district\": formData.district,\n               \"pincode\": formData.pincode,\n               \"city\": formData.city,\n               \"state\": formData.state,\n               \"country\": formData.country,\n               \"addressType\": formData.addressType\n\n                        })\n                        .then((res) => {\n                })\n         .catch((error)=>{\n                     if(error.response.status===401){\n                     Logout();\n\n                      }\n\n                });\n\n}\n\n\n\n\nexport const createachievement = ({ formData})=>{\n\n     axiosInstance\n        .post(`createachievement/`,{\n\n                   \"name\": formData.name,\n                   \"description\": formData.description,\n                   \"startDate\": formData.startDate,\n                   \"endDate\": formData.endDate,\n                   \"userId\": formData.userId\n\n                        })\n                        .then((res) => {\n                })\n         .catch((error)=>{\n                     if(error.response.status===401){\n                     Logout();\n\n                      }\n\n                });\n\n}\n\n\n\n\nexport const createaccountwithmobileno = ({formData, setLoading})=>{\n\n\n  axiosInstance.post(`createaccountwithphonenum/`,{\n              \n        \"username\": formData.username,\n        \"usertype\": formData.usertype\n\n                        })\n                        .then((res) => {\n\n                     setLoading(loading=>\"created\");\n\n                })\n         .catch((error)=>{\n\n\t\t      console.log(\"error\", error);\n                     if(error.response.status===401){\n                     Logout();\n\n                      }\n\n                });\n\n}\n\n\n\n\n\n\nexport const checkuserexist =({ setUserExists, username})=>{\n\n\n        axiosInstance.get(`getuserfromusername/${username}`).then((res) => {\n\n\t\t        setUserExists(userExists=>res.data.message);\n\n                          })\n\n                        .catch((error)=>{\n                             if(error.response.status===401){\n                              Logout();\n                            }\n\n                        });\n\n\n}\n\n\n\n\n\n\n\n\nexport const getgeneralmeetings =({ getGeneralMeetings})=>{\n\n\n        axiosInstance.get(`generalmeetings/`).then((res) => {\n\n                        getGeneralMeetings(generalMeetings=>res.data);\n\n                          })\n\n                        .catch((error)=>{\n                             if(error.response.status===401){\n                              Logout();\n                            }\n\n                        });\n\n\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}