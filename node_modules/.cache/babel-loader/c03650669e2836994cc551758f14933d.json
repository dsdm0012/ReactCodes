{"ast":null,"code":"'use strict'; // Cached copy of the <canvas> used to check silent video frames.\n\nvar canvas = null;\nvar N_SAMPLES = 3;\nvar SAMPLE_HEIGHT = 50;\nvar SAMPLE_INTERVAL_MS = 250;\nvar SAMPLE_WIDTH = 50;\n/**\n * Check whether the current video frame is silent by selecting a 50x50\n * sample and calculating the max value of the pixel data. If it is 0, then\n * the frame is considered to be silent.\n * @private\n * @param {HTMLVideoElement} el\n * @returns {boolean} true if silent, false if not\n */\n\nfunction checkSilence(el) {\n  try {\n    var context = canvas.getContext('2d');\n    context.drawImage(el, 0, 0, SAMPLE_WIDTH, SAMPLE_HEIGHT);\n    var frame = context.getImageData(0, 0, SAMPLE_WIDTH, SAMPLE_HEIGHT);\n    var frameDataWithoutAlpha = frame.data.filter(function (item, i) {\n      return (i + 1) % 4;\n    });\n    var max = Math.max.apply(Math, frameDataWithoutAlpha);\n    return max === 0;\n  } catch (ex) {\n    // eslint-disable-next-line no-console\n    console.log('Error checking silence: ', ex);\n    return false;\n  }\n}\n/**\n * Detect whether the video stream rendered by the given HTMLVideoElement is silent.\n * @param {HTMLVideoElement} el\n * @returns {Promise<boolean>} true if silent, false if not.\n */\n\n\nfunction detectSilentVideo(el) {\n  // Create the canvas when detectSilentVideo() is called for the\n  // first time.\n  canvas = canvas || document.createElement('canvas'); // Resolve the returned Promise with true if 3 consecutive sample\n  // frames from the video being played by the HTMLVideoElement are\n  // silent.\n\n  return new Promise(function (resolve) {\n    var samplesLeft = N_SAMPLES;\n    setTimeout(function doCheckSilence() {\n      samplesLeft--;\n\n      if (!checkSilence(el)) {\n        return resolve(false);\n      }\n\n      if (samplesLeft > 0) {\n        return setTimeout(doCheckSilence, SAMPLE_INTERVAL_MS);\n      }\n\n      return resolve(true);\n    }, SAMPLE_INTERVAL_MS);\n  });\n}\n\nmodule.exports = detectSilentVideo;","map":null,"metadata":{},"sourceType":"script"}