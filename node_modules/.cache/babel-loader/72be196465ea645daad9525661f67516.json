{"ast":null,"code":"var _jsxFileName = \"/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/MainApps/Dashboard/Subject/Syllabus/CourseSyllabus.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport classes from './CourseSyllabus.module.css';\nimport { getsyllabusfromId, putsectiondata, createnewsection, deletesectiondata } from '../../../../CommonApps/AllAPICalls.js';\nimport AddChapterButton from './AddChapterButton';\nimport SectionIter from './SectionIter';\nimport AddSectionButton from './AddSectionButton';\nimport ChapterCreationForm from './ChapterCreationForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CourseSyllabus = props => {\n  _s();\n\n  const [syllabusData, getSyllabusData] = useState({\n    \"chapters\": []\n  });\n  const [rerender, setRerender] = useState(false);\n  let syllabusId = props.selectedCourse[0].syllabus;\n  useEffect(() => {\n    getsyllabusfromId({\n      syllabusId,\n      getSyllabusData\n    });\n    return () => {\n      getSyllabusData(syllabusData => ({\n        \"chapters\": []\n      }));\n    };\n  }, [syllabusId, rerender]); //console.log(\"syllabus Data: \", syllabusData);\n\n  /*const [showSyllabus, changeShowSyllabus]=useState(true);\n   const showSyllabusHandler = ()=>{\n    changeShowSyllabus(true);\n  }\n    const hideSyllabusHandler = ()=>{\n     changeShowSyllabus(false);\n  }\n  */\n\n  const [showSectionEdit, setShowSectionEdit] = useState({\n    chapterId: 0,\n    sectionId: 0\n  });\n  /*const [sectionEditStyle, setSectionEditStyle] = useState({\n    borderStyle: 'none',\n          borderWidth: '1px',\n          borderColor: 'lightgrey',\n          margin: '10px'\n   });*/\n\n  let sectionEditStyle = {\n    borderStyle: 'none',\n    borderWidth: '1px',\n    borderColor: 'lightgrey',\n    margin: '10px'\n  };\n\n  const editSectionHandler = ({\n    chapterId,\n    sectionId\n  }) => {\n    //console.log(\"edit chapterId, sectionid : \",chapterId,'--',sectionId);\n    setShowSectionEdit({\n      chapterId: chapterId,\n      sectionId: sectionId\n    });\n  };\n\n  const addSectionHandler = ({\n    chapterId\n  }) => {\n    //console.log(\"create new section: \",chapterId );\t  \n    let sectionPostData = {\n      \"name\": \"New Section\",\n      \"chapterid\": chapterId\n    };\n    createnewsection({\n      sectionPostData\n    });\n    setRerender(rerender => !rerender);\n  };\n\n  const deleteSectionHandler = ({\n    sectionId\n  }) => {\n    //console.log(\"delete button pressed\");\n    let sectionid = sectionId;\n    deletesectiondata({\n      sectionid\n    });\n    setRerender(rerender => !rerender);\n  };\n\n  const [onChangeSectionData, setOnChangeSectionData] = useState([]);\n\n  const handleChange = event => {\n    let alltext = event.target.value;\n    let topicnamesArray = alltext.split(\";\");\n    let topicArray = [];\n\n    for (let i = 0; i < topicnamesArray.length; i++) {\n      let topicObj = {};\n      topicObj['name'] = topicnamesArray[i];\n      topicArray.push(topicObj);\n    }\n\n    setOnChangeSectionData(onChangeSectionData => topicArray);\n  };\n\n  const [sectionText, setSectionText] = useState({}); //const sectionText = useMemo(() => {}, []);\n  //const sectionText={};\t\n\n  useEffect(() => {\n    let sectionData = \"\";\n    syllabusData.chapters.forEach((chapter, cindex) => {\n      chapter.sections.forEach((section, sindex) => {\n        sectionData = \"\";\n        section.topics.forEach((topic, tindex) => {\n          sectionData = sectionData + topic.name;\n        });\n        let chapterId = chapter.id;\n        let sectionId = section.id;\n        let secName = 'c' + chapterId + 's' + sectionId;\n        sectionText[secName] = sectionData;\n      });\n    });\n  }, [syllabusData, sectionText]);\n\n  const SaveSectionHandler = ({\n    chapterId,\n    sectionId\n  }) => {\n    //console.log(\"chapterId, sectionId: \",chapterId,\"----\" ,sectionId);\n    let sectionid = sectionId;\n    let topicData = onChangeSectionData;\n    console.log(\"topicData: \", topicData);\n    putsectiondata({\n      sectionid,\n      topicData\n    });\n    setShowSectionEdit({\n      chapterId: 0,\n      sectionId: 0\n    });\n    setRerender(rerender => !rerender);\n  };\n\n  const [showChapterCreateForm, setShowChapterCreateForm] = useState(false);\n\n  const addChapterHandler = () => {\n    console.log(\"New chapter added\"); //let chapterPostData = {\"name\":\"New Section\",\"chapternum\": };\n    //createnewchapter({chapterPostData});\t    \n\n    setShowChapterCreateForm(true);\n  };\n\n  const closeChapterFormHandler = () => {\n    setShowChapterCreateForm(false);\n  }; //console.log(\"showSectionEdit.chapterId:   \",showSectionEdit.chapterId,'---', showSectionEdit.sectionId);\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.courseSyllabus,\n    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n      children: \" COURSE SYLLABUS:  \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }, this), syllabusData.length !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.syllabusContent,\n      children: /*#__PURE__*/_jsxDEV(\"ol\", {\n        className: classes.chapterNames,\n        children: [/*#__PURE__*/_jsxDEV(AddChapterButton, {\n          addChapterHandler: addChapterHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 24\n        }, this), showChapterCreateForm && /*#__PURE__*/_jsxDEV(ChapterCreationForm, {\n          onPress: closeChapterFormHandler,\n          syllabusData: syllabusData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 36\n        }, this), syllabusData.chapters.map((chapter, index) => {\n          let chapterId = chapter.id;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: chapter.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 38\n            }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n              children: [chapter.sections.map((section, sindex) => {\n                //let sectionId = section.id;\n                let csname = 'c' + chapter.id + 's' + section.id;\n                return /*#__PURE__*/_jsxDEV(SectionIter, {\n                  sectionEditStyle: sectionEditStyle,\n                  showSectionEdit: showSectionEdit,\n                  chapter: chapter,\n                  section: section,\n                  editSectionHandler: editSectionHandler,\n                  deleteSectionHandler: deleteSectionHandler,\n                  SaveSectionHandler: SaveSectionHandler,\n                  csname: csname,\n                  handleChange: handleChange,\n                  sectionText: sectionText,\n                  sindex: sindex\n                }, sindex, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 19\n                }, this);\n              }), /*#__PURE__*/_jsxDEV(AddSectionButton, {\n                addSectionHandler: event => addSectionHandler({\n                  chapterId\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 8\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 20\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 34\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 216,\n    columnNumber: 1\n  }, this);\n};\n\n_s(CourseSyllabus, \"c4F7zd2fVAWtVnl0egtVwREzj4g=\");\n\n_c = CourseSyllabus;\nexport default CourseSyllabus;\n/*\n\n { !showSyllabus && <button onClick={showSyllabusHandler}> Show <BsChevronDoubleDown className={classes.ExpandSyllIcon}/>  </button> }\n\n        { showSyllabus && <button onClick={hideSyllabusHandler}> Hide <BsChevronDoubleUp className={classes.ExpandSyllIcon}/>  </button>}\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"CourseSyllabus\");","map":{"version":3,"sources":["/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/MainApps/Dashboard/Subject/Syllabus/CourseSyllabus.js"],"names":["React","useState","useEffect","classes","getsyllabusfromId","putsectiondata","createnewsection","deletesectiondata","AddChapterButton","SectionIter","AddSectionButton","ChapterCreationForm","CourseSyllabus","props","syllabusData","getSyllabusData","rerender","setRerender","syllabusId","selectedCourse","syllabus","showSectionEdit","setShowSectionEdit","chapterId","sectionId","sectionEditStyle","borderStyle","borderWidth","borderColor","margin","editSectionHandler","addSectionHandler","sectionPostData","deleteSectionHandler","sectionid","onChangeSectionData","setOnChangeSectionData","handleChange","event","alltext","target","value","topicnamesArray","split","topicArray","i","length","topicObj","push","sectionText","setSectionText","sectionData","chapters","forEach","chapter","cindex","sections","section","sindex","topics","topic","tindex","name","id","secName","SaveSectionHandler","topicData","console","log","showChapterCreateForm","setShowChapterCreateForm","addChapterHandler","closeChapterFormHandler","courseSyllabus","syllabusContent","chapterNames","map","index","csname"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport classes from './CourseSyllabus.module.css';\nimport {getsyllabusfromId,\n\tputsectiondata,createnewsection,\n\tdeletesectiondata} from '../../../../CommonApps/AllAPICalls.js';\n\nimport AddChapterButton  from './AddChapterButton';\nimport SectionIter from './SectionIter';\nimport AddSectionButton from './AddSectionButton';\n\n\nimport ChapterCreationForm from './ChapterCreationForm';\n\n\n\n\n\nconst CourseSyllabus=(props)=>{\n\n\n\n    const [syllabusData, getSyllabusData] = useState({\"chapters\":[]}); \n    const [rerender, setRerender] = useState(false);\n \n   let syllabusId = props.selectedCourse[0].syllabus;\n\n\n    useEffect(()=>{\n\n       getsyllabusfromId({syllabusId,getSyllabusData});\n\n       return ()=>{\n           getSyllabusData(syllabusData=>({\"chapters\":[]}));\n       }\n\n    },[ syllabusId,rerender]);\n\n\n    //console.log(\"syllabus Data: \", syllabusData);\n\n\n    /*const [showSyllabus, changeShowSyllabus]=useState(true);\n\n    const showSyllabusHandler = ()=>{\n      changeShowSyllabus(true);\n    }\n\n\n    const hideSyllabusHandler = ()=>{\n       changeShowSyllabus(false);\n    }\n    */\n\n    const [showSectionEdit, setShowSectionEdit] = useState({chapterId:0,sectionId:0});\n\n    /*const [sectionEditStyle, setSectionEditStyle] = useState({\n\n\t    borderStyle: 'none',\n            borderWidth: '1px',\n            borderColor: 'lightgrey',\n            margin: '10px'\n\n    });*/\n\n\n   let sectionEditStyle = {\n   borderStyle: 'none',\n            borderWidth: '1px',\n            borderColor: 'lightgrey',\n            margin: '10px'\n\n   }\n\n\n\n\n\n\n\n\n    const editSectionHandler = ({chapterId, sectionId})=>{\n\n\n       //console.log(\"edit chapterId, sectionid : \",chapterId,'--',sectionId);\n\n       setShowSectionEdit({chapterId: chapterId,sectionId: sectionId}); \n\n    }\n\n\n    const addSectionHandler = ({chapterId })=>{\n\n       //console.log(\"create new section: \",chapterId );\t  \n       \t   \n       let sectionPostData = {\"name\":\"New Section\",\"chapterid\":chapterId };\n\n       createnewsection({ sectionPostData });\n       setRerender(rerender=>!rerender);\n\n    }\n\n\n    const deleteSectionHandler =({sectionId})=>{\n     //console.log(\"delete button pressed\");\n      let sectionid=sectionId;\n      deletesectiondata({sectionid});\n      setRerender(rerender=>!rerender);\n    }\n\n\n\n\n\n\n    const [onChangeSectionData, setOnChangeSectionData]=useState([]);\n\n    const handleChange=(event)=>{\n\n    let alltext=event.target.value;\n    let topicnamesArray = alltext.split(\";\");\n    let topicArray = []\n\n      for (let i = 0; i < topicnamesArray.length; i++) {\n        let topicObj={}\n\ttopicObj['name']=topicnamesArray[i];\n\ttopicArray.push(topicObj)   \n      }\n\n    setOnChangeSectionData(onChangeSectionData=>topicArray);\t   \n\n    }\n\n    const [sectionText, setSectionText] = useState({});\n\n\n    \n    //const sectionText = useMemo(() => {}, []);\n\n    //const sectionText={};\t\n\n    useEffect(()=>{\n\n    let sectionData=\"\";\n\n    syllabusData.chapters.forEach((chapter,cindex)=>{\n\n       chapter.sections.forEach((section,sindex)=>{\n\n\t        sectionData=\"\";\n                section.topics.forEach((topic,tindex)=>{\n\n\t            sectionData=sectionData+topic.name;\t\t\n\n\t\t  \t\n\t        });\n\t        let chapterId = chapter.id;\n\t        let sectionId = section.id;\n\t        let secName = 'c'+chapterId+'s'+sectionId;\n                sectionText[secName]=sectionData;\n\t          \n          });\n         \n\t    \n\n       });\n\n    },[syllabusData, sectionText]);\n\n\n\n\n\n    const SaveSectionHandler =({chapterId, sectionId})=>{\n   \n       //console.log(\"chapterId, sectionId: \",chapterId,\"----\" ,sectionId);\n       \n       let sectionid = sectionId;\n       let topicData = onChangeSectionData;\n       console.log(\"topicData: \", topicData)\t   \n       putsectiondata({sectionid,topicData});\n      \n       setShowSectionEdit({chapterId:0,sectionId:0});\n       setRerender(rerender=>!rerender);\n\n    }\n\n\n    const [showChapterCreateForm, setShowChapterCreateForm]= useState(false);\n\n    const addChapterHandler =()=>{\n\n     console.log(\"New chapter added\");\n     //let chapterPostData = {\"name\":\"New Section\",\"chapternum\": };\n\n     //createnewchapter({chapterPostData});\t    \n     setShowChapterCreateForm(true);\n\n    }\t\n\n    const closeChapterFormHandler=()=>{\n     setShowChapterCreateForm(false);\n\n    }\n\n\n\n\n\n    //console.log(\"showSectionEdit.chapterId:   \",showSectionEdit.chapterId,'---', showSectionEdit.sectionId);\n\n\n\n\nreturn (\n\n<div className={classes.courseSyllabus}>\n\n        <i> COURSE SYLLABUS:  </i>\n\n\t{ syllabusData.length !==null &&<div className={classes.syllabusContent}>\n\n\t \n\n        <ol className={classes.chapterNames}>\n\n                       <AddChapterButton addChapterHandler={addChapterHandler}/>\n\t\t       {showChapterCreateForm && <ChapterCreationForm onPress={closeChapterFormHandler} syllabusData={syllabusData}/>}\n\n\n\n\n         {  \n            syllabusData.chapters.map((chapter,index)=>{\n\n\t\t  let chapterId = chapter.id;\n\n         \t  return <li key={index} > <b>{chapter.name}</b> \n\t\t\t    <ol>\n\n                              {chapter.sections.map((section, sindex)=>{\n\t\t\t\t       //let sectionId = section.id;\n                                       let csname='c'+chapter.id+'s'+section.id;\n\n\t\t\t\t       return <SectionIter\n\t\t\t\t            key={sindex}\n                                            sectionEditStyle={sectionEditStyle}\n\t\t\t\t            showSectionEdit={showSectionEdit}\n\t\t\t\t            chapter = {chapter}\n\t\t\t\t            section = {section}\n\t\t\t\t            editSectionHandler={editSectionHandler}\n\t\t\t\t            deleteSectionHandler={deleteSectionHandler}\n\t\t\t\t            SaveSectionHandler={SaveSectionHandler}\n                                            csname = {csname}\n\t\t\t\t            handleChange = {handleChange}\n\t\t\t\t            sectionText ={sectionText}\n                                            sindex={sindex}\n\t\t\t\t\t   />  \n\t\t\t\t     \t      \n\t\t\t              }\n\t\t\t        )\n\n\n\t\t\t      }\n\n\n\n\t\t             {<AddSectionButton addSectionHandler={(event)=>addSectionHandler({chapterId})}/>}\n\n\n\t\t            </ol>\n\n\t\t         </li>\t    \n\n\t       })\n\t  }\n       </ol>\n   </div>}\n\n</div>\n\n);\n\n}\n\nexport default CourseSyllabus;\n\n\n\n/*\n\n { !showSyllabus && <button onClick={showSyllabusHandler}> Show <BsChevronDoubleDown className={classes.ExpandSyllIcon}/>  </button> }\n\n        { showSyllabus && <button onClick={hideSyllabusHandler}> Hide <BsChevronDoubleUp className={classes.ExpandSyllIcon}/>  </button>}\n*/\n"]},"metadata":{},"sourceType":"module"}