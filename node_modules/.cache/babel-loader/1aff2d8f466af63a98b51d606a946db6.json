{"ast":null,"code":"var _jsxFileName = \"/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/allAppsStudent/Messages/VATChat/ChatWindow/ChatWindowTest.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport classes from \"./ChatWindow.module.css\";\nimport ChatUserInfoTopBar from \"./ChatUserInfoTopBar\";\nimport ChatScreen from \"./ChatScreen\";\nimport ChatInput from \"./ChatInput\";\nimport { w3cwebsocket as W3CWebSocket } from 'websocket';\nimport { Picker } from \"emoji-mart\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport Login from '../../../../CommonApps/Login';\nimport axiosInstance from '../../../../axios';\nimport { MdSend } from 'react-icons/md';\nimport { postchatcomment, getchatcomments } from '../../../../CommonApps/AllAPICalls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socketURL = 'ws://127.0.0.1:8000/ws/chat/class/';\n\nfunction reconnectingSocket(socketURL) {}\n\nfunction useMessages() {\n  _s();\n\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    function handleMessage(message) {\n      setMessages([...messages, message]);\n    }\n\n    client.on(handleMessage);\n    return () => client.off(handleMessage);\n  }, [messages, setMessages]);\n  return messages;\n}\n\n_s(useMessages, \"RyA59LRbn9goj/9N7rELX+NWNVI=\");\n\nconst client = reconnectingSocket(socketURL);\n\nconst ChatWindow = props => {\n  _s2();\n\n  console.log(\"chat window test\");\n  const [loggedIn, setLoggedIn] = useState(false);\n  useEffect(() => {\n    axiosInstance.get().then(res => {\n      setLoggedIn(loggedIn => true); // console.log(res.data);\n    });\n  }, []);\n  let roomname = 'class';\n  const [message, setMessage] = useState('');\n  const messages = useMessages();\n  const [isConnected, setIsConnected] = useState(client.isConnected());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.chatWindow,\n    children: [/*#__PURE__*/_jsxDEV(ChatUserInfoTopBar, {\n      clickedUserId: props.clickedUserId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(ChatScreen, {\n      messages: state.messages,\n      commentObj: commentObj\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.chatInput,\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.addCommentForm,\n        onSubmit: sendMessage,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.chatInput,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            className: classes.inputTextBox,\n            value: message,\n            onChange: e => setMessage(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 16\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 16\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: classes.submit_button,\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: [/*#__PURE__*/_jsxDEV(MdSend, {\n              className: classes.sendButtonIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 80\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 77\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 6\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 1\n  }, this);\n};\n\n_s2(ChatWindow, \"GvoN8akjdx9xlz7SEAn6XuifKoE=\", false, function () {\n  return [useMessages];\n});\n\n_c = ChatWindow;\nexport default ChatWindow;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"sources":["/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/allAppsStudent/Messages/VATChat/ChatWindow/ChatWindowTest.js"],"names":["React","useState","useEffect","useRef","classes","ChatUserInfoTopBar","ChatScreen","ChatInput","w3cwebsocket","W3CWebSocket","Picker","Login","axiosInstance","MdSend","postchatcomment","getchatcomments","socketURL","reconnectingSocket","useMessages","messages","setMessages","handleMessage","message","client","on","off","ChatWindow","props","console","log","loggedIn","setLoggedIn","get","then","res","roomname","setMessage","isConnected","setIsConnected","chatWindow","clickedUserId","state","commentObj","chatInput","addCommentForm","sendMessage","inputTextBox","e","target","value","submit_button","sendButtonIcon"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,EAAiCC,MAAjC,QAA8C,OAA9C;AACA,OAAOC,OAAP,MAAoB,yBAApB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAAQC,YAAY,IAAIC,YAAxB,QAA4C,WAA5C;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,OAAO,+BAAP;AACA,OAAOC,KAAP,MAAkB,8BAAlB;AACA,OAAOC,aAAP,MAA0B,mBAA1B;AACA,SAAQC,MAAR,QAAqB,gBAArB;AACA,SAAQC,eAAR,EAAwBC,eAAxB,QAA8C,oCAA9C;;AAEA,MAAMC,SAAS,GAAE,oCAAjB;;AAMA,SAASC,kBAAT,CAA4BD,SAA5B,EAAuC,CAGtC;;AAGD,SAASE,WAAT,GAAuB;AAAA;;AACrB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,aAASmB,aAAT,CAAuBC,OAAvB,EAAgC;AAC9BF,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcG,OAAd,CAAD,CAAX;AACD;;AACDC,IAAAA,MAAM,CAACC,EAAP,CAAUH,aAAV;AACA,WAAO,MAAME,MAAM,CAACE,GAAP,CAAWJ,aAAX,CAAb;AACD,GANQ,EAMN,CAACF,QAAD,EAAWC,WAAX,CANM,CAAT;AAQA,SAAOD,QAAP;AACD;;GAZQD,W;;AAoBT,MAAMK,MAAM,GAAGN,kBAAkB,CAACD,SAAD,CAAjC;;AAEA,MAAMU,UAAU,GAAIC,KAAD,IAAU;AAAA;;AAG3BC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AAEA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0B9B,QAAQ,CAAC,KAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAE,MAAI;AACfU,IAAAA,aAAa,CAACoB,GAAd,GAAoBC,IAApB,CAA0BC,GAAD,IAAS;AACZH,MAAAA,WAAW,CAACD,QAAQ,IAAE,IAAX,CAAX,CADY,CAEb;AACN,KAHf;AAIY,GALH,EAKI,EALJ,CAAT;AAOA,MAAIK,QAAQ,GAAC,OAAb;AAEA,QAAM,CAACb,OAAD,EAAUc,UAAV,IAAwBnC,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAMkB,QAAQ,GAAGD,WAAW,EAA5B;AACA,QAAM,CAACmB,WAAD,EAAcC,cAAd,IAAgCrC,QAAQ,CAACsB,MAAM,CAACc,WAAP,EAAD,CAA9C;AAmCF,sBAEA;AAAK,IAAA,SAAS,EAAEjC,OAAO,CAACmC,UAAxB;AAAA,4BAEA,QAAC,kBAAD;AAAoB,MAAA,aAAa,EAAEZ,KAAK,CAACa;AAAzC;AAAA;AAAA;AAAA;AAAA,YAFA,eAIA,QAAC,UAAD;AAAY,MAAA,QAAQ,EAAEC,KAAK,CAACtB,QAA5B;AAAuC,MAAA,UAAU,EAAEuB;AAAnD;AAAA;AAAA;AAAA;AAAA,YAJA,eAMA;AAAK,MAAA,SAAS,EAAEtC,OAAO,CAACuC,SAAxB;AAAA,6BAMK;AAAM,QAAA,SAAS,EAAEvC,OAAO,CAACwC,cAAzB;AAAyC,QAAA,QAAQ,EAAEC,WAAnD;AAAA,gCAGa;AAAK,UAAA,SAAS,EAAEzC,OAAO,CAACuC,SAAxB;AAAA,kCAEH;AAAO,YAAA,SAAS,EAAEvC,OAAO,CAAC0C,YAA1B;AAAwC,YAAA,KAAK,EAAExB,OAA/C;AAAwD,YAAA,QAAQ,EAAEyB,CAAC,IAAIX,UAAU,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV;AAAjF;AAAA;AAAA;AAAA;AAAA,kBAFG,eAGH;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHG;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHb,eAaY;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAuB,UAAA,SAAS,EAAG7C,OAAO,CAAC8C,aAA3C;AAAA,kCAA2D;AAAA,oCAAG,QAAC,MAAD;AAAQ,cAAA,SAAS,EAAE9C,OAAO,CAAC+C;AAA3B;AAAA;AAAA;AAAA;AAAA,oBAAH;AAAA;AAAA;AAAA;AAAA;AAAA,kBAA3D;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbZ;AAAA;AAAA;AAAA;AAAA;AAAA;AANL;AAAA;AAAA;AAAA;AAAA,YANA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFA;AA4CC,CAjGD;;IAAMzB,U;UAiBaR,W;;;KAjBbQ,U;AAmGN,eAAeA,UAAf","sourcesContent":["import React,{useState,useEffect,useRef} from \"react\";\nimport classes from \"./ChatWindow.module.css\"\nimport ChatUserInfoTopBar from \"./ChatUserInfoTopBar\";\nimport ChatScreen from \"./ChatScreen\";\nimport ChatInput from \"./ChatInput\";\nimport {w3cwebsocket as W3CWebSocket } from 'websocket';\nimport { Picker } from \"emoji-mart\";\nimport \"emoji-mart/css/emoji-mart.css\";\nimport Login from '../../../../CommonApps/Login';\nimport axiosInstance from '../../../../axios';\nimport {MdSend} from 'react-icons/md';\nimport {postchatcomment,getchatcomments} from '../../../../CommonApps/AllAPICalls';\n\nconst socketURL= 'ws://127.0.0.1:8000/ws/chat/class/'\n\n\n\n\n\nfunction reconnectingSocket(socketURL) {\n\n\n}\n\n\nfunction useMessages() {\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    function handleMessage(message) {\n      setMessages([...messages, message]);\n    }\n    client.on(handleMessage);\n    return () => client.off(handleMessage);\n  }, [messages, setMessages]);\n\n  return messages;\n}\n\n\n\n\n\n\n\nconst client = reconnectingSocket(socketURL);\n\nconst ChatWindow = (props) =>{\n\n\n  console.log(\"chat window test\");\n\n  const [loggedIn, setLoggedIn] = useState(false);\n\n  useEffect( ()=>{\n  axiosInstance.get().then((res) => {\n                        setLoggedIn(loggedIn=>true);\n                       // console.log(res.data);\n                });\n             },[]);\n\n  let roomname='class'\n\n  const [message, setMessage] = useState('');\n  const messages = useMessages();\n  const [isConnected, setIsConnected] = useState(client.isConnected());\n\n\n   \t\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nreturn(\n\n<div className={classes.chatWindow}>\n\n<ChatUserInfoTopBar clickedUserId={props.clickedUserId} />\n\n<ChatScreen messages={state.messages}  commentObj={commentObj}/>\n\t\n<div className={classes.chatInput}>\n\n\n\n\n\n     <form className={classes.addCommentForm} onSubmit={sendMessage}>\n\n\n                  <div className={classes.chatInput} >\n\n               <input className={classes.inputTextBox} value={message} onChange={e => setMessage(e.target.value)} />\n               <button type=\"submit\">Send</button>\n\n\n\n                  </div>\n\n                 \n                 <button type=\"submit\"  className= {classes.submit_button} ><b><MdSend className={classes.sendButtonIcon}/> </b> </button>\n                  \n     </form>\n\n\t{/*\n   <Picker onSelect={addEmoji} />\n        */}\n\n</div>\n\n\n\n\t\n</div>\n\n);\n\n}\n\nexport default ChatWindow;\n"]},"metadata":{},"sourceType":"module"}