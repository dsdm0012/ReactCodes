{"ast":null,"code":"var _jsxFileName = \"/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/MainApps/Dashboard/General/GeneralContentDiv.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport classes from './GeneralContentDiv.module.css';\nimport base from '../../CommonAppUtilities/AppContentDiv.module.css';\nimport TopToolBarTeacher from './components/Teacher/TopToolBar'; //import AppointmentsAndDutiesTeacher from './components/Teacher/AppointmentsAndDuties';\n\nimport CoursesGridContainerTeacher from './components/Teacher/CoursesGridContainer';\nimport TopToolBarStudent from './components/Student/TopToolBar';\nimport AppointmentsAndDutiesStudent from './components/Student/AppointmentsAndDuties';\nimport CoursesGridContainerStudent from './components/Student/CoursesGridContainer';\nimport { getuser } from './../../../CommonApps/AllAPICalls'; //getcoursesbyCourseId\n//getcoursesbyglobalCodeArray\n\nimport NoticeBoxContainer from './NoticeBoard/NoticeBoxContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst GeneralContentDiv = props => {\n  _s();\n\n  const [data, setData] = useState({\n    \"dashboardcourses\": []\n  }); //const [courseData,getCourseData] = useState([]);\n  //const [showCourse,setShowCourse]=useState(true);\n\n  const [rerender, setRerender] = useState(false);\n  const [rerenderS, setRerenderS] = useState(false);\n  const [showNoticeBoard, setShowNoticeBoard] = useState(false);\n\n  const reRenderHandler = () => {\n    setRerender(!rerender);\n    props.onPress();\n  };\n\n  const reRenderHandlerS = () => {\n    setRerenderS(!rerenderS);\n  };\n\n  useEffect(() => {\n    getuser({\n      setData\n    });\n  }, [rerenderS, rerender]);\n  /*\t\n   useEffect(()=>{\n      let courseIds = data.dashboardcourses;\n      courseIds.map((id, index)=>{\n          if(id !==0){\n              let globalCode=100000+id;\n              getcoursesbyglobalCodeArray({globalCode, getCourseData});\n          }\n      });\n       return ()=>{\n          getCourseData(courseData=>[]);\n      }\n   },[data.dashboardcourses ]);\n  */\n  //const noticeboardHandler=()=>{\n  //setShowCourse(false);\n  //}\n  //const courseHandler=()=>{\n  //setShowCourse(true);\n  //}\n\n  const showTNoticeBoard = () => {\n    setShowNoticeBoard(true);\n  };\n\n  const closeTNoticeBoard = () => {\n    setShowNoticeBoard(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: base.appContentDiv,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.contentDiv,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: base.pwdAppDirectory,\n        children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n          className: base.pwdAppDirectoryText,\n          children: \"Dashboard \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 44\n        }, this), \"   \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 5\n      }, this), data.usertype === 1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(TopToolBarTeacher, {\n          onPress: reRenderHandler,\n          showNoticeBoard: showTNoticeBoard,\n          dashboardCourses: props.dashboardCourses\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), showNoticeBoard && /*#__PURE__*/_jsxDEV(NoticeBoxContainer, {\n          closeNoticeBoard: closeTNoticeBoard,\n          userData: props.userData,\n          courseData: props.dashboardCourses,\n          socketObj: props.socketObj\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 40\n        }, this), !showNoticeBoard && /*#__PURE__*/_jsxDEV(CoursesGridContainerTeacher, {\n          rerender: reRenderHandler,\n          courseData: props.dashboardCourses,\n          userData: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true), data.usertype === 2 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(TopToolBarStudent, {\n          onPress: reRenderHandlerS,\n          showNoticeBoard: showTNoticeBoard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this), showNoticeBoard && /*#__PURE__*/_jsxDEV(NoticeBoxContainer, {\n          closeNoticeBoard: closeTNoticeBoard,\n          userData: data,\n          courseData: props.dashboardCourses\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 35\n        }, this), !showNoticeBoard && /*#__PURE__*/_jsxDEV(CoursesGridContainerStudent, {\n          rerender: reRenderHandler,\n          courseData: props.dashboardCourses,\n          data: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 36\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 1\n  }, this);\n};\n\n_s(GeneralContentDiv, \"kG94x9mQ0rA6suXyvf+k1T9UNMc=\");\n\n_c = GeneralContentDiv;\nexport default GeneralContentDiv;\n\nvar _c;\n\n$RefreshReg$(_c, \"GeneralContentDiv\");","map":{"version":3,"sources":["/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/MainApps/Dashboard/General/GeneralContentDiv.js"],"names":["React","useState","useEffect","classes","base","TopToolBarTeacher","CoursesGridContainerTeacher","TopToolBarStudent","AppointmentsAndDutiesStudent","CoursesGridContainerStudent","getuser","NoticeBoxContainer","GeneralContentDiv","props","data","setData","rerender","setRerender","rerenderS","setRerenderS","showNoticeBoard","setShowNoticeBoard","reRenderHandler","onPress","reRenderHandlerS","showTNoticeBoard","closeTNoticeBoard","appContentDiv","contentDiv","pwdAppDirectory","pwdAppDirectoryText","usertype","dashboardCourses","userData","socketObj"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport classes from './GeneralContentDiv.module.css';\nimport base from '../../CommonAppUtilities/AppContentDiv.module.css';\n\nimport TopToolBarTeacher from './components/Teacher/TopToolBar';\n//import AppointmentsAndDutiesTeacher from './components/Teacher/AppointmentsAndDuties';\nimport CoursesGridContainerTeacher from './components/Teacher/CoursesGridContainer'\n\n\nimport TopToolBarStudent from './components/Student/TopToolBar';\nimport AppointmentsAndDutiesStudent from './components/Student/AppointmentsAndDuties';\nimport CoursesGridContainerStudent from './components/Student/CoursesGridContainer'\n\n\nimport {getuser} from './../../../CommonApps/AllAPICalls';\n//getcoursesbyCourseId\n//getcoursesbyglobalCodeArray\nimport NoticeBoxContainer from './NoticeBoard/NoticeBoxContainer';\n\n\n\n\n\nconst GeneralContentDiv=(props)=>{\n\n    const [data, setData] = useState({\n       \"dashboardcourses\": []\n    });\n\n    //const [courseData,getCourseData] = useState([]);\n    //const [showCourse,setShowCourse]=useState(true);\n    const [rerender,setRerender] = useState(false);\n    const [rerenderS,setRerenderS] = useState(false);\n    const [showNoticeBoard, setShowNoticeBoard]= useState(false);\n\n\n    const reRenderHandler=()=>{\n      setRerender(!rerender);\n      props.onPress();\t    \n    }\n\n    const reRenderHandlerS=()=>{\n      setRerenderS(!rerenderS);\n    }\n\n\n    useEffect(()=>{\n        getuser({setData});\n    },[rerenderS,rerender])\n\n\n   /*\t\n    useEffect(()=>{\n       let courseIds = data.dashboardcourses;\n       courseIds.map((id, index)=>{\n           if(id !==0){\n               let globalCode=100000+id;\n               getcoursesbyglobalCodeArray({globalCode, getCourseData});\n           }\n       });\n\n       return ()=>{\n           getCourseData(courseData=>[]);\n       }\n    },[data.dashboardcourses ]);\n   */\n\n\n\n\n\n\n\n\n\n\n    //const noticeboardHandler=()=>{\n       //setShowCourse(false);\n    //}\n\n    //const courseHandler=()=>{\n       //setShowCourse(true);\n    //}\n\n    const showTNoticeBoard=()=>{\n        setShowNoticeBoard(true);\n    }\n\n    const closeTNoticeBoard=()=>{\n       setShowNoticeBoard(false);\n    }\n\n\n\n\n\nreturn (\n\n<div className={base.appContentDiv}>\n   <div className={classes.contentDiv}>\n\n    <div className={base.pwdAppDirectory}> <i className={base.pwdAppDirectoryText}>Dashboard </i>   </div>    \n\n\t{/*Code for Teacher*/}\n     {\n  \n        data.usertype===1 && <>\t      \n            <TopToolBarTeacher onPress={reRenderHandler}  showNoticeBoard={showTNoticeBoard}  dashboardCourses={props.dashboardCourses}/>\n\t\t     {/*<AppointmentsAndDutiesTeacher/>*/}\n            \n                 { showNoticeBoard &&  <NoticeBoxContainer  \n\t\t\t closeNoticeBoard={closeTNoticeBoard} \n\t\t\t userData={props.userData} \n\t\t\t courseData={props.dashboardCourses}\n\t\t\t socketObj={props.socketObj}\n\t\t\t />\n\t\t }\n\n\t\t { !showNoticeBoard && <CoursesGridContainerTeacher rerender={reRenderHandler} courseData={props.dashboardCourses} userData={data}/> }\n\n\t    </>\n\n     }\n\n\n   \n     {\n\n        data.usertype===2 && <>\n\n            <TopToolBarStudent onPress={reRenderHandlerS} showNoticeBoard={showTNoticeBoard}/>\n\n\n\n            { showNoticeBoard &&  <NoticeBoxContainer  closeNoticeBoard={closeTNoticeBoard} userData={data} courseData={props.dashboardCourses}/>}\n\n\n\n             { !showNoticeBoard && <CoursesGridContainerStudent rerender={reRenderHandler} courseData={props.dashboardCourses} data={data}/> }\n\n\n        </>\n\n     }\n\n\n\n\n\n\n\n\n\n\n\n\n\n   </div>\n</div>\t\n\n);\n\n}\n\n\nexport default GeneralContentDiv;\n"]},"metadata":{},"sourceType":"module"}