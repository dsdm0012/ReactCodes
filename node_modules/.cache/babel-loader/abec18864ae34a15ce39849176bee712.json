{"ast":null,"code":"import React,{useRef,useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";/**\n * Hook that alerts clicks outside of the passed ref\n */function useOutsideAlerter(ref,props){useEffect(function(){/**\n     * Alert if clicked on outside of element\n     */function handleClickOutside(event){if(ref.current&&!ref.current.contains(event.target)){/* alert(\"You clicked outside of me!\");*/props.setDropDown(false);}}// Bind the event listener\ndocument.addEventListener(\"mousedown\",handleClickOutside);return function(){// Unbind the event listener on clean up\ndocument.removeEventListener(\"mousedown\",handleClickOutside);};},[ref,props]);}/**\n * Component that alerts if you click outside of it\n */function OutsideAlerter(props){var wrapperRef=useRef(null);useOutsideAlerter(wrapperRef,props);return/*#__PURE__*/_jsx(\"div\",{ref:wrapperRef,children:props.children});}export default OutsideAlerter;","map":{"version":3,"sources":["/home/bibhu/Dropbox/myprojectdir_Django_DRF_React/edrUIreact/edrfront/src/components/Header/HeaderRight/UserHead/OutsideAlerter.js"],"names":["React","useRef","useEffect","useOutsideAlerter","ref","props","handleClickOutside","event","current","contains","target","setDropDown","document","addEventListener","removeEventListener","OutsideAlerter","wrapperRef","children"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,CAAwBC,SAAxB,KAAyC,OAAzC,C,2CAGA;AACA;AACA,GACA,QAASC,CAAAA,iBAAT,CAA2BC,GAA3B,CAA+BC,KAA/B,CAAsC,CACpCH,SAAS,CAAC,UAAM,CACd;AACJ;AACA,OACI,QAASI,CAAAA,kBAAT,CAA4BC,KAA5B,CAAmC,CACjC,GAAIH,GAAG,CAACI,OAAJ,EAAe,CAACJ,GAAG,CAACI,OAAJ,CAAYC,QAAZ,CAAqBF,KAAK,CAACG,MAA3B,CAApB,CAAwD,CACvD,yCAECL,KAAK,CAACM,WAAN,CAAkB,KAAlB,EAGD,CACF,CACD;AACAC,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,CAAuCP,kBAAvC,EACA,MAAO,WAAM,CACX;AACAM,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,CAA0CR,kBAA1C,EACD,CAHD,CAID,CAnBQ,CAmBN,CAACF,GAAD,CAAKC,KAAL,CAnBM,CAAT,CAoBD,CAED;AACA;AACA,GACA,QAASU,CAAAA,cAAT,CAAwBV,KAAxB,CAA+B,CAC7B,GAAMW,CAAAA,UAAU,CAAGf,MAAM,CAAC,IAAD,CAAzB,CACAE,iBAAiB,CAACa,UAAD,CAAYX,KAAZ,CAAjB,CAEA,mBAAO,YAAK,GAAG,CAAEW,UAAV,UAAuBX,KAAK,CAACY,QAA7B,EAAP,CACD,CAMD,cAAeF,CAAAA,cAAf","sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\n/**\n * Hook that alerts clicks outside of the passed ref\n */\nfunction useOutsideAlerter(ref,props) {\n  useEffect(() => {\n    /**\n     * Alert if clicked on outside of element\n     */\n    function handleClickOutside(event) {\n      if (ref.current && !ref.current.contains(event.target)) {\n       /* alert(\"You clicked outside of me!\");*/\n\n        props.setDropDown(false);\n      \n\n      }\n    }\n    // Bind the event listener\n    document.addEventListener(\"mousedown\", handleClickOutside);\n    return () => {\n      // Unbind the event listener on clean up\n      document.removeEventListener(\"mousedown\", handleClickOutside);\n    };\n  }, [ref,props]);\n}\n\n/**\n * Component that alerts if you click outside of it\n */\nfunction OutsideAlerter(props) {\n  const wrapperRef = useRef(null);\n  useOutsideAlerter(wrapperRef,props);\n\n  return <div ref={wrapperRef}>{props.children}</div>;\n}\n\nOutsideAlerter.propTypes = {\n  children: PropTypes.element.isRequired\n};\n\nexport default OutsideAlerter;\n\n"]},"metadata":{},"sourceType":"module"}