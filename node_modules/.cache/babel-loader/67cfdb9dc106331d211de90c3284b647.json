{"ast":null,"code":"import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { DEFAULT_DOMAIN } from '../constants';\nimport { fetchExternalApi } from '../init';\nimport { generateComponentId } from '../utils';\n/**\n * Returns the JitsiMeeting Component with access to a custom External API\n * to be used as-it-is in React projects\n *\n * @param {IJitsiMeetingProps} props the component's props\n * @returns {ReactElement} the `JitsiMeeting` Component\n * @example\n  ```js\n    <JitsiMeeting\n        domain='meet.jit.si'\n        roomName: 'TestingJitsiMeetingComponent'\n        spinner={CustomSpinner}\n        onApiReady={(externalApi) => console.log(externalApi)}\n    />\n  ```\n */\n\nconst JitsiMeeting = _ref => {\n  let {\n    domain = DEFAULT_DOMAIN,\n    roomName,\n    configOverwrite,\n    interfaceConfigOverwrite,\n    jwt,\n    invitees,\n    devices,\n    userInfo,\n    release,\n    spinner: Spinner,\n    onApiReady,\n    onReadyToClose,\n    getIFrameRef\n  } = _ref;\n  const [componentId, setComponentId] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [apiLoaded, setApiLoaded] = useState(false);\n  const externalApi = useRef();\n  const apiRef = useRef();\n  const meetingRef = useRef(null);\n  useEffect(() => {\n    setComponentId(generateComponentId('jitsiMeeting'));\n    fetchExternalApi(domain).then(api => {\n      externalApi.current = api;\n      setApiLoaded(true);\n    }).catch(e => console.error(e.message));\n  }, []);\n  const loadIFrame = useCallback(JitsiMeetExternalAPI => {\n    apiRef.current = new JitsiMeetExternalAPI(domain, {\n      roomName,\n      configOverwrite,\n      interfaceConfigOverwrite,\n      jwt,\n      invitees,\n      devices,\n      userInfo,\n      release,\n      parentNode: meetingRef.current\n    });\n    setLoading(false);\n\n    if (apiRef.current) {\n      typeof onApiReady === 'function' && onApiReady(apiRef.current);\n      apiRef.current.on('readyToClose', () => {\n        typeof onReadyToClose === 'function' && onReadyToClose();\n      });\n\n      if (meetingRef.current && typeof getIFrameRef === 'function') {\n        getIFrameRef(meetingRef.current);\n      }\n    }\n  }, [apiRef, meetingRef, onApiReady, onReadyToClose, getIFrameRef, domain, roomName, configOverwrite, interfaceConfigOverwrite, jwt, invitees, devices, userInfo]);\n  useEffect(() => {\n    if (apiLoaded && !apiRef.current) {\n      if (externalApi.current) {\n        loadIFrame(externalApi.current);\n      }\n    }\n  }, [apiLoaded, loadIFrame]);\n  const renderLoadingSpinner = useCallback(() => {\n    if (!Spinner) {\n      return null;\n    }\n\n    if (!loading || apiRef.current) {\n      return null;\n    }\n\n    return _jsx(Spinner, {}, void 0);\n  }, [Spinner, apiRef.current]);\n  return _jsxs(_Fragment, {\n    children: [renderLoadingSpinner(), _jsx(\"div\", {\n      id: componentId,\n      ref: meetingRef\n    }, componentId)]\n  }, void 0);\n};\n\nexport default JitsiMeeting;","map":{"version":3,"names":["jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","useCallback","useEffect","useRef","useState","DEFAULT_DOMAIN","fetchExternalApi","generateComponentId","JitsiMeeting","domain","roomName","configOverwrite","interfaceConfigOverwrite","jwt","invitees","devices","userInfo","release","spinner","Spinner","onApiReady","onReadyToClose","getIFrameRef","componentId","setComponentId","loading","setLoading","apiLoaded","setApiLoaded","externalApi","apiRef","meetingRef","then","api","current","catch","e","console","error","message","loadIFrame","JitsiMeetExternalAPI","parentNode","on","renderLoadingSpinner","children","id","ref"],"sources":["/home/bibhu/EDRdevelopment/DevBranch/ReactCodes/node_modules/@jitsi/react-sdk/lib/components/JitsiMeeting.js"],"sourcesContent":["import { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useCallback, useEffect, useRef, useState } from 'react';\nimport { DEFAULT_DOMAIN } from '../constants';\nimport { fetchExternalApi } from '../init';\nimport { generateComponentId } from '../utils';\n/**\n * Returns the JitsiMeeting Component with access to a custom External API\n * to be used as-it-is in React projects\n *\n * @param {IJitsiMeetingProps} props the component's props\n * @returns {ReactElement} the `JitsiMeeting` Component\n * @example\n  ```js\n    <JitsiMeeting\n        domain='meet.jit.si'\n        roomName: 'TestingJitsiMeetingComponent'\n        spinner={CustomSpinner}\n        onApiReady={(externalApi) => console.log(externalApi)}\n    />\n  ```\n */\nconst JitsiMeeting = ({ domain = DEFAULT_DOMAIN, roomName, configOverwrite, interfaceConfigOverwrite, jwt, invitees, devices, userInfo, release, spinner: Spinner, onApiReady, onReadyToClose, getIFrameRef }) => {\n    const [componentId, setComponentId] = useState('');\n    const [loading, setLoading] = useState(true);\n    const [apiLoaded, setApiLoaded] = useState(false);\n    const externalApi = useRef();\n    const apiRef = useRef();\n    const meetingRef = useRef(null);\n    useEffect(() => {\n        setComponentId(generateComponentId('jitsiMeeting'));\n        fetchExternalApi(domain)\n            .then((api) => {\n            externalApi.current = api;\n            setApiLoaded(true);\n        })\n            .catch((e) => console.error(e.message));\n    }, []);\n    const loadIFrame = useCallback((JitsiMeetExternalAPI) => {\n        apiRef.current = new JitsiMeetExternalAPI(domain, {\n            roomName,\n            configOverwrite,\n            interfaceConfigOverwrite,\n            jwt,\n            invitees,\n            devices,\n            userInfo,\n            release,\n            parentNode: meetingRef.current\n        });\n        setLoading(false);\n        if (apiRef.current) {\n            typeof onApiReady === 'function' && onApiReady(apiRef.current);\n            apiRef.current.on('readyToClose', () => {\n                typeof onReadyToClose === 'function' && onReadyToClose();\n            });\n            if (meetingRef.current && typeof getIFrameRef === 'function') {\n                getIFrameRef(meetingRef.current);\n            }\n        }\n    }, [\n        apiRef,\n        meetingRef,\n        onApiReady,\n        onReadyToClose,\n        getIFrameRef,\n        domain,\n        roomName,\n        configOverwrite,\n        interfaceConfigOverwrite,\n        jwt,\n        invitees,\n        devices,\n        userInfo\n    ]);\n    useEffect(() => {\n        if (apiLoaded && !apiRef.current) {\n            if (externalApi.current) {\n                loadIFrame(externalApi.current);\n            }\n        }\n    }, [apiLoaded, loadIFrame]);\n    const renderLoadingSpinner = useCallback(() => {\n        if (!Spinner) {\n            return null;\n        }\n        if (!loading || apiRef.current) {\n            return null;\n        }\n        return _jsx(Spinner, {}, void 0);\n    }, [Spinner, apiRef.current]);\n    return (_jsxs(_Fragment, { children: [renderLoadingSpinner(), _jsx(\"div\", { id: componentId, ref: meetingRef }, componentId)] }, void 0));\n};\nexport default JitsiMeeting;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}