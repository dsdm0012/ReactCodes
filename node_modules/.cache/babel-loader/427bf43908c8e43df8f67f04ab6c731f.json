{"ast":null,"code":"var _jsxFileName = \"/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/MainApps/Dashboard/General/GeneralContentDiv.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport classes from './GeneralContentDiv.module.css';\nimport base from '../../CommonAppUtilities/AppContentDiv.module.css';\nimport TopToolBarTeacher from './components/Teacher/TopToolBar';\nimport AppointmentsAndDutiesTeacher from './components/Teacher/AppointmentsAndDuties';\nimport CoursesGridContainerTeacher from './components/Teacher/CoursesGridContainer';\nimport TopToolBarStudent from './components/Student/TopToolBar';\nimport AppointmentsAndDutiesStudent from './components/Student/AppointmentsAndDuties';\nimport CoursesGridContainerStudent from './components/Student/CoursesGridContainer';\nimport { getuser, getcoursesbyCourseId, getcoursesbyglobalCodeArray } from './../../../CommonApps/AllAPICalls';\nimport NoticeBoxContainer from './NoticeBoard/NoticeBoxContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst GeneralContentDiv = () => {\n  _s();\n\n  const [data, setData] = useState({\n    \"dashboardcourses\": []\n  });\n  const [courseData, getCourseData] = useState([]);\n  const [showCourse, setShowCourse] = useState(true);\n  const [rerender, setRerender] = useState(false);\n  const [rerenderS, setRerenderS] = useState(false);\n  const [showNoticeBoard, setShowNoticeBoard] = useState(false);\n\n  const reRenderHandler = () => {\n    setRerender(!rerender);\n  };\n\n  const reRenderHandlerS = () => {\n    setRerenderS(!rerenderS);\n  };\n\n  useEffect(() => {\n    getuser({\n      setData\n    });\n  }, []);\n  useEffect(() => {\n    let courseIds = data.dashboardcourses;\n    console.log('courseIds:', courseIds);\n    courseIds.map((id, index) => {\n      if (id !== 0) {\n        let globalCode = 100000 + id;\n        getcoursesbyglobalCodeArray({\n          globalCode,\n          getCourseData\n        });\n      }\n    });\n    return () => {\n      getCourseData(courseData => []);\n    };\n  }, [data.dashboardcourses]);\n\n  const noticeboardHandler = () => {\n    setShowCourse(false);\n  };\n\n  const courseHandler = () => {\n    setShowCourse(true);\n  };\n\n  const showTNoticeBoard = () => {\n    setShowNoticeBoard(true);\n  };\n\n  const closeTNoticeBoard = () => {\n    setShowNoticeBoard(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: base.appContentDiv,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.contentDiv,\n      children: [data.usertype === 1 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(TopToolBarTeacher, {\n          onPress: reRenderHandler,\n          showNoticeBoard: showTNoticeBoard\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this), showNoticeBoard && /*#__PURE__*/_jsxDEV(NoticeBoxContainer, {\n          closeNoticeBoard: closeTNoticeBoard,\n          userData: data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 44\n        }, this), !showNoticeBoard && /*#__PURE__*/_jsxDEV(CoursesGridContainerTeacher, {\n          rerender: rerender,\n          courseData: courseData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true), data.usertype === 2 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(TopToolBarStudent, {\n          onPress: reRenderHandlerS\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(AppointmentsAndDutiesStudent, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CoursesGridContainerStudent, {\n          rerender: rerenderS,\n          courseData: courseData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 1\n  }, this);\n};\n\n_s(GeneralContentDiv, \"nbZhd5r1g3K/cbUDox4/eGQtRns=\");\n\n_c = GeneralContentDiv;\nexport default GeneralContentDiv;\n\nvar _c;\n\n$RefreshReg$(_c, \"GeneralContentDiv\");","map":{"version":3,"sources":["/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/MainApps/Dashboard/General/GeneralContentDiv.js"],"names":["React","useState","useEffect","classes","base","TopToolBarTeacher","AppointmentsAndDutiesTeacher","CoursesGridContainerTeacher","TopToolBarStudent","AppointmentsAndDutiesStudent","CoursesGridContainerStudent","getuser","getcoursesbyCourseId","getcoursesbyglobalCodeArray","NoticeBoxContainer","GeneralContentDiv","data","setData","courseData","getCourseData","showCourse","setShowCourse","rerender","setRerender","rerenderS","setRerenderS","showNoticeBoard","setShowNoticeBoard","reRenderHandler","reRenderHandlerS","courseIds","dashboardcourses","console","log","map","id","index","globalCode","noticeboardHandler","courseHandler","showTNoticeBoard","closeTNoticeBoard","appContentDiv","contentDiv","usertype"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react';\nimport classes from './GeneralContentDiv.module.css';\nimport base from '../../CommonAppUtilities/AppContentDiv.module.css';\n\nimport TopToolBarTeacher from './components/Teacher/TopToolBar';\nimport AppointmentsAndDutiesTeacher from './components/Teacher/AppointmentsAndDuties';\nimport CoursesGridContainerTeacher from './components/Teacher/CoursesGridContainer'\n\n\nimport TopToolBarStudent from './components/Student/TopToolBar';\nimport AppointmentsAndDutiesStudent from './components/Student/AppointmentsAndDuties';\nimport CoursesGridContainerStudent from './components/Student/CoursesGridContainer'\n\n\nimport {getuser, getcoursesbyCourseId, getcoursesbyglobalCodeArray} from './../../../CommonApps/AllAPICalls';\nimport NoticeBoxContainer from './NoticeBoard/NoticeBoxContainer';\n\n\n\n\n\nconst GeneralContentDiv=()=>{\n\n    const [data, setData] = useState({\n       \"dashboardcourses\": []\n    });\n\n    const [courseData,getCourseData] = useState([]);\n    const [showCourse,setShowCourse]=useState(true);\n    const [rerender,setRerender] = useState(false);\n    const [rerenderS,setRerenderS] = useState(false);\n    const [showNoticeBoard, setShowNoticeBoard]= useState(false);\n\n\n    const reRenderHandler=()=>{\n      setRerender(!rerender);\n    }\n\n    const reRenderHandlerS=()=>{\n      setRerenderS(!rerenderS);\n    }\n\n\n    useEffect(()=>{\n        getuser({setData});\n    },[])\n\n\n    useEffect(()=>{\n       let courseIds = data.dashboardcourses;\n       console.log('courseIds:', courseIds);\n\n       courseIds.map((id, index)=>{\n           if(id !==0){\n               let globalCode=100000+id;\n               getcoursesbyglobalCodeArray({globalCode, getCourseData});\n\n           }\n       });\n\n       return ()=>{\n           getCourseData(courseData=>[]);\n       }\n\n    },[ data.dashboardcourses ]);\n\n\n\n\n\n\n\n\n\n\n\n\n    const noticeboardHandler=()=>{\n       setShowCourse(false);\n    }\n\n    const courseHandler=()=>{\n       setShowCourse(true);\n    }\n\n    const showTNoticeBoard=()=>{\n        setShowNoticeBoard(true);\n    }\n\n    const closeTNoticeBoard=()=>{\n       setShowNoticeBoard(false);\n    }\n\n\n\n\n\nreturn (\n\n<div className={base.appContentDiv}>\n   <div className={classes.contentDiv}>\n\n\n\n\t{/*Code for Teacher*/}\n     {\n  \n        data.usertype===1 && <>\t      \n            <TopToolBarTeacher onPress={reRenderHandler}  showNoticeBoard={showTNoticeBoard}/>\n\t\t     {/*<AppointmentsAndDutiesTeacher/>*/}\n\n            \n                     { showNoticeBoard &&  <NoticeBoxContainer  closeNoticeBoard={closeTNoticeBoard} userData={data}/>}\n\n\n\t\t     { !showNoticeBoard && <CoursesGridContainerTeacher rerender={rerender} courseData={courseData}/> }\n        </>\n\n     }\n\n\n   \n     {\n\n        data.usertype===2 && <>\n\n            <TopToolBarStudent onPress={reRenderHandlerS}/>\n\n            <AppointmentsAndDutiesStudent/>\n\n            <CoursesGridContainerStudent rerender={rerenderS} courseData={courseData}/>\n\n        </>\n\n     }\n\n\n\n\n\n\n\n\n\n\n\n\n\n   </div>\n</div>\t\n\n);\n\n}\n\n\nexport default GeneralContentDiv;\n"]},"metadata":{},"sourceType":"module"}