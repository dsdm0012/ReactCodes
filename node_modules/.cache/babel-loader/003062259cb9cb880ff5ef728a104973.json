{"ast":null,"code":"var _jsxFileName = \"/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/MainApps/Chat/ChatWindow/ChatScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from \"react\";\nimport classes from \"./ChatScreen.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatScreen = props => {\n  _s();\n\n  const messages = props.messages;\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const commentTime = ({\n    datetime\n  }) => {\n    let date = datetime.split(\"T\").at(0);\n    let time_ = datetime.split(\"T\").at(1);\n    let timehour = datetime.split(\"T\").at(1).split(\":\").at(0);\n    let timemin = datetime.split(\"T\").at(1).split(\":\").at(1);\n    let timesec = datetime.split(\"T\").at(1).split(\":\").at(2);\n    let totalTime = timehour + \":\" + timemin + \":\" + timesec;\n    let timeFormat = date + \" \" + totalTime + \" \" + \"UTC\"; //console.log(\"datetime: \", timeFormat);\n\n    let DatetimeLocalFull = new Date(timeFormat);\n    let DatetimeLocalFullStr = String(DatetimeLocalFull);\n    let dayStr = DatetimeLocalFullStr.split(\" \").at(0);\n    let dateStr = DatetimeLocalFullStr.split(\" \").at(2);\n    let month = DatetimeLocalFullStr.split(\" \").at(1);\n    let fullTimeLocal = DatetimeLocalFullStr.split(\" \").at(4);\n    let fullTimeLocalStr = String(fullTimeLocal);\n    let localTimeHour = fullTimeLocalStr.split(\":\").at(0);\n    let localTimeMin = fullTimeLocalStr.split(\":\").at(1);\n    let ampm;\n\n    if (localTimeHour < 12) {\n      ampm = \"am\";\n    }\n\n    if (localTimeHour > 12) {\n      localTimeHour = localTimeHour - 12;\n      ampm = \"pm\";\n    }\n\n    let time = String(localTimeHour) + \":\" + String(localTimeMin) + String(ampm) + \", \" + String(dayStr) + \", \" + String(dateStr) + \" \" + String(month);\n    return time;\n  };\n\n  const currentTime = () => {\n    var now = new Date();\n    let timeInfo = String(now); //\"Sun Jul 24 2022 00:23:04 GMT-0700 (Pacific Daylight Time)\";\n    //console.log(\"Now time : \", ttime.split(\" \").at(0));\n\n    let dayStr = timeInfo.split(\" \").at(0);\n    let dateStr = timeInfo.split(\" \").at(2);\n    let month = timeInfo.split(\" \").at(1);\n    let time = timeInfo.split(\" \").at(4);\n    let timehour = time.split(\":\").at(0);\n    let timemin = time.split(\":\").at(1);\n    let ampm;\n\n    if (timehour < 12) {\n      ampm = \"am\";\n    }\n\n    if (timehour > 12) {\n      timehour = timehour - 12;\n      ampm = \"pm\";\n    }\n\n    let finaltime = String(timehour) + \":\" + String(timemin) + String(ampm) + \", \" + String(dayStr) + \", \" + String(dateStr) + \" \" + String(month);\n    return finaltime;\n  };\n\n  const listInnerRef = useRef();\n\n  const onScrollHandler = () => {\n    if (listInnerRef.current) {\n      const {\n        scrollTop,\n        scrollHeight,\n        clientHeight\n      } = listInnerRef.current;\n\n      if (scrollTop + clientHeight === scrollHeight) {\n        //console.log(\"reached bottom\");\n        props.loadDownHandler();\n      }\n\n      if (scrollTop === 0) {\n        //console.log(\"reached top\");\n        props.loadUpHandler();\n      }\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.chatScreen,\n    onScroll: onScrollHandler,\n    ref: listInnerRef,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.dummyDiv1,\n      children: \"  Bibhuprasad   \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 6\n    }, this), props.commentObj.slice(0).reverse().map((comment, index) => {\n      let datetime = comment.commenttime;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.comment,\n        children: [comment.commenter === props.currentUser && /*#__PURE__*/_jsxDEV(\"i\", {\n          className: classes.commentText,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" \", comment.commenttext]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.chatTime,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.timeText,\n              children: [\"  \", commentTime({\n                datetime\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 12\n        }, this), comment.commenter !== props.currentUser && /*#__PURE__*/_jsxDEV(\"i\", {\n          className: classes.commentText,\n          style: {\n            backgroundColor: 'white',\n            float: 'left',\n            marginLeft: '100px',\n            boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" \", comment.commenttext]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.chatTime,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.timeText,\n              children: [\"  \", commentTime({\n                datetime\n              })]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 34\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 24\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 23\n      }, this);\n    }), messages.map((message, index) => {\n      let allMsg = message.split(\" \");\n      let userId = allMsg[allMsg.length - 2];\n      let fullMsg = allMsg;\n      let GroupIdArr = fullMsg.splice(allMsg.length - 1, 1);\n      let SenderIdArr = fullMsg.splice(allMsg.length - 1, 1);\n      let GroupId = GroupIdArr[0];\n      let SenderId = SenderIdArr[0]; //console.log(\"fullMsg: \", fullMsg)\n      //console.log(\"SenderId: \", SenderId[0]);\n      //console.log(\"GroupId: \", GroupId[0]);\n      //let displayMsg1 = allMsg.pop();\n      //let displayMsg2 = allMsg.pop(); \n      //console.log(\"group Id: \", typeof(GroupId), typeof(props.chatGroup.id));\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.comment,\n        children: [Number(userId) === props.currentUser && Number(GroupId) === Number(props.chatGroup.id) && /*#__PURE__*/_jsxDEV(\"i\", {\n          className: classes.commentText,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" \", fullMsg.join(\" \")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 31\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.chatTime,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.timeText,\n              children: [\"  \", currentTime()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 34\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 31\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 27\n        }, this), Number(userId) !== props.currentUser && Number(GroupId) === Number(props.chatGroup.id) && /*#__PURE__*/_jsxDEV(\"i\", {\n          className: classes.commentText,\n          style: {\n            backgroundColor: 'white',\n            float: 'left',\n            marginLeft: '100px',\n            boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" \", fullMsg.join(\" \")]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.chatTime,\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.timeText,\n              children: [\"  \", currentTime()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 34\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 27\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 23\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.dummyDiv,\n      ref: messagesEndRef,\n      children: \"   \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 1\n  }, this);\n};\n\n_s(ChatScreen, \"yCQin7+iArcYd8UlBzuM0WSd000=\");\n\n_c = ChatScreen;\nexport default ChatScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatScreen\");","map":{"version":3,"sources":["/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/MainApps/Chat/ChatWindow/ChatScreen.js"],"names":["React","useRef","useEffect","classes","ChatScreen","props","messages","messagesEndRef","scrollToBottom","current","scrollIntoView","behavior","commentTime","datetime","date","split","at","time_","timehour","timemin","timesec","totalTime","timeFormat","DatetimeLocalFull","Date","DatetimeLocalFullStr","String","dayStr","dateStr","month","fullTimeLocal","fullTimeLocalStr","localTimeHour","localTimeMin","ampm","time","currentTime","now","timeInfo","finaltime","listInnerRef","onScrollHandler","scrollTop","scrollHeight","clientHeight","loadDownHandler","loadUpHandler","chatScreen","dummyDiv1","commentObj","slice","reverse","map","comment","index","commenttime","commenter","currentUser","commentText","commenttext","chatTime","timeText","backgroundColor","float","marginLeft","boxShadow","message","allMsg","userId","length","fullMsg","GroupIdArr","splice","SenderIdArr","GroupId","SenderId","Number","chatGroup","id","join","dummyDiv"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,MAAd,EAAqBC,SAArB,QAAqC,OAArC;AACA,OAAOC,OAAP,MAAoB,yBAApB;;;AAGA,MAAMC,UAAU,GAAEC,KAAD,IAAS;AAAA;;AAG1B,QAAMC,QAAQ,GAACD,KAAK,CAACC,QAArB;AAEI,QAAMC,cAAc,GAAGN,MAAM,CAAC,IAAD,CAA7B;;AAEA,QAAMO,cAAc,GAAG,MAAM;AAAA;;AAC1B,6BAAAD,cAAc,CAACE,OAAf,gFAAwBC,cAAxB,CAAuC;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAvC;AACF,GAFD;;AAMAT,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,cAAc;AACf,GAFQ,EAEN,CAACF,QAAD,CAFM,CAAT;;AAKA,QAAMM,WAAW,GAAC,CAAC;AAACC,IAAAA;AAAD,GAAD,KAAc;AAG/B,QAAIC,IAAI,GAAED,QAAQ,CAACE,KAAT,CAAe,GAAf,EAAoBC,EAApB,CAAuB,CAAvB,CAAV;AACA,QAAIC,KAAK,GAAGJ,QAAQ,CAACE,KAAT,CAAe,GAAf,EAAoBC,EAApB,CAAuB,CAAvB,CAAZ;AAGA,QAAIE,QAAQ,GAACL,QAAQ,CAACE,KAAT,CAAe,GAAf,EAAoBC,EAApB,CAAuB,CAAvB,EAA0BD,KAA1B,CAAgC,GAAhC,EAAqCC,EAArC,CAAwC,CAAxC,CAAb;AACA,QAAIG,OAAO,GAACN,QAAQ,CAACE,KAAT,CAAe,GAAf,EAAoBC,EAApB,CAAuB,CAAvB,EAA0BD,KAA1B,CAAgC,GAAhC,EAAqCC,EAArC,CAAwC,CAAxC,CAAZ;AACA,QAAII,OAAO,GAACP,QAAQ,CAACE,KAAT,CAAe,GAAf,EAAoBC,EAApB,CAAuB,CAAvB,EAA0BD,KAA1B,CAAgC,GAAhC,EAAqCC,EAArC,CAAwC,CAAxC,CAAZ;AAEA,QAAIK,SAAS,GAACH,QAAQ,GAAC,GAAT,GAAaC,OAAb,GAAqB,GAArB,GAAyBC,OAAvC;AAEA,QAAIE,UAAU,GAAIR,IAAI,GAAC,GAAL,GAASO,SAAT,GAAmB,GAAnB,GAAuB,KAAzC,CAb+B,CAe/B;;AAEA,QAAIE,iBAAiB,GAAG,IAAIC,IAAJ,CAASF,UAAT,CAAxB;AAGA,QAAIG,oBAAoB,GAAEC,MAAM,CAACH,iBAAD,CAAhC;AAEA,QAAII,MAAM,GAACF,oBAAoB,CAACV,KAArB,CAA2B,GAA3B,EAAgCC,EAAhC,CAAmC,CAAnC,CAAX;AACA,QAAIY,OAAO,GAACH,oBAAoB,CAACV,KAArB,CAA2B,GAA3B,EAAgCC,EAAhC,CAAmC,CAAnC,CAAZ;AACA,QAAIa,KAAK,GAAEJ,oBAAoB,CAACV,KAArB,CAA2B,GAA3B,EAAgCC,EAAhC,CAAmC,CAAnC,CAAX;AAEA,QAAIc,aAAa,GAAGL,oBAAoB,CAACV,KAArB,CAA2B,GAA3B,EAAgCC,EAAhC,CAAmC,CAAnC,CAApB;AAEA,QAAIe,gBAAgB,GAAGL,MAAM,CAACI,aAAD,CAA7B;AAEA,QAAIE,aAAa,GAAGD,gBAAgB,CAAChB,KAAjB,CAAuB,GAAvB,EAA4BC,EAA5B,CAA+B,CAA/B,CAApB;AACA,QAAIiB,YAAY,GAAGF,gBAAgB,CAAChB,KAAjB,CAAuB,GAAvB,EAA4BC,EAA5B,CAA+B,CAA/B,CAAnB;AAIA,QAAIkB,IAAJ;;AACA,QAAGF,aAAa,GAAG,EAAnB,EAAsB;AACrBE,MAAAA,IAAI,GAAC,IAAL;AACA;;AACD,QAAGF,aAAa,GAAG,EAAnB,EAAsB;AACpBA,MAAAA,aAAa,GAACA,aAAa,GAAC,EAA5B;AACAE,MAAAA,IAAI,GAAC,IAAL;AACD;;AAED,QAAIC,IAAI,GAACT,MAAM,CAACM,aAAD,CAAN,GAAsB,GAAtB,GAA0BN,MAAM,CAACO,YAAD,CAAhC,GAA+CP,MAAM,CAACQ,IAAD,CAArD,GAA4D,IAA5D,GAAiER,MAAM,CAACC,MAAD,CAAvE,GAAgF,IAAhF,GAAqFD,MAAM,CAACE,OAAD,CAA3F,GAAqG,GAArG,GAAyGF,MAAM,CAACG,KAAD,CAAxH;AAEA,WAAOM,IAAP;AAED,GAhDA;;AAkDD,QAAMC,WAAW,GAAC,MAAI;AACtB,QAAIC,GAAG,GAAG,IAAIb,IAAJ,EAAV;AAEA,QAAIc,QAAQ,GAACZ,MAAM,CAACW,GAAD,CAAnB,CAHsB,CAItB;AAEA;;AAEE,QAAIV,MAAM,GAACW,QAAQ,CAACvB,KAAT,CAAe,GAAf,EAAoBC,EAApB,CAAuB,CAAvB,CAAX;AACA,QAAIY,OAAO,GAACU,QAAQ,CAACvB,KAAT,CAAe,GAAf,EAAoBC,EAApB,CAAuB,CAAvB,CAAZ;AACA,QAAIa,KAAK,GAAES,QAAQ,CAACvB,KAAT,CAAe,GAAf,EAAoBC,EAApB,CAAuB,CAAvB,CAAX;AAOF,QAAImB,IAAI,GAACG,QAAQ,CAACvB,KAAT,CAAe,GAAf,EAAoBC,EAApB,CAAuB,CAAvB,CAAT;AACA,QAAIE,QAAQ,GAAGiB,IAAI,CAACpB,KAAL,CAAW,GAAX,EAAgBC,EAAhB,CAAmB,CAAnB,CAAf;AACA,QAAIG,OAAO,GAAGgB,IAAI,CAACpB,KAAL,CAAW,GAAX,EAAgBC,EAAhB,CAAmB,CAAnB,CAAd;AACA,QAAIkB,IAAJ;;AACA,QAAGhB,QAAQ,GAAG,EAAd,EAAiB;AACdgB,MAAAA,IAAI,GAAC,IAAL;AACA;;AACD,QAAGhB,QAAQ,GAAG,EAAd,EAAiB;AACfA,MAAAA,QAAQ,GAACA,QAAQ,GAAC,EAAlB;AACAgB,MAAAA,IAAI,GAAC,IAAL;AACD;;AAED,QAAIK,SAAS,GAACb,MAAM,CAACR,QAAD,CAAN,GAAiB,GAAjB,GAAqBQ,MAAM,CAACP,OAAD,CAA3B,GAAqCO,MAAM,CAACQ,IAAD,CAA3C,GAAkD,IAAlD,GAAuDR,MAAM,CAACC,MAAD,CAA7D,GAAsE,IAAtE,GAA2ED,MAAM,CAACE,OAAD,CAAjF,GAA2F,GAA3F,GAA+FF,MAAM,CAACG,KAAD,CAAnH;AACA,WAAOU,SAAP;AAGD,GAjCD;;AAmCC,QAAMC,YAAY,GAAGvC,MAAM,EAA3B;;AAEA,QAAMwC,eAAe,GAAC,MAAI;AAExB,QAAID,YAAY,CAAC/B,OAAjB,EAA0B;AAC1B,YAAM;AAAEiC,QAAAA,SAAF;AAAaC,QAAAA,YAAb;AAA2BC,QAAAA;AAA3B,UAA4CJ,YAAY,CAAC/B,OAA/D;;AACA,UAAIiC,SAAS,GAAGE,YAAZ,KAA6BD,YAAjC,EAA+C;AAC1C;AACPtC,QAAAA,KAAK,CAACwC,eAAN;AACM;;AAEJ,UAAGH,SAAS,KAAG,CAAf,EAAiB;AAEf;AACPrC,QAAAA,KAAK,CAACyC,aAAN;AAEM;AAGD;AAEF,GAnBA;;AA2BJ,sBAEA;AAAK,IAAA,SAAS,EAAE3C,OAAO,CAAC4C,UAAxB;AACC,IAAA,QAAQ,EAAEN,eADX;AAEQ,IAAA,GAAG,EAAED,YAFb;AAAA,4BAOK;AAAK,MAAA,SAAS,EAAErC,OAAO,CAAC6C,SAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAPL,EAiBO3C,KAAK,CAAC4C,UAAN,CAAiBC,KAAjB,CAAuB,CAAvB,EAA0BC,OAA1B,GAAoCC,GAApC,CAAwC,CAACC,OAAD,EAASC,KAAT,KAAiB;AAGjD,UAAIzC,QAAQ,GAACwC,OAAO,CAACE,WAArB;AAEA,0BAAO;AAAkB,QAAA,SAAS,EAAEpD,OAAO,CAACkD,OAArC;AAAA,mBAEbA,OAAO,CAACG,SAAR,KAAsBnD,KAAK,CAACoD,WAA5B,iBACE;AAAG,UAAA,SAAS,EAAEtD,OAAO,CAACuD,WAAtB;AAAA,kCACH;AAAA,4BAAQL,OAAO,CAACM,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADG,eAEH;AAAM,YAAA,SAAS,EAAExD,OAAO,CAACyD,QAAzB;AAAA,mCACI;AAAM,cAAA,SAAS,EAAEzD,OAAO,CAAC0D,QAAzB;AAAA,+BAAsCjD,WAAW,CAAC;AAACC,gBAAAA;AAAD,eAAD,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAFG;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHW,EAWCwC,OAAO,CAACG,SAAR,KAAsBnD,KAAK,CAACoD,WAA5B,iBAEA;AAAG,UAAA,SAAS,EAAEtD,OAAO,CAACuD,WAAtB;AAAmC,UAAA,KAAK,EAAE;AAACI,YAAAA,eAAe,EAAE,OAAlB;AAA2BC,YAAAA,KAAK,EAAE,MAAlC;AAAyCC,YAAAA,UAAU,EAAE,OAArD;AAA6DC,YAAAA,SAAS,EAAE;AAAxE,WAA1C;AAAA,kCAIM;AAAA,4BAAQZ,OAAO,CAACM,WAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJN,eAKM;AAAM,YAAA,SAAS,EAAExD,OAAO,CAACyD,QAAzB;AAAA,mCACI;AAAM,cAAA,SAAS,EAAEzD,OAAO,CAAC0D,QAAzB;AAAA,+BAAsCjD,WAAW,CAAC;AAACC,gBAAAA;AAAD,eAAD,CAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBALN;AAAA;AAAA;AAAA;AAAA;AAAA,gBAbD;AAAA,SAAWyC,KAAX;AAAA;AAAA;AAAA;AAAA,cAAP;AAiCH,KAtCL,CAjBP,EA+EWhD,QAAQ,CAAC8C,GAAT,CAAa,CAACc,OAAD,EAASZ,KAAT,KAAiB;AAG1B,UAAIa,MAAM,GAAGD,OAAO,CAACnD,KAAR,CAAc,GAAd,CAAb;AAEP,UAAIqD,MAAM,GAAGD,MAAM,CAACA,MAAM,CAACE,MAAP,GAAc,CAAf,CAAnB;AAGO,UAAIC,OAAO,GAACH,MAAZ;AAEA,UAAII,UAAU,GAAGD,OAAO,CAACE,MAAR,CAAeL,MAAM,CAACE,MAAP,GAAc,CAA7B,EAAgC,CAAhC,CAAjB;AACP,UAAII,WAAW,GAAGH,OAAO,CAACE,MAAR,CAAeL,MAAM,CAACE,MAAP,GAAc,CAA7B,EAAgC,CAAhC,CAAlB;AAEO,UAAIK,OAAO,GAAGH,UAAU,CAAC,CAAD,CAAxB;AACP,UAAII,QAAQ,GAAGF,WAAW,CAAC,CAAD,CAA1B,CAdiC,CAiBvC;AACO;AACP;AACM;AACA;AACO;;AAGA,0BAAO;AAAiB,QAAA,SAAS,EAAEtE,OAAO,CAACkD,OAApC;AAAA,mBAGCuB,MAAM,CAACR,MAAD,CAAN,KAAmB/D,KAAK,CAACoD,WAAzB,IAAwCmB,MAAM,CAACF,OAAD,CAAN,KAAoBE,MAAM,CAACvE,KAAK,CAACwE,SAAN,CAAgBC,EAAjB,CAAlE,iBAEG;AAAG,UAAA,SAAS,EAAE3E,OAAO,CAACuD,WAAtB;AAAA,kCAEI;AAAA,4BAAQY,OAAO,CAACS,IAAR,CAAa,GAAb,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAGI;AAAM,YAAA,SAAS,EAAE5E,OAAO,CAACyD,QAAzB;AAAA,mCACG;AAAM,cAAA,SAAS,EAAEzD,OAAO,CAAC0D,QAAzB;AAAA,+BAAsCzB,WAAW,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,kBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,EAkBCwC,MAAM,CAACR,MAAD,CAAN,KAAmB/D,KAAK,CAACoD,WAAzB,IAAwCmB,MAAM,CAACF,OAAD,CAAN,KAAoBE,MAAM,CAACvE,KAAK,CAACwE,SAAN,CAAgBC,EAAjB,CAAlE,iBAEG;AAAG,UAAA,SAAS,EAAE3E,OAAO,CAACuD,WAAtB;AAAmC,UAAA,KAAK,EAAE;AAACI,YAAAA,eAAe,EAAE,OAAlB;AAC1CC,YAAAA,KAAK,EAAE,MADmC;AAE1CC,YAAAA,UAAU,EAAE,OAF8B;AAG1CC,YAAAA,SAAS,EAAE;AAH+B,WAA1C;AAAA,kCAOG;AAAA,4BAAQK,OAAO,CAACS,IAAR,CAAa,GAAb,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPH,eAQG;AAAM,YAAA,SAAS,EAAE5E,OAAO,CAACyD,QAAzB;AAAA,mCACI;AAAM,cAAA,SAAS,EAAEzD,OAAO,CAAC0D,QAAzB;AAAA,+BAAsCzB,WAAW,EAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBARH;AAAA;AAAA;AAAA;AAAA;AAAA,gBApBJ;AAAA,SAAUkB,KAAV;AAAA;AAAA;AAAA;AAAA,cAAP;AA2CH,KApED,CA/EX,eA0JK;AAAK,MAAA,SAAS,EAAEnD,OAAO,CAAC6E,QAAxB;AAAkC,MAAA,GAAG,EAAEzE,cAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA1JL;AAAA;AAAA;AAAA;AAAA;AAAA,UAFA;AA0KC,CA9SD;;GAAMH,U;;KAAAA,U;AAiTN,eAAeA,UAAf","sourcesContent":["import React,{useRef,useEffect} from \"react\";\nimport classes from \"./ChatScreen.module.css\";\n\n\nconst ChatScreen=(props)=>{\n\n\nconst messages=props.messages;\n\n    const messagesEndRef = useRef(null);\n\n    const scrollToBottom = () => {\n       messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" })\n    }\n\n\n\n    useEffect(() => {\n      scrollToBottom();\n    }, [messages]);\n\n\n    const commentTime=({datetime})=>{\n     \n\n     let date= datetime.split(\"T\").at(0);\n     let time_ = datetime.split(\"T\").at(1);\n\n\n     let timehour=datetime.split(\"T\").at(1).split(\":\").at(0);\t   \n     let timemin=datetime.split(\"T\").at(1).split(\":\").at(1);\n     let timesec=datetime.split(\"T\").at(1).split(\":\").at(2);\n     \n     let totalTime=timehour+\":\"+timemin+\":\"+timesec;\n\n     let timeFormat =  date+\" \"+totalTime+\" \"+\"UTC\";\n\n     //console.log(\"datetime: \", timeFormat);\n    \n     let DatetimeLocalFull = new Date(timeFormat);\n\n    \n     let DatetimeLocalFullStr= String(DatetimeLocalFull);\n    \n     let dayStr=DatetimeLocalFullStr.split(\" \").at(0);\n     let dateStr=DatetimeLocalFullStr.split(\" \").at(2);\n     let month= DatetimeLocalFullStr.split(\" \").at(1);\t   \n\n     let fullTimeLocal = DatetimeLocalFullStr.split(\" \").at(4);\n    \n     let fullTimeLocalStr = String(fullTimeLocal);\n\n     let localTimeHour = fullTimeLocalStr.split(\":\").at(0);\n     let localTimeMin = fullTimeLocalStr.split(\":\").at(1);\t   \n     \n\n\n     let ampm;\n     if(localTimeHour < 12){\n      ampm=\"am\";\n     }\t   \n     if(localTimeHour > 12){\n       localTimeHour=localTimeHour-12;\n       ampm=\"pm\"\t     \n     }\n\n     let time=String(localTimeHour)+\":\"+String(localTimeMin)+String(ampm)+\", \"+String(dayStr)+\", \"+String(dateStr)+\" \"+String(month);\n     \n     return time;\n\n   }\n\n   const currentTime=()=>{\n   var now = new Date();\n\n   let timeInfo=String(now);\n   //\"Sun Jul 24 2022 00:23:04 GMT-0700 (Pacific Daylight Time)\";\n\n   //console.log(\"Now time : \", ttime.split(\" \").at(0));\n  \n     let dayStr=timeInfo.split(\" \").at(0);\n     let dateStr=timeInfo.split(\" \").at(2);\n     let month= timeInfo.split(\" \").at(1);\n\n\n\n\n\n\n   let time=timeInfo.split(\" \").at(4);\n   let timehour = time.split(\":\").at(0);\n   let timemin = time.split(\":\").at(1);\t\n   let ampm;\n   if(timehour < 12){\n      ampm=\"am\";\n     }\n     if(timehour > 12){\n       timehour=timehour-12;\n       ampm=\"pm\"\n     }\n\n     let finaltime=String(timehour)+\":\"+String(timemin)+String(ampm)+\", \"+String(dayStr)+\", \"+String(dateStr)+\" \"+String(month);\n     return finaltime;\t   \n   \n\n   }\t\n\n    const listInnerRef = useRef();\n\n    const onScrollHandler=()=>{\n      \n      if (listInnerRef.current) {\n      const { scrollTop, scrollHeight, clientHeight } = listInnerRef.current;\n      if (scrollTop + clientHeight === scrollHeight) {\n           //console.log(\"reached bottom\");\n\t   props.loadDownHandler();\n         }\n\n      if(scrollTop===0){\n\n        //console.log(\"reached top\");\n\tprops.loadUpHandler();      \n\n      } \n\n\n     }\n\n   }\n\n\n\n\n\n\n\nreturn(\n\n<div className={classes.chatScreen}\n\tonScroll={onScrollHandler}\n        ref={listInnerRef}\n\n\t>\n\n\n     <div className={classes.dummyDiv1}>  Bibhuprasad   </div>\n     \n       {/* props.commentObj !==null && props.commentObj.next !==null &&\t\n       <button type=\"button\" onClick={props.loadUpHandler}>\n\n\t  Load Up\n\n       </button>\t\n       */}\n\n      {props.commentObj.slice(0).reverse().map((comment,index)=>{\n\n\n               let datetime=comment.commenttime;\n\n               return <div  key={index} className={classes.comment} >  \n\t\t      \n\t\t      {comment.commenter === props.currentUser &&\n\t\t         <i className={classes.commentText}>\n\t\t\t     <span> {comment.commenttext}</span>\n\t\t\t     <span className={classes.chatTime}> \n\t\t\t         <span className={classes.timeText}>  {commentTime({datetime})}</span>\n\t\t\t     </span>\n\t\t\t</i> \n                      }\n\n                      {comment.commenter !== props.currentUser &&\n\n                       <i className={classes.commentText} style={{backgroundColor: 'white', float: 'left',marginLeft: '100px',boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'}}>\n\n\t\t\t\t     \n\n                             <span> {comment.commenttext}</span>\n                             <span className={classes.chatTime}>\n                                 <span className={classes.timeText}>  {commentTime({datetime})}</span>\n                             </span>\n\n\n\n\t\t       </i>\n\n                      }\n\n\t\t      </div>\n                \n\n\n\n           }\n\n        )}\n\n\n\n        { /*props.commentObj !==null && props.commentObj.previous !==null &&\n           <button type=\"button\" onClick={props.loadDownHandler}>\n\n                   Load Down\n\n           </button>\n        */}\n\n\n\n\n\n\n\n\n\n\n\n         { messages.map((message,index)=>{\n\n\n               let allMsg = message.split(\" \");\n\t\t\n\t       let userId = allMsg[allMsg.length-2];\t\n\n\n               let fullMsg=allMsg;\n\n               let GroupIdArr = fullMsg.splice(allMsg.length-1, 1);\n\t       let SenderIdArr = fullMsg.splice(allMsg.length-1, 1);\t \n\n               let GroupId = GroupIdArr[0];\n\t       let SenderId = SenderIdArr[0] \n\n\n\t\t//console.log(\"fullMsg: \", fullMsg)\n\t        //console.log(\"SenderId: \", SenderId[0]);\n\t\t//console.log(\"GroupId: \", GroupId[0]);\n\t       //let displayMsg1 = allMsg.pop();\n\t       //let displayMsg2 = allMsg.pop(); \n               //console.log(\"group Id: \", typeof(GroupId), typeof(props.chatGroup.id));\n              \n\n               return <div key={index} className={classes.comment}>   \n\n\n                     { Number(userId) === props.currentUser && Number(GroupId) === Number(props.chatGroup.id) &&\n\n                          <i className={classes.commentText}>  \n\t\t\t     \n                              <span> {fullMsg.join(\" \")}</span>\n                              <span className={classes.chatTime}>\n                                 <span className={classes.timeText}>  {currentTime()}</span>\n                              </span>\n\n\n\t\t\t  </i>\n\n                     }\n\n\n                     { Number(userId) !== props.currentUser && Number(GroupId) === Number(props.chatGroup.id) &&\n\n                          <i className={classes.commentText} style={{backgroundColor: 'white', \n\t\t\t\t\t                     float: 'left', \n\t\t\t\t\t                     marginLeft: '100px',\n\t\t\t\t\t                     boxShadow: 'rgba(99, 99, 99, 0.2) 0px 2px 8px 0px'}}\n\t\t\t\t                             >  \n\t\t\t\t      \n\n                             <span> {fullMsg.join(\" \")}</span>\n                             <span className={classes.chatTime}>\n                                 <span className={classes.timeText}>  {currentTime()}</span>\n                             </span>\n\n\t\t\t   </i>\n\n                     }\n\n\n\n\n\n\n\t\t      </div>\n\n           }\n\n        ) \n      } \n   \n\n\n     <div className={classes.dummyDiv} ref={messagesEndRef}>   </div>\t\n\n\n\n\n\n\n\n\n\n</div>\t\n);\n\n\n}\n\n\nexport default ChatScreen;\n"]},"metadata":{},"sourceType":"module"}