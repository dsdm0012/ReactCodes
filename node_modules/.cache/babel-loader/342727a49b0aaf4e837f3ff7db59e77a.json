{"ast":null,"code":"'use strict';\n\nvar Filter =\n/** @class */\nfunction () {\n  function Filter(options) {\n    options = Object.assign({\n      getKey: function defaultGetKey(a) {\n        return a;\n      },\n      getValue: function defaultGetValue(a) {\n        return a;\n      },\n      isLessThanOrEqualTo: function defaultIsLessThanOrEqualTo(a, b) {\n        return a <= b;\n      }\n    }, options);\n    Object.defineProperties(this, {\n      _getKey: {\n        value: options.getKey\n      },\n      _getValue: {\n        value: options.getValue\n      },\n      _isLessThanOrEqualTo: {\n        value: options.isLessThanOrEqualTo\n      },\n      _map: {\n        value: new Map()\n      }\n    });\n  }\n\n  Filter.prototype.toMap = function () {\n    return new Map(this._map);\n  };\n\n  Filter.prototype.updateAndFilter = function (entries) {\n    return entries.filter(this.update, this);\n  };\n\n  Filter.prototype.update = function (entry) {\n    var key = this._getKey(entry);\n\n    var value = this._getValue(entry);\n\n    if (this._map.has(key) && this._isLessThanOrEqualTo(value, this._map.get(key))) {\n      return false;\n    }\n\n    this._map.set(key, value);\n\n    return true;\n  };\n\n  return Filter;\n}();\n\nmodule.exports = Filter;","map":null,"metadata":{},"sourceType":"script"}