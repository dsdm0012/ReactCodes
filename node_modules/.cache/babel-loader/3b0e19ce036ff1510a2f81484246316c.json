{"ast":null,"code":"var _jsxFileName = \"/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/MainApps/Dashboard/General/components/Teacher/CoursesGridContainer.js\";\nimport React from 'react';\nimport classes from './CoursesGridContainer.module.css';\nimport CourseViewDashboard from './CourseViewDashboard'; //import {getteachercourses,getuser, getcoursesbyCourseId, getcoursesbyglobalCodeArray} from '../../../../../CommonApps/AllAPICalls';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CoursesGridContainer = props => {\n  /*\n  \n  const [data, setData] = useState({\n  \"dashboardcourses\": []\n  });\n  const [courseData,getCourseData] = useState([]);\n  \n  useEffect(()=>{\n       getuser({setData});\n    },[])\n  \n  \n  useEffect(()=>{\n   let courseIds = data.dashboardcourses;\n   console.log('courseIds:', courseIds);\t\n  //getcoursesbyCourseId({courseId, getCourseData});\n  \n      courseIds.map((id, index)=>{\n         if(id !==0){\n           let globalCode=100000+id;\n           getcoursesbyglobalCodeArray({globalCode, getCourseData});\n  \n         }\n      }); \n  \n  return ()=>{\n   getCourseData(courseData=>[]);\n  \n  }\n  \n  },[ data.dashboardcourses, props.rerender]);\n  \n  */\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.coursesGridContainer,\n    children: [props.courseData.map((course, index) => {\n      return /*#__PURE__*/_jsxDEV(CourseViewDashboard, {\n        Course: course,\n        userData: props.userData,\n        rerender: props.rerender\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 23\n      }, this);\n    }), props.courseData.length === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.noCourseMessage,\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" There are no courses available in your dashboard. Create a course and share the course code with your students to get started.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 62\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 1\n  }, this);\n};\n\n_c = CoursesGridContainer;\nexport default CoursesGridContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoursesGridContainer\");","map":{"version":3,"sources":["/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/MainApps/Dashboard/General/components/Teacher/CoursesGridContainer.js"],"names":["React","classes","CourseViewDashboard","CoursesGridContainer","props","coursesGridContainer","courseData","map","course","index","userData","rerender","length","noCourseMessage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,mCAApB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC,C,CACA;;;;AAGA,MAAMC,oBAAoB,GAAGC,KAAD,IAAS;AAKrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAWA,sBAGA;AAAK,IAAA,SAAS,EAAEH,OAAO,CAACI,oBAAxB;AAAA,eAEED,KAAK,CAACE,UAAN,CAAiBC,GAAjB,CAAqB,CAACC,MAAD,EAAQC,KAAR,KAAgB;AAExB,0BAAO,QAAC,mBAAD;AAAiC,QAAA,MAAM,EAAED,MAAzC;AAAiD,QAAA,QAAQ,EAAEJ,KAAK,CAACM,QAAjE;AAA2E,QAAA,QAAQ,EAAEN,KAAK,CAACO;AAA3F,SAA0BF,KAA1B;AAAA;AAAA;AAAA;AAAA,cAAP;AAEH,KAJV,CAFF,EAWWL,KAAK,CAACE,UAAN,CAAiBM,MAAjB,KAA2B,CAA3B,iBACQ;AAAK,MAAA,SAAS,EAAEX,OAAO,CAACY,eAAxB;AAAA,mCAA0C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAA1C;AAAA;AAAA;AAAA;AAAA;AAAA,YAZnB;AAAA;AAAA;AAAA;AAAA;AAAA,UAHA;AAkCC,CAlFD;;KAAMV,oB;AAoFN,eAAeA,oBAAf","sourcesContent":["import React from 'react';\nimport classes from './CoursesGridContainer.module.css';\nimport CourseViewDashboard from './CourseViewDashboard';\n//import {getteachercourses,getuser, getcoursesbyCourseId, getcoursesbyglobalCodeArray} from '../../../../../CommonApps/AllAPICalls';\n\n\nconst CoursesGridContainer =(props)=>{\n\n\n\n\n/*\n\nconst [data, setData] = useState({\n\"dashboardcourses\": []\n});\nconst [courseData,getCourseData] = useState([]);\n\nuseEffect(()=>{\n     getuser({setData});\n  },[])\n\n\nuseEffect(()=>{\n let courseIds = data.dashboardcourses;\n console.log('courseIds:', courseIds);\t\n//getcoursesbyCourseId({courseId, getCourseData});\n\n    courseIds.map((id, index)=>{\n       if(id !==0){\n         let globalCode=100000+id;\n         getcoursesbyglobalCodeArray({globalCode, getCourseData});\n\n       }\n    }); \n\nreturn ()=>{\n getCourseData(courseData=>[]);\n\n}\n\n},[ data.dashboardcourses, props.rerender]);\n\n*/\n\n\n\n\n\n\n\n\n\n\nreturn (\n\n\n<div className={classes.coursesGridContainer}>\n\n\t{props.courseData.map((course,index)=>{\n\n               return <CourseViewDashboard key={index} Course={course} userData={props.userData} rerender={props.rerender} />\n\n           }\n\n        )}\n\n\n        {  props.courseData.length ===0 &&\n                   <div className={classes.noCourseMessage}> <h1> There are no courses available in your dashboard. Create a course and share the course code with your students to get started.</h1> </div>\n\n    }\n\n\n\n\n\n\n\n\n\n\n</div>\n\n\n);\n\n\n}\n\nexport default CoursesGridContainer;\n\n"]},"metadata":{},"sourceType":"module"}