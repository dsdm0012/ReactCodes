{"ast":null,"code":"var _jsxFileName = \"/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/MainApps/Dashboard/General/Notices/NoticeBoxContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport classes from './NoticeBoxContainer.module.css';\nimport NoticeBox from './NoticeBox';\nimport { marknoticeasread } from '../../../../CommonApps/AllAPICalls';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction containsObject(obj, list) {\n  var i;\n\n  for (i = 0; i < list.length; i++) {\n    if (list[i].id === obj.id) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nconst NoticeBoxContainer = props => {\n  _s();\n\n  //console.log(\"NoticeBox Container rendering. . .\");\n  const isMounted = useRef(false);\n  useEffect(() => {\n    isMounted.current = true;\n    props.passMountInfo(true);\n    return () => {\n      isMounted.current = false;\n      props.passMountInfo(false);\n    };\n  }, [props]);\n\n  const markAsReadHandler = noticeId => {\n    //console.log(\"mark as read\", noticeId);     \t   \n    marknoticeasread({\n      noticeId\n    }); // window.location.reload(false);\n  };\n\n  console.log(\"dashboardNotice: \", props.dashboardNotice);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.noticeBoxContainer,\n    children: props.dashboardNotice !== null && props.dashboardNotice.map((notice, index) => {\n      let noticeId = notice.id;\n      return /*#__PURE__*/_jsxDEV(NoticeBox, {\n        read: false,\n        Notice: notice,\n        markAsRead: () => markAsReadHandler(noticeId)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 1\n  }, this);\n};\n\n_s(NoticeBoxContainer, \"SkOohDVuXBk0DO6XXkvUZnCZ6So=\");\n\n_c = NoticeBoxContainer;\nexport default NoticeBoxContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"NoticeBoxContainer\");","map":{"version":3,"sources":["/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/MainApps/Dashboard/General/Notices/NoticeBoxContainer.js"],"names":["React","useRef","useEffect","classes","NoticeBox","marknoticeasread","containsObject","obj","list","i","length","id","NoticeBoxContainer","props","isMounted","current","passMountInfo","markAsReadHandler","noticeId","console","log","dashboardNotice","noticeBoxContainer","map","notice","index"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,MAAd,EAAqBC,SAArB,QAAqC,OAArC;AACA,OAAOC,OAAP,MAAoB,iCAApB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAGA,SAAQC,gBAAR,QAA+B,oCAA/B;;;AAEA,SAASC,cAAT,CAAwBC,GAAxB,EAA6BC,IAA7B,EAAmC;AAG/B,MAAIC,CAAJ;;AACA,OAAKA,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGD,IAAI,CAACE,MAArB,EAA6BD,CAAC,EAA9B,EAAkC;AAC9B,QAAID,IAAI,CAACC,CAAD,CAAJ,CAAQE,EAAR,KAAeJ,GAAG,CAACI,EAAvB,EAA2B;AACvB,aAAO,IAAP;AACH;AACJ;;AAED,SAAO,KAAP;AACH;;AAOD,MAAMC,kBAAkB,GAAGC,KAAD,IAAS;AAAA;;AAGhC;AAGA,QAAMC,SAAS,GAAGb,MAAM,CAAC,KAAD,CAAxB;AAECC,EAAAA,SAAS,CAAC,MAAM;AAChBY,IAAAA,SAAS,CAACC,OAAV,GAAoB,IAApB;AACAF,IAAAA,KAAK,CAACG,aAAN,CAAoB,IAApB;AACA,WAAO,MAAM;AACLF,MAAAA,SAAS,CAACC,OAAV,GAAoB,KAApB;AACAF,MAAAA,KAAK,CAACG,aAAN,CAAoB,KAApB;AACP,KAHD;AAIA,GAPS,EAOP,CAACH,KAAD,CAPO,CAAT;;AAeD,QAAMI,iBAAiB,GAAEC,QAAD,IAAY;AAC7B;AACNb,IAAAA,gBAAgB,CAAC;AAACa,MAAAA;AAAD,KAAD,CAAhB,CAFmC,CAGpC;AACC,GAJD;;AASAC,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCP,KAAK,CAACQ,eAAvC;AAWH,sBAEA;AAAK,IAAA,SAAS,EAAElB,OAAO,CAACmB,kBAAxB;AAAA,cAuBKT,KAAK,CAACQ,eAAN,KAAyB,IAAzB,IAAiCR,KAAK,CAACQ,eAAN,CAAsBE,GAAtB,CAA0B,CAACC,MAAD,EAASC,KAAT,KAAiB;AAExE,UAAIP,QAAQ,GAAGM,MAAM,CAACb,EAAtB;AACA,0BAAO,QAAC,SAAD;AAAW,QAAA,IAAI,EAAE,KAAjB;AACI,QAAA,MAAM,EAAEa,MADZ;AAGI,QAAA,UAAU,EAAE,MAAIP,iBAAiB,CAACC,QAAD;AAHrC,SAESO,KAFT;AAAA;AAAA;AAAA;AAAA,cAAP;AAOL,KAVkC;AAvBtC;AAAA;AAAA;AAAA;AAAA,UAFA;AAkDC,CA7FD;;GAAMb,kB;;KAAAA,kB;AAgGN,eAAeA,kBAAf","sourcesContent":["import React,{useRef,useEffect} from 'react';\nimport classes from './NoticeBoxContainer.module.css';\nimport NoticeBox from './NoticeBox';\n\n\nimport {marknoticeasread} from '../../../../CommonApps/AllAPICalls';\n\nfunction containsObject(obj, list) {\n\n\n    var i;\n    for (i = 0; i < list.length; i++) {\n        if (list[i].id === obj.id) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n\n\n\n\n\nconst NoticeBoxContainer =(props)=>{\n\n\n   //console.log(\"NoticeBox Container rendering. . .\");\n\n\n   const isMounted = useRef(false);\n\n    useEffect(() => {\n    isMounted.current = true;\n    props.passMountInfo(true);\n    return () => {\n            isMounted.current = false\n            props.passMountInfo(false);\n    }\n   }, [props]);\n\n\n\n\n\n\n\n   const markAsReadHandler=(noticeId)=>{\n          //console.log(\"mark as read\", noticeId);     \t   \n\t   marknoticeasread({noticeId});\t  \n\t  // window.location.reload(false);\n   }\n\n\n\n\n   console.log(\"dashboardNotice: \", props.dashboardNotice);\n\n\n\n\n\n\n\n\n\n\nreturn (\n\n<div className={classes.noticeBoxContainer}>\n\n\n\n\n\n   {/* props.dashboardNotice !==null && props.dashboardNotice.dashnotices !==null &&  props.dashboardNotice.dashnotices.map((notice, index)=>{\n\n           let list = props.userData.noticeids;\n\t   let isRead = containsObject(notice, list);\n           let noticeId = notice.id;\n          return <NoticeBox read={!isRead} \n\t                    Notice={notice} \n\t                    key={index}\n                            markAsRead={()=>markAsReadHandler(noticeId)}\n\n\t\t   />\n\n      })\n   */}\n\n\n\n   { props.dashboardNotice !==null && props.dashboardNotice.map((notice, index)=>{\n\n         let noticeId = notice.id;\n         return <NoticeBox read={false}\n\t                   Notice={notice}\n\t                   key={index}\n\t                   markAsRead={()=>markAsReadHandler(noticeId)}\n\t\t   />\n\n\n   }) \n\n\n\n   }\n\n\n\n\n\n\n</div>\n\n);\n\n}\n\n\nexport default NoticeBoxContainer;\n"]},"metadata":{},"sourceType":"module"}