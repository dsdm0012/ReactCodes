{"ast":null,"code":"var _jsxFileName = \"/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/MainApps/Dashboard/General/NoticeBoard/CreateNoticeForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport classes from \"./CreateNoticeForm.module.css\";\nimport { AiFillCloseCircle } from \"react-icons/ai\";\nimport logoImage from '../../../../CommonApps/BWlogo.JPG';\nimport { ParagraphField, TextInput, CheckBoxInput } from './FormInputObjects';\nimport { getuser, getteachercourses, createnotice } from '../../../../CommonApps/AllAPICalls';\nimport FadeLoader from \"react-spinners/FadeLoader\";\nimport { css } from \"@emotion/react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nconst CreateCourseForm = props => {\n  _s();\n\n  let [loading, setLoading] = useState(true);\n  let [color, setColor] = useState(\" var(--themeColor)\");\n  const [data, setData] = useState({});\n  const [teacherCourses, setTeacherCourses] = useState([]);\n  const [formSubmitted, setFormSubmitted] = useState(false);\n  useEffect(() => {\n    getuser({\n      setData\n    });\n  }, []);\n  useEffect(() => {\n    let teacherId = data.id;\n    getteachercourses({\n      teacherId,\n      setTeacherCourses\n    });\n  }, [data.id]);\n  const [checkedCourses, setCheckedCourses] = useState([]);\n  const initialFormData = Object.freeze({\n    creater: 1,\n    noticeTitle: \"\",\n    noticeText: \"\",\n    postCourses: []\n  });\n  const [formData, updateFormData] = useState(initialFormData);\n\n  const handleChange = e => {\n    updateFormData({ ...formData,\n      [e.target.name]: e.target.value.trim()\n    });\n  };\n\n  const handleChangePostData = ({\n    checkedState\n  }) => {};\n\n  const [showForm, setShowForm] = useState(true);\n\n  const handleSubmit = e => {\n    e.preventDefault(); //setShowForm(false);\n\n    if (formData.noticeTitle === \"\") {\n      alert('please enter notice title');\n      return null;\n    }\n\n    if (formData.noticeText === \"\") {\n      alert('please fill notice text');\n      return null;\n    }\n\n    let selectedCourseIds = [];\n    props.courseData.map((course, index) => {\n      {\n        props.courseData.length === checkedCourses.length && checkedCourses[index] && selectedCourseIds.push(course.id);\n      }\n    });\n\n    if (selectedCourseIds.length === 0) {\n      alert('You cannot post a notice without selecting a course. If you do not have a course, first create one!');\n      return null;\n    }\n\n    createnotice({\n      data,\n      formData,\n      selectedCourseIds\n    });\n    alert(\"Notice posted successfully\");\n    props.onPress(); // props.onPress();\n    // setFormSubmitted(!formSubmitted);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.createTicketFormDivParent,\n    children: [!showForm && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.createTicketFormLoading,\n      children: [/*#__PURE__*/_jsxDEV(FadeLoader, {\n        color: color,\n        loading: loading,\n        css: \"\",\n        size: 50\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.submittingDiv,\n        children: \" Creating . . . \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 5\n    }, this), showForm && /*#__PURE__*/_jsxDEV(\"form\", {\n      className: classes.createTicketForm,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.closeButtonDiv,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: props.onPress,\n          className: classes.closeFormButton,\n          children: [\" \", /*#__PURE__*/_jsxDEV(AiFillCloseCircle, {\n            className: classes.closeButtonIcon\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 78\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.logoAndTitleContainer,\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: classes.bwLogo,\n          src: logoImage,\n          alt: \"edr Logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.formTitleDiv,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            children: \"  Create a notice \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 50\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 12\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n        label: \"Notice Title\",\n        placeholder: \"What is the notice about?\",\n        name: \"noticeTitle\",\n        handleChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(ParagraphField, {\n        label: \"Describe in detail\",\n        placeholder: \"Notice content\",\n        name: \"noticeText\",\n        handleChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 7\n      }, this), props.courseData.length > 0 && /*#__PURE__*/_jsxDEV(CheckBoxInput, {\n        label: \"Choose where to post\",\n        placeholder: \"jai\",\n        name: \"postCourses\",\n        handleChange: handleChangePostData,\n        Courses: props.courseData,\n        setCheckedCourses: setCheckedCourses\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.submitButtonDiv,\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: classes.submit_button,\n          children: [/*#__PURE__*/_jsxDEV(\"b\", {\n            children: \"Create \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 70\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.emptyDiv,\n        children: \"dshdfjhd sdns dasd ashda sdhasd asdjas djasd asdas da asd asd asd asda asdb sadasdj dDMNASD ASDNBSAD ASDNBADS ADSNBA Dsj dn dcnd ASDNAS DJASD AJSDA DBASD ASDB SADBSA dasjdnbqww dwbdw dd\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 1\n  }, this);\n};\n\n_s(CreateCourseForm, \"osGmvjtx+/rsAhJ+sFnT9dsf8zc=\");\n\n_c = CreateCourseForm;\nexport default CreateCourseForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateCourseForm\");","map":{"version":3,"sources":["/home/bibhu/EDRdevelopment/DevBranch/edresearchweb/src/MainApps/Dashboard/General/NoticeBoard/CreateNoticeForm.js"],"names":["React","useState","useEffect","classes","AiFillCloseCircle","logoImage","ParagraphField","TextInput","CheckBoxInput","getuser","getteachercourses","createnotice","FadeLoader","css","override","CreateCourseForm","props","loading","setLoading","color","setColor","data","setData","teacherCourses","setTeacherCourses","formSubmitted","setFormSubmitted","teacherId","id","checkedCourses","setCheckedCourses","initialFormData","Object","freeze","creater","noticeTitle","noticeText","postCourses","formData","updateFormData","handleChange","e","target","name","value","trim","handleChangePostData","checkedState","showForm","setShowForm","handleSubmit","preventDefault","alert","selectedCourseIds","courseData","map","course","index","length","push","onPress","createTicketFormDivParent","createTicketFormLoading","submittingDiv","createTicketForm","closeButtonDiv","closeFormButton","closeButtonIcon","logoAndTitleContainer","bwLogo","formTitleDiv","submitButtonDiv","submit_button","emptyDiv"],"mappings":"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","sourcesContent":["import React,{useState, useEffect} from \"react\";\nimport classes from \"./CreateNoticeForm.module.css\";\nimport {AiFillCloseCircle} from \"react-icons/ai\";\nimport logoImage from '../../../../CommonApps/BWlogo.JPG'\nimport { ParagraphField,TextInput, CheckBoxInput} from './FormInputObjects';\nimport {getuser, getteachercourses, createnotice} from '../../../../CommonApps/AllAPICalls';\nimport FadeLoader from \"react-spinners/FadeLoader\";\nimport { css } from \"@emotion/react\";\n\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\n\n\nconst CreateCourseForm=(props)=>{\n\n\n  let [loading, setLoading] = useState(true);\n  let [color, setColor] = useState(\" var(--themeColor)\");\n\n  const [data, setData] = useState({});\n  const [teacherCourses,setTeacherCourses] = useState([]);\n  const [formSubmitted,setFormSubmitted] = useState(false);\n\n\n  useEffect(()=>{\n     getuser({setData});\n  },[]);\n\n\n  useEffect(()=>{\n    let teacherId=data.id;\n    getteachercourses({teacherId, setTeacherCourses});\n  },[data.id ]);\n\n\n\n  const [checkedCourses, setCheckedCourses] = useState([]);\n       \n\n\n\n\n  const initialFormData = Object.freeze({\n\n\tcreater:1, \n        noticeTitle: \"\",\n        noticeText: \"\",\n        postCourses: [],\n\n        });\n\n\n\nconst [formData, updateFormData] = useState(initialFormData)\n\n\n\n\nconst handleChange = (e) => {\n        updateFormData({\n                        ...formData,\n                        [e.target.name]: e.target.value.trim(),\n                });\n}\n\n\nconst handleChangePostData = ({checkedState})=>{\n\n\n}\n\n\n\n\nconst [showForm, setShowForm] = useState(true);\n\n\n\nconst handleSubmit = (e) => {\n\t   e.preventDefault();\n\t   //setShowForm(false);\n\t   \n          if(formData.noticeTitle===\"\"){\n\t\t  alert('please enter notice title');\n\t\t  return null;\n\t  }\n\n          if(formData.noticeText===\"\"){\n                  alert('please fill notice text');\n                  return null;\n          }\n\n\n   \n\t let selectedCourseIds=[]\n         props.courseData.map((course,index)=>{\n\n\t\t {props.courseData.length === checkedCourses.length && checkedCourses[index] && selectedCourseIds.push(course.id)}\n\n\t });\n\n\n\n\n         if(selectedCourseIds.length===0){\n                  alert('You cannot post a notice without selecting a course. If you do not have a course, first create one!');\n                  return null;\n          }\n\n\n\n         createnotice({data, formData, selectedCourseIds});\n    \n\n\n\t alert(\"Notice posted successfully\");\n\n\n\n            \n\n\n         \n\n\n         props.onPress();\n\n        // props.onPress();\n\n        // setFormSubmitted(!formSubmitted);\n\n\n\t\n\t\n\t};\n\n\n\n\n\n\n\n\nreturn(\n\n<div className={classes.createTicketFormDivParent}>\n\n   {!showForm &&  \n\t   <div className={classes.createTicketFormLoading}>\n\n\t   <FadeLoader color={color} loading={loading} css={\"\"} size={50}  />\n\t    \n\t   <div className={classes.submittingDiv}> Creating . . . </div>\n           </div>\n   }\n\n\n   { showForm &&\t\n  <form className={classes.createTicketForm} onSubmit={handleSubmit}>\n\n     {/*form close button below*/}\t\n    <div className={classes.closeButtonDiv}>\n        <button onClick={props.onPress} className={classes.closeFormButton}> <AiFillCloseCircle className={classes.closeButtonIcon}/> </button>\n    </div>\t\n\n \n     {/*logo and field title container below*/}\n    <div className={classes.logoAndTitleContainer}>\n\t  <img  className={classes.bwLogo} src={logoImage} alt='edr Logo' />\n           <div className={classes.formTitleDiv}><i>  Create a notice </i></div>\n    </div>\n\n\n\n      <TextInput  label=\"Notice Title\" placeholder=\"What is the notice about?\" name=\"noticeTitle\"  handleChange={handleChange}/>\n\n\n      <ParagraphField label=\"Describe in detail\"  placeholder=\"Notice content\" name=\"noticeText\"  handleChange={handleChange} />\n\n     { props.courseData.length>0 &&\n      <CheckBoxInput \n\t     label=\"Choose where to post\"  \n\t     placeholder=\"jai\"  \n\t     name=\"postCourses\" \n\t     handleChange={handleChangePostData} \n\t     Courses={props.courseData}   \n             setCheckedCourses={setCheckedCourses}  \n\t     />\n     }\n       \n\n\n\n      \n      \n\n\n\n \n \n\n\n\n\n    <div className={classes.submitButtonDiv}>\n          <button type=\"submit\"  className= {classes.submit_button} ><b>Create </b> </button>\n\n    </div>\n\n\n\n\n\n\n    <div className={classes.emptyDiv}>\n\n\n\n     dshdfjhd sdns dasd ashda sdhasd asdjas djasd asdas da asd asd\n     asd asda asdb sadasdj dDMNASD ASDNBSAD ASDNBADS ADSNBA Dsj dn\n     dcnd ASDNAS DJASD AJSDA DBASD ASDB SADBSA dasjdnbqww dwbdw dd\n\n\n    </div>\n  </form>\n\n   }\n\n\n</div>\t\n);\n\n}\n\n\nexport default CreateCourseForm;\n"]},"metadata":{},"sourceType":"module"}